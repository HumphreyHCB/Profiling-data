begin_compilation
  name " HotSpotCompilation-1986[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  method "HotSpotCompilation-1986[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  date 1714038090609
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1175 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j1175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1175 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1202 
=== Usages ===
j1177 j1186 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a1202  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 v1261 v1262 v1263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1202 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: a1203 
=== Usages ===
v1256 
=== Predecessor ===
j1175 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: a1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1203 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: a1204 
=== Usages ===
v1257 
=== Predecessor ===
a1202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - #next: a1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1204 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: a1205 
=== Usages ===
v1258 
=== Predecessor ===
a1203 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: a1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1205 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v203 
=== Usages ===
v1259 
=== Predecessor ===
a1204 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1202 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1203 
=== Succesors ===
=== Usages ===
v203 j1194 v1198 j1196 v1200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1204 
=== Succesors ===
=== Usages ===
v203 v1201 v1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1205 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v1256 v1257 v1258 v1259 
=== Succesors ===
next: a1206 
=== Usages ===
=== Predecessor ===
a1205 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v1256 v1257 v1258 v1259 #next: a1206  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 v1264 v451 ?21 ?28 ?689 v1283 v1299 ?58 ?244 v377 ?679 ?85 v1284 v450 ?112 ?682 v408 ?183 ?683 v415 ?684 ?137 ?685 ?686 v427 ?677 v1282 ?238 ?687 v337 ?269 v1285 v449 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1206 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
a319 v457 v1289 
=== Predecessor ===
v203 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1206 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1206  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v59 i84 v113 v146 v260 v270 i587 v771 v819 ?58 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v408 v187 ?238 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 i32 v336 v45 ?58 v377 ?85 ?683 v97 ?112 v408 ?684 ?685 v415 v546 ?238 ?679 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v336 v50 v400 v1328 ?58 v377 ?85 ?684 v102 v373 ?112 v408 a548 ?238 ?679 ?683 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v336 ?58 a428 v377 ?238 ?85 ?679 ?682 ?112 ?683 v408 ?684 ?685 ?686 ?137 a1106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?58 v146 ?137 ?85 ?679 ?682 ?112 ?683 ?684 ?685 ?686 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?687 ?679 ?58 v260 ?682 ?85 ?183 ?244 ?112 ?683 ?684 ?685 ?686 ?137 ?677 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0017414699907082889
stamp: void
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
a1206 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a20  <|@  <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?679 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a20 <|@
d <@d|@=== Debug Properties ===
bci: 20
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v451 
stateDuring: ?679 
=== Succesors ===
next: i1207 
=== Usages ===
a26 v1288 
=== Predecessor ===
v12 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v451 stateDuring: ?679 #next: i1207  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: dup
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
sourceFile: HashMap.java
sourceLine: 635
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a9 a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a9 a1 i2 a3 a4 i5 i6  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a20 
index: - 
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1207 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-115979|0xfffffffffffe3af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?21 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
i27 
=== Predecessor ===
a20 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?21 guard: - address: v1288 lastLocationAccess: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
i1207 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1208 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1206 
=== Succesors ===
=== Usages ===
i1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1208 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v16 i27 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1208 
y: i15 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1208 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
i1208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v541 #falseSuccessor: v542  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 634
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x3b4f4800]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1206 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: a java.util.HashMap$Node[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v24 
values: a319 a20 
=== Succesors ===
=== Usages ===
?28 v1317 ?677 v1266 ?58 v377 ?85 ?685 ?112 ?683 ?684 v415 ?244 v1265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: a319 a20  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v24 
values: i1208 i1207 
=== Succesors ===
=== Usages ===
?28 i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: i1208 i1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v23 v25 
=== Succesors ===
next: i1209 
=== Usages ===
a26 i27 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v23 v25 #next: i1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1209 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v1210 
=== Usages ===
v339 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1317 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
v836 
=== Predecessor ===
i1209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1317 lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i27 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i27 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v1266 ?677 v339 ?244 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i1209 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i1209  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 636
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - i27 
=== Succesors ===
=== Usages ===
v696 v1251 v1253 a748 a797 v1218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - i27  <|@  <|@
f <@~|@floating>@ <|@
tid j605 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 v1131 j695 v1017 v1113 v1078 v772 v773 v982 v820 v821 v822 v1035 v856 v894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v515 #falseSuccessor: v517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1211 
=== Usages ===
v354 
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a26 
index: i32 
=== Succesors ===
=== Usages ===
a1211 v354 j843 j888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1211 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: v1212 
=== Usages ===
a335 v356 v1268 v1269 v1329 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1212 v1228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
v734 
=== Predecessor ===
a1211 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1212 
=== Succesors ===
=== Usages ===
v219 v256 v1277 v1280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1211 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 i165 i169 i601 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i938 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 v1056 v1152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i902 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j903 j1024 j1120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j901 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j926 v1327 j1046 v1338 j1142 v1347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 v1045 v1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j869 j930 j993 j1048 j1089 j1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v878 v933 v940 v1001 v1051 v1057 v1097 v1147 v1153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v429 v551 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.8210215251749418
stamp: void
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1212 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v36 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 v815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@1c4cfae4
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9996266926576334, 3.7240749684443457E-4, 8.998455222337046E-7, 0.0]
stamp: void
=== Inputs ===
value: v734 
=== Succesors ===
successors: v209 v214 v217 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v734 #successors: v209 v214 v217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j736 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j736 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j764 
=== Usages ===
v1300 v1301 
=== Predecessor ===
v783 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j764  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j736 
index: - 
=== Succesors ===
=== Usages ===
j764 v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j736 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
=== Succesors ===
next: j765 
=== Usages ===
j739 v1302 v1303 a747 v1304 v1305 v1306 v1307 
=== Predecessor ===
j736 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - #next: j765  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j736 
index: - 
=== Succesors ===
=== Usages ===
j765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j736 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
v740 
=== Predecessor ===
j764 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 lastLocationAccess: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j764 
y: j607 
=== Succesors ===
=== Usages ===
v740 v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j764 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j739 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j765 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v741 
=== Usages ===
=== Predecessor ===
j765 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v742 #falseSuccessor: v741  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a748 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a748 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v735 
=== Succesors ===
next: v1251 
=== Usages ===
v1251 a762 
=== Predecessor ===
v742 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v735 #next: v1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-199537|0xfffffffffffcf48f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a748 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
a748 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a748 #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v1251 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
value: j739 
stateAfter: - 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - value: j739 stateAfter: - #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1304 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1304 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
lastLocationAccess: - 
value: j744 
stateAfter: - 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1302 lastLocationAccess: - value: j744 stateAfter: - #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1307 
lastLocationAccess: - 
value: v1163 
stateAfter: - 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1307 lastLocationAccess: - value: v1163 stateAfter: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - value: i15 stateAfter: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - value: j605 stateAfter: - #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1306 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1306 lastLocationAccess: - value: j605 stateAfter: - #next: a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j764 
=== Succesors ===
next: v750 
=== Usages ===
a762 
=== Predecessor ===
v773 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j764 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
a747 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v751 
values: a747 a748 
=== Succesors ===
=== Usages ===
v1292 a552 v1290 v1291 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v751 values: a747 a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: v551 
=== Usages ===
a762 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a762 
index: - 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a762 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
lastLocationAccess: - 
value: a428 
stateAfter: - 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1292 lastLocationAccess: - value: a428 stateAfter: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a762 
index: - 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a762 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a548 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1291 
lastLocationAccess: - 
value: a548 
stateAfter: - 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1291 lastLocationAccess: - value: a548 stateAfter: - #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a762 
index: - 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a762 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - value: i2 stateAfter: - #next: v553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a552 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.HashMap$Node
=== Inputs ===
object: a762 
=== Succesors ===
next: v210 
=== Usages ===
a205 
=== Predecessor ===
v553 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a762 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
a552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j786 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j812 
=== Usages ===
v1308 v1309 
=== Predecessor ===
v832 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j812  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: - 
=== Succesors ===
=== Usages ===
j812 v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j812 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
=== Succesors ===
next: j813 
=== Usages ===
j789 v1310 v1311 a796 v1312 v1313 v1314 v1315 v1316 
=== Predecessor ===
j786 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - #next: j813  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: - 
=== Succesors ===
=== Usages ===
j813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
lastLocationAccess: - 
=== Succesors ===
next: v793 
=== Usages ===
v790 
=== Predecessor ===
j812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 lastLocationAccess: - #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid j604 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 40
stableDimension: 0
stamp: i64 [40]
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j812 
y: j604 
=== Succesors ===
=== Usages ===
v790 v814 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j812 y: j604  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j813 
y: j789 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j813 y: j789  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v790 
=== Succesors ===
trueSuccessor: v792 
falseSuccessor: v791 
=== Usages ===
=== Predecessor ===
j813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v790 #trueSuccessor: v792 #falseSuccessor: v791  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a797 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a797  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a797 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v785 
=== Succesors ===
next: v1253 
=== Usages ===
v1253 a810 
=== Predecessor ===
v792 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v785 #next: v1253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-212081|0xfffffffffffcc38f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a797 
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
a797 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a797 #next: v801  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
v1253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
value: j789 
stateAfter: - 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - value: j789 stateAfter: - #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
displacement: 296
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1312 
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1312 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
value: j744 
stateAfter: - 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - value: j744 stateAfter: - #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1316 
lastLocationAccess: - 
value: v1164 
stateAfter: - 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1316 lastLocationAccess: - value: v1164 stateAfter: - #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1311 lastLocationAccess: - value: i15 stateAfter: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1313 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1313 lastLocationAccess: - value: j605 stateAfter: - #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1314 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: v822 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1314 lastLocationAccess: - value: j605 stateAfter: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1315 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: a796 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1315 lastLocationAccess: - value: j605 stateAfter: - #next: a796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j812 
=== Succesors ===
next: v799 
=== Usages ===
a810 
=== Predecessor ===
v822 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j812 #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
a796 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v800 
values: a796 a797 
=== Succesors ===
=== Usages ===
a555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v800 values: a796 a797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v799 v801 
=== Succesors ===
next: v556 
=== Usages ===
a810 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v799 v801 #next: v556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a555 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.LinkedHashMap$Entry
=== Inputs ===
object: a810 
=== Succesors ===
next: v237 
=== Usages ===
v336 ?286 v337 a205 
=== Predecessor ===
v556 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a810 #next: v237  <|@  <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap$Node;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>
=== Inputs ===
arguments: a555 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a555 i2 a3 a4 a9  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 56
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 637
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a1 - - - - i6 
=== Succesors ===
=== Usages ===
?238 ?681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a1 - - - - i6  <|@  <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.hash int:12>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.key Object:16>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.value Object:20>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.next HashMap$Node:24>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.before LinkedHashMap$Entry:28>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.after LinkedHashMap$Entry:32>]
hasIdentity: true
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
objectId: 1
stamp: a!# java.util.LinkedHashMap$Entry
type: HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?681 ?286 ?238 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
sourceFile: LinkedHashMap.java
sourceLine: 281
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
values: a283 a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
?680 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244 values: a283 a1 i2 a3 a4 a9  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a283 
materializedValue: a555 
=== Succesors ===
=== Usages ===
?680 ?681 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a283 materializedValue: a555  <|@  <|@
tid ?680 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap$Entry.<init>(int, Object, Object, HashMap$Node)>
localsSize: 5
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 208
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
virtualObjectMappings: ?286 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238 virtualObjectMappings: ?286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
bci: 6
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap$Node.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v336 
stateDuring: ?680 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
a555 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v336 stateDuring: ?680 #next: v241  <|@  <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/LinkedHashMap$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>
=== Inputs ===
arguments: a1 a555 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a555  <|@  <|@
tid ?681 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 283
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
values: - - - - - a283 
virtualObjectMappings: ?286 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244 values: - - - - - a283 virtualObjectMappings: ?286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#LinkedHashMap.linkNodeAtEnd
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v337 
stateDuring: ?681 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v337 stateDuring: ?681 #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
v241 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
stamp: a! java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v204 
values: a552 a555 
=== Succesors ===
=== Usages ===
v1318 a353 ?677 a887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v204 values: a552 a555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v210 v215 
=== Succesors ===
next: v614 
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v210 v215 #next: v614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1213 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v1213  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1210 
=== Succesors ===
=== Usages ===
v1267 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v836 
index: - 
=== Succesors ===
=== Usages ===
v1213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v836 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
lastLocationAccess: - 
=== Succesors ===
next: i608 
=== Usages ===
v612 v597 v1293 v572 v579 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1267 lastLocationAccess: - #next: i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v1213 
index: - 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i608 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:64) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
=== Succesors ===
next: v1214 
=== Usages ===
v569 j570 
=== Predecessor ===
v1213 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a205 
index: - 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
lastLocationAccess: - 
=== Succesors ===
next: v1215 
=== Usages ===
v839 
=== Predecessor ===
i608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 lastLocationAccess: - #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1214 
=== Succesors ===
=== Usages ===
v1294 v579 v1295 v1298 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i608 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: j570 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: j570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
v572 
=== Predecessor ===
v1214 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1213 
y: v1215 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1213 y: v1215  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v574 #falseSuccessor: v573  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:69) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i568 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i608 
y: i568 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i608 y: i568  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v576 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v577 #falseSuccessor: v576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v839 
y: v1213 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v839 y: v1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v581 #falseSuccessor: v580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:89) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j609 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j609  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: - 
=== Succesors ===
=== Usages ===
j609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j609 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
=== Succesors ===
next: i610 
=== Usages ===
v1296 v1297 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - #next: i610  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j609 
index: - 
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i610 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
lastLocationAccess: - 
=== Succesors ===
next: v585 
=== Usages ===
v588 
=== Predecessor ===
j609 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 lastLocationAccess: - #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i592 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
i610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v586 
values: i15 i601 
=== Succesors ===
=== Usages ===
v588 i601 i606 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v586 values: i15 i601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v585 
=== Succesors ===
next: v591 
=== Usages ===
i587 v589 v598 v602 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v585 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i610 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i587 y: i610  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v588 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v588 #trueSuccessor: v590 #falseSuccessor: v589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 56]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j611 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j611  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i587 
y: i192 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i587 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 12]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i606 
y: i592 
=== Succesors ===
=== Usages ===
j594 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i606 y: i592  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
value: i593 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j609 
index: j594 
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j611 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1297 
lastLocationAccess: - 
=== Succesors ===
next: v600 
=== Usages ===
v596 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1297 lastLocationAccess: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 22]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
=== Inputs ===
input: j611 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j611  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 66]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v596 
y: v1213 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v596 y: v1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
j611 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v598 #falseSuccessor: v599  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
=== Inputs ===
x: i587 
y: i29 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i587 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v586 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v586 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v586 #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: - 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
value: v1213 
stateAfter: - 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - value: v1213 stateAfter: - #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:103) [bci: 104]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v586 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v586 #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v624 v625 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v624 v625 #next: v884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j842 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j842 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j843 
=== Usages ===
v1319 v1321 v1322 
=== Predecessor ===
v884 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1266 
=== Succesors ===
next: i870 
=== Usages ===
v1320 
=== Predecessor ===
j842 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1266 #next: i870  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j842 
index: - 
=== Succesors ===
=== Usages ===
i870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i870 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1319 
lastLocationAccess: - 
=== Succesors ===
next: v847 
=== Usages ===
v878 
=== Predecessor ===
j843 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1319 lastLocationAccess: - #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i870 
y: i877 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i870 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v846 
falseSuccessor: v845 
=== Usages ===
=== Predecessor ===
i870 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v846 #falseSuccessor: v845  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a871 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a871  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
a871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a871 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1320 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
a872 v879 
=== Predecessor ===
v845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1320 lastLocationAccess: - #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a871  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v853 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
a871 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v853 #falseSuccessor: v849  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j873 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j873  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j842 
index: - 
=== Succesors ===
=== Usages ===
j873 v876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j873 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
v856 j869 v1323 
=== Predecessor ===
v849 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1321 lastLocationAccess: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j873 
y: j605 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j873 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid a872 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
j861 v864 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a871  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v856 
=== Succesors ===
trueSuccessor: v858 
falseSuccessor: v857 
=== Usages ===
=== Predecessor ===
j873 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v856 #trueSuccessor: v858 #falseSuccessor: v857  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a872 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a872 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v864 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j874 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j874  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j842 
index: - 
=== Succesors ===
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j874 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1322 
lastLocationAccess: - 
=== Succesors ===
next: j861 
=== Usages ===
v1323 
=== Predecessor ===
v857 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1322 lastLocationAccess: - #next: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a872 
=== Succesors ===
next: v875 
=== Usages ===
v875 
=== Predecessor ===
j874 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a872 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j874 
index: j873 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: j873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
lastLocationAccess: - 
value: j861 
stateAfter: - 
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
j861 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1323 lastLocationAccess: - value: j861 stateAfter: - #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j873 
y: j868 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j873 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
lastLocationAccess: - 
value: j869 
stateAfter: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1321 lastLocationAccess: - value: j869 stateAfter: - #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v876 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v850 v852 v863 v865 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v850 v852 v863 v865 #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Compress
stamp: n! java.util.HashMap$Node
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v515 
address: v1266 
lastLocationAccess: - 
value: a353 
stateAfter: - 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v515 address: v1266 lastLocationAccess: - value: a353 stateAfter: - #next: v946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j886 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a887 
=== Usages ===
v1324 v1325 
=== Predecessor ===
v946 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: a! java.util.HashMap$Node
=== Inputs ===
object: a205 
=== Succesors ===
next: j888 
=== Usages ===
j889 
=== Predecessor ===
j886 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a205 #next: j888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1266 
=== Succesors ===
next: j889 
=== Usages ===
j890 j903 
=== Predecessor ===
a887 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1266 #next: j889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a887 
=== Succesors ===
next: v893 
=== Usages ===
j890 v894 
=== Predecessor ===
j888 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a887 #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid j890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j888 
y: j889 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j888 y: j889  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
x: j890 
y: j924 
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j890 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v925 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v891 
=== Usages ===
=== Predecessor ===
j889 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v925 #trueSuccessor: v892 #falseSuccessor: v891  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j889 
y: j605 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j889 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v899 
falseSuccessor: v895 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v899 #falseSuccessor: v895  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1169  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i931 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i931  <|@  <|@
f <@~|@floating>@ <|@
tid j903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j888 
y: i902 
=== Succesors ===
=== Usages ===
j926 v1327 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j888 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: j901 
=== Succesors ===
=== Usages ===
i931 i932 v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i931 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
=== Succesors ===
next: v907 
=== Usages ===
v939 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i931 
y: i938 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i931 y: i938  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v939 
=== Succesors ===
trueSuccessor: v906 
falseSuccessor: v904 
=== Usages ===
=== Predecessor ===
i931 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v939 #trueSuccessor: v906 #falseSuccessor: v904  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i932 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i932 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
v940 
=== Predecessor ===
v908 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i877 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i932 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v909 
=== Usages ===
=== Predecessor ===
i932 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v911 #falseSuccessor: v909  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
value: i877 
stateAfter: - 
=== Succesors ===
next: j934 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - value: i877 stateAfter: - #next: j934  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j934 v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j934 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
lastLocationAccess: - 
=== Succesors ===
next: v917 
=== Usages ===
v914 j930 v1326 
=== Predecessor ===
v933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 lastLocationAccess: - #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j934 
y: j605 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j934 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid j926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j903 
y: j901 
=== Succesors ===
=== Usages ===
v921 v936 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j903 y: j901  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
j934 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v916 #falseSuccessor: v915  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j926 
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j926 #next: v1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j935 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j935 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1325 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
v1326 
=== Predecessor ===
v915 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1325 lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j935 
index: j934 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j935 index: j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1326 
lastLocationAccess: - 
value: j926 
stateAfter: - 
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
j935 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1326 lastLocationAccess: - value: j926 stateAfter: - #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j934 
y: j868 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j934 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
lastLocationAccess: - 
value: j930 
stateAfter: - 
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1324 lastLocationAccess: - value: j930 stateAfter: - #next: v1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:79) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v620 v626 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v620 v626 #next: v520  <|@  <|@
tid ?677 <|@
d <@d|@=== Debug Properties ===
bci: 59
bytecode: aastore
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
sourceFile: HashMap.java
sourceLine: 637
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a205 a1 - - - - i6 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a205 a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 355
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?677 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?677  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -55347
stableDimension: 0
stamp: i32 [-55347]
stampKind: i32
value: int[-55347|0xffffffffffff27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1216 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
i1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1216 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
v45 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1216 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid a335 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1211 
=== Succesors ===
=== Usages ===
v377 ?684 a79 ?58 a79 a83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1218 v1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
profileData: PROFILED designatedSuccessorProbability: 0.024740441782651668
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
i1216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1217 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
a1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1217 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
a363 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1217 
=== Succesors ===
=== Usages ===
v50 v373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1217  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a363 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a363  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
profileData: PROFILED designatedSuccessorProbability: 0.9155742003146303
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a1217 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-93195|0xfffffffffffe93f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v1328 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
v949 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v1328 lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1218 
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v949 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v949 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
=== Succesors ===
next: j372 
=== Usages ===
v1271 v373 
=== Predecessor ===
v1218 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - #next: j372  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v369 
index: - 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: i57 
=== Usages ===
v373 
=== Predecessor ===
v369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: i57  <|@  <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j372 
metaspaceMethod: v369 
arguments: a3 a363 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j372 metaspaceMethod: v369 arguments: a3 a363  <|@  <|@
tid ?684 <|@
d <@d|@=== Debug Properties ===
bci: 91
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a335 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
bci: 91
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v373 
stateDuring: ?684 
=== Succesors ===
next: v636 
=== Usages ===
v59 
=== Predecessor ===
j372 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v373 stateDuring: ?684 #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i15 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v634 #falseSuccessor: v635  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 94
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
sourceFile: HashMap.java
sourceLine: 641
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 a335 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 a335  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x3b4f4855]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 104]}
stamp: void
=== Inputs ===
stateBefore: ?58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1329 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
v1236 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1329 lastLocationAccess: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1219 
y: v1235 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1219 y: v1235  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 109]
profileData: PROFILED designatedSuccessorProbability: 1.0288769444977142E-5
stamp: void
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v1232 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v68 #falseSuccessor: v1232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: a74 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a74  <|@  <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
referencedType: [null]
returnStamp: a# java.util.HashMap$TreeNode
signature: [HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>, UnresolvedJavaType<Ljava/util/HashMap;>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a335 a1 a26 i2 a3 a4 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a335 a1 a26 i2 a3 a4  <|@  <|@
tid ?682 <|@
d <@d|@=== Debug Properties ===
bci: 123
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
bci: 123
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
polymorphic: false
stamp: a# java.util.HashMap$TreeNode
targetMethod: Direct#HashMap$TreeNode.putTreeVal
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v377 
stateDuring: ?682 
=== Succesors ===
next: v78 
=== Usages ===
a79 
=== Predecessor ===
v68 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v377 stateDuring: ?682 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
a74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v1232 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v82 
values: a335 a384 
=== Succesors ===
=== Usages ===
?85 j1011 ?685 v1272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: a335 a384  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v82 
values: i15 i119 
=== Succesors ===
=== Usages ===
?85 v127 ?112 i119 ?685 ?683 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: i15 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v81 
=== Succesors ===
next: a1220 
=== Usages ===
a83 i84 v90 v105 v116 v120 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v81 #next: a1220  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 134
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 647
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84 
=== Succesors ===
=== Usages ===
v1223 v539 a1220 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a83 
index: - 
=== Succesors ===
=== Usages ===
a1220 v414 j969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1220 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-97035|0xfffffffffffe84f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1272 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
a384 v385 v1273 v1274 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1272 lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1220 
=== Succesors ===
=== Usages ===
a79 a79 a79 a83 a79 ?112 ?683 ?685 ?686 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1220  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1220 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 142]
profileData: PROFILED designatedSuccessorProbability: 0.5861486748857938
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
a1220 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v90 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1221 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1220 
=== Succesors ===
=== Usages ===
i1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1221 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1273 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v97 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1273 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1221 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1221  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.8819612515065538
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i1221 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1222 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1220 
=== Succesors ===
=== Usages ===
a1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1222 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
a392 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1222 
=== Succesors ===
=== Usages ===
v102 v400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1222  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a392 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a392  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
profileData: PROFILED designatedSuccessorProbability: 0.9989928379588182
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
a1222 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v105 #falseSuccessor: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 196]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-100619|0xfffffffffffe76f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1328 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
v964 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1328 lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1223 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v964 
index: - 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v964 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
=== Succesors ===
next: j399 
=== Usages ===
v1276 v400 
=== Predecessor ===
v1223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - #next: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v397 
index: - 
=== Succesors ===
=== Usages ===
j399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v397 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
lastLocationAccess: - 
=== Succesors ===
next: i111 
=== Usages ===
v400 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1276 lastLocationAccess: - #next: i111  <|@  <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j399 
metaspaceMethod: v397 
arguments: a3 a392 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j399 metaspaceMethod: v397 arguments: a3 a392  <|@  <|@
tid ?683 <|@
d <@d|@=== Debug Properties ===
bci: 203
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 654
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
bci: 203
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v400 
stateDuring: ?683 
=== Succesors ===
next: v653 
=== Usages ===
v113 
=== Predecessor ===
j399 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v400 stateDuring: ?683 #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i15 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v652 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 206
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
sourceFile: HashMap.java
sourceLine: 654
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x3b4f47c1]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 212]}
stamp: void
=== Inputs ===
stateBefore: ?112 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
stateBefore: ?85 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?85 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 216]
stamp: i32
=== Inputs ===
x: i84 
y: i29 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i84 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 209]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v136  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 145]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
displacement: 680
stamp: void*
stride: S1
=== Inputs ===
base: v734 
index: - 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
=== Succesors ===
next: j407 
=== Usages ===
v1278 v408 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - #next: j407  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v405 
index: - 
=== Succesors ===
=== Usages ===
j407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1278 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
v408 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1278 lastLocationAccess: - #next: a122  <|@  <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
referencedType: [null]
returnStamp: a java.util.HashMap$Node
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j407 
metaspaceMethod: v405 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j407 metaspaceMethod: v405 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?685 <|@
d <@d|@=== Debug Properties ===
bci: 152
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 648
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a83 a1 i2 - a4 i5 i6 a26 - - - a384 - i84 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a83 a1 i2 - a4 i5 i6 a26 - - - a384 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
bci: 152
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
polymorphic: true
stamp: a java.util.HashMap$Node
targetMethod: Indirect#HashMap.newNode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v408 
stateDuring: ?685 
=== Succesors ===
next: v1007 
=== Usages ===
a1010 a412 
=== Predecessor ===
j407 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v408 stateDuring: ?685 #next: v1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j968 
=== Usages ===
=== Predecessor ===
a122 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j968 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j969 
=== Usages ===
v1330 v1332 v1333 
=== Predecessor ===
v1007 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1272 
=== Succesors ===
next: i994 
=== Usages ===
v1331 
=== Predecessor ===
j968 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1272 #next: i994  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j968 
index: - 
=== Succesors ===
=== Usages ===
i994 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j968 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i994 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1330 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
v1001 
=== Predecessor ===
j969 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1330 lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i994 
y: i877 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i994 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1001 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v971 
=== Usages ===
=== Predecessor ===
i994 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1001 #trueSuccessor: v972 #falseSuccessor: v971  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v976  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: a995 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a995  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j969 
index: - 
=== Succesors ===
=== Usages ===
a995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j969 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a995 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1331 
lastLocationAccess: - 
=== Succesors ===
next: v980 
=== Usages ===
a996 v1002 
=== Predecessor ===
v971 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1331 lastLocationAccess: - #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a995 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a995  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1002 
=== Succesors ===
trueSuccessor: v979 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
a995 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1002 #trueSuccessor: v979 #falseSuccessor: v975  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j997 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j997  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j968 
index: - 
=== Succesors ===
=== Usages ===
j997 v1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j968 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j997 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
v982 j993 v1334 
=== Predecessor ===
v975 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1332 lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j605 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j997 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid a996 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a995 
=== Succesors ===
=== Usages ===
j987 v990 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a995  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v982 
=== Succesors ===
trueSuccessor: v984 
falseSuccessor: v983 
=== Usages ===
=== Predecessor ===
j997 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v982 #trueSuccessor: v984 #falseSuccessor: v983  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a996 
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a996 #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j998 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j998  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j968 
index: - 
=== Succesors ===
=== Usages ===
j998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j968 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j998 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1333 
lastLocationAccess: - 
=== Succesors ===
next: j987 
=== Usages ===
v1334 
=== Predecessor ===
v983 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1333 lastLocationAccess: - #next: j987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a996 
=== Succesors ===
next: v999 
=== Usages ===
v999 
=== Predecessor ===
j998 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a996 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j998 
index: j997 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j998 index: j997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1334 
lastLocationAccess: - 
value: j987 
stateAfter: - 
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
j987 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1334 lastLocationAccess: - value: j987 stateAfter: - #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j997 
y: j868 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j997 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
lastLocationAccess: - 
value: j993 
stateAfter: - 
=== Succesors ===
next: v989 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1332 lastLocationAccess: - value: j993 stateAfter: - #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v1000 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v976 v978 v989 v991 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v976 v978 v989 v991 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Compress
stamp: n java.util.HashMap$Node
=== Inputs ===
value: a122 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.next
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1272 
lastLocationAccess: - 
value: a412 
stateAfter: - 
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1272 lastLocationAccess: - value: a412 stateAfter: - #next: v1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1009 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1009 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1010 
=== Usages ===
v1335 v1336 
=== Predecessor ===
v1063 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a122 
=== Succesors ===
next: j1011 
=== Usages ===
j1012 
=== Predecessor ===
j1009 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a122 #next: j1011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a83 
=== Succesors ===
next: j1012 
=== Usages ===
j1013 j1024 
=== Predecessor ===
a1010 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a83 #next: j1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1010 
=== Succesors ===
next: v1016 
=== Usages ===
j1013 v1017 
=== Predecessor ===
j1011 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1010 #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid j1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j1011 
y: j1012 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1011 y: j1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
x: j1013 
y: j924 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1013 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1045 
=== Succesors ===
trueSuccessor: v1015 
falseSuccessor: v1014 
=== Usages ===
=== Predecessor ===
j1012 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1045 #trueSuccessor: v1015 #falseSuccessor: v1014  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1012 
y: j605 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1012 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1017 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1018 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1017 #trueSuccessor: v1022 #falseSuccessor: v1018  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1022 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1049 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid j1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1011 
y: i902 
=== Succesors ===
=== Usages ===
j1046 v1338 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1011 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: j901 
=== Succesors ===
=== Usages ===
i1049 i1050 v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1049 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
=== Succesors ===
next: v1028 
=== Usages ===
v1056 
=== Predecessor ===
v1018 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1049 
y: i938 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1049 y: i938  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1025 
=== Usages ===
=== Predecessor ===
i1049 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v1027 #falseSuccessor: v1025  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1027 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1050 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
=== Succesors ===
next: v1033 
=== Usages ===
v1057 
=== Predecessor ===
v1029 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1050 
y: i877 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1050 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1032 #falseSuccessor: v1030  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
value: i877 
stateAfter: - 
=== Succesors ===
next: j1052 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - value: i877 stateAfter: - #next: j1052  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: - 
=== Succesors ===
=== Usages ===
j1052 v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1052 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1335 
lastLocationAccess: - 
=== Succesors ===
next: v1038 
=== Usages ===
v1035 j1048 v1337 
=== Predecessor ===
v1051 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1335 lastLocationAccess: - #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1052 
y: j605 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1052 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid j1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1024 
y: j901 
=== Succesors ===
=== Usages ===
v1042 v1054 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1024 y: j901  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1035 
=== Succesors ===
trueSuccessor: v1037 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
j1052 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1035 #trueSuccessor: v1037 #falseSuccessor: v1036  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1046 
=== Succesors ===
next: v1043 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1046 #next: v1043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1042 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1053 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: - 
=== Succesors ===
=== Usages ===
j1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1053 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1336 
lastLocationAccess: - 
=== Succesors ===
next: v1054 
=== Usages ===
v1337 
=== Predecessor ===
v1036 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1336 lastLocationAccess: - #next: v1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1053 
index: j1052 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1053 index: j1052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1337 
lastLocationAccess: - 
value: j1046 
stateAfter: - 
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
j1053 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1337 lastLocationAccess: - value: j1046 stateAfter: - #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid j1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j1052 
y: j868 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1052 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1335 
lastLocationAccess: - 
value: j1048 
stateAfter: - 
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1335 lastLocationAccess: - value: j1048 stateAfter: - #next: v1041  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1019 v1021 v1026 v1031 v1041 v1043 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1019 v1021 v1026 v1031 v1041 v1043 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 160]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i126 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i84 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
profileData: PROFILED designatedSuccessorProbability: 0.9999852699864189
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a26 i2 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a26 i2  <|@  <|@
tid ?686 <|@
d <@d|@=== Debug Properties ===
bci: 169
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 650
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a384 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: 169
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v415 
stateDuring: ?686 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v415 stateDuring: ?686 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v77 
values: a335 a74 a384 a384 a384 a384 a335 
=== Succesors ===
=== Usages ===
?137 v138 j1107 v427 v1279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: a335 a74 a384 a384 a384 a384 a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 v104 v129 v135 v136 v188 
=== Succesors ===
next: v144 
=== Usages ===
a79 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 v104 v129 v135 v136 v188 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a79 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a79  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
profileData: PROFILED designatedSuccessorProbability: 0.6009546268952672
stamp: void
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v143 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v140 v142 v1165 v1166 v1167 v1168 v1169 
=== Succesors ===
next: i1224 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v140 v142 v1165 v1166 v1167 v1168 v1169 #next: i1224  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1224 v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1224 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 261]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
i165 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 265]
stamp: i32
=== Inputs ===
x: i1224 
y: i29 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1224 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 266]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
value: i165 
stateAfter: - 
=== Succesors ===
next: i1225 
=== Usages ===
=== Predecessor ===
i1224 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - value: i165 stateAfter: - #next: i1225  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1225 v435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1225 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 271]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: v435 
=== Usages ===
i169 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 275]
stamp: i32
=== Inputs ===
x: i1225 
y: i29 
=== Succesors ===
=== Usages ===
v435 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1225 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 277]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
value: i169 
stateAfter: - 
=== Succesors ===
next: i1226 
=== Usages ===
=== Predecessor ===
i1225 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - value: i169 stateAfter: - #next: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1226 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.threshold
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 281]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
v173 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i169 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1226 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
profileData: PROFILED designatedSuccessorProbability: 8.044266462171601E-4
stamp: void
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
i1226 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v175 #falseSuccessor: v174  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 287]
stamp: void
=== Inputs ===
=== Succesors ===
next: a178 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a178  <|@  <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?687 <|@
d <@d|@=== Debug Properties ===
bci: 288
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 669
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
bci: 288
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v450 
stateDuring: ?687 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v450 stateDuring: ?687 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
a178 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v180 v182 
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v180 v182 #next: v256  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 292
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
v1350 v1255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@40711f3d
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9995620457234738, 4.371573750612191E-4, 7.969014649553474E-7, 0.0]
stamp: void
=== Inputs ===
value: v734 
=== Succesors ===
successors: v248 v252 v255 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v734 #successors: v248 v252 v255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v248 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i15 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i6 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: PROFILED designatedSuccessorProbability: 0.4908637873754153
stamp: void
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v262 #falseSuccessor: v261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v262 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 4]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1227 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1227 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.LinkedHashMap$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedHashMap.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: n java.util.LinkedHashMap$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
=== Succesors ===
next: v1255 
=== Usages ===
a442 v1349 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - #next: v1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1227 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?183 
object: v1349 
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
a1227 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?183 object: v1349 #next: v1228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
v1162 
=== Predecessor ===
v1255 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1228 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1228  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
displacement: 872
stamp: void*
stride: S1
=== Inputs ===
base: v1162 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1162 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: j448 
=== Usages ===
v1287 v449 
=== Predecessor ===
v1228 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v446 
index: - 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
=== Succesors ===
next: i268 
=== Usages ===
v449 
=== Predecessor ===
v446 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - #next: i268  <|@  <|@
f <@~|@floating>@ <|@
tid a442 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: a java.util.LinkedHashMap$Entry
=== Inputs ===
value: a1227 
=== Succesors ===
=== Usages ===
?269 v449 ?689 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1227  <|@  <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/Map$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>
=== Inputs ===
computedAddress: j448 
metaspaceMethod: v446 
arguments: a1 a442 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j448 metaspaceMethod: v446 arguments: a1 a442  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 295
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?269 ?689 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?689 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?277 
values: a1 - a442 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?277 values: a1 - a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#LinkedHashMap.removeEldestEntry
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v449 
stateDuring: ?689 
=== Succesors ===
next: v667 
=== Usages ===
?269 v270 
=== Predecessor ===
j448 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v449 stateDuring: ?689 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i15 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i268 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
i268 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v665 #falseSuccessor: v666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v253 v278 
=== Succesors ===
next: j1185 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v253 v278 #next: j1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1196 
=== Usages ===
j1186 
=== Predecessor ===
v245 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1196 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v1200 
=== Usages ===
j1188 j1192 
=== Predecessor ===
j1185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid j1186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
x: j1185 
y: j1175 
=== Succesors ===
=== Usages ===
j1188 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1185 y: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid j1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
x: j1186 
y: j1196 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1186 y: j1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
value: j1188 
stateAfter: - 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
j1196 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - value: j1188 stateAfter: - #next: v1201  <|@  <|@
f <@~|@floating>@ <|@
tid i1191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
x: j1196 
y: i1191 
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1196 y: i1191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: j1192 
stateAfter: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: j1192 stateAfter: - #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
=== Inputs ===
memoryMap: - 
result: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: ifeq
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?277 
values: i268 a1 - a442 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?277 values: i268 a1 - a442  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
reason: UnreachedCode
speculation: {0x0000000000002814[index: 320, len: 20, hash: 0x56fc92f9]: UnreachedCode@5[HotSpotMethod<LinkedHashMap.afterNodeInsertion(boolean)>, 21]}
stamp: void
=== Inputs ===
stateBefore: ?269 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 254
mayConvertToGuard: true
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002314[index: 280, len: 20, hash: 0xf2f813fc]: FallbackDeopt@8[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 295, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 227]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1229 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a79 
index: - 
=== Succesors ===
=== Usages ===
a1229 v429 j1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a79 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1229 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
a421 v1348 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i15 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
profileData: PROFILED designatedSuccessorProbability: 0.9999955633968408
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
a1229 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 244]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1064 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1064 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1065 
=== Usages ===
v1339 v1341 v1342 
=== Predecessor ===
v1103 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1065  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1279 
=== Succesors ===
next: i1090 
=== Usages ===
v1340 
=== Predecessor ===
j1064 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1279 #next: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
i1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1339 
lastLocationAccess: - 
=== Succesors ===
next: v1069 
=== Usages ===
v1097 
=== Predecessor ===
j1065 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1339 lastLocationAccess: - #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1090 
y: i877 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1090 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
i1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v1068 #falseSuccessor: v1067  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1091 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1065 
index: - 
=== Succesors ===
=== Usages ===
a1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1065 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1091 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1340 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
a1092 v1098 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1340 lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1098 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
a1091 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1098 #trueSuccessor: v1075 #falseSuccessor: v1071  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1093 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1093 v1096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1093 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1341 
lastLocationAccess: - 
=== Succesors ===
next: v1081 
=== Usages ===
v1078 j1089 v1343 
=== Predecessor ===
v1071 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1341 lastLocationAccess: - #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1093 
y: j605 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1093 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid a1092 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
j1083 v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1079 
=== Usages ===
=== Predecessor ===
j1093 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v1080 #falseSuccessor: v1079  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1092 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1092 #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1094 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1094  <|@  <|@
f <@~|@floating>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1094 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1342 
lastLocationAccess: - 
=== Succesors ===
next: j1083 
=== Usages ===
v1343 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1342 lastLocationAccess: - #next: j1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1092 
=== Succesors ===
next: v1095 
=== Usages ===
v1095 
=== Predecessor ===
j1094 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1092 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1094 
index: j1093 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1094 index: j1093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1343 
lastLocationAccess: - 
value: j1083 
stateAfter: - 
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
j1083 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1343 lastLocationAccess: - value: j1083 stateAfter: - #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1093 
y: j868 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1093 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1341 
lastLocationAccess: - 
value: j1089 
stateAfter: - 
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1341 lastLocationAccess: - value: j1089 stateAfter: - #next: v1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1072 v1074 v1085 v1087 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1072 v1074 v1085 v1087 #next: v429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.value
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
lastLocationAccess: - 
value: a428 
stateAfter: - 
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1279 lastLocationAccess: - value: a428 stateAfter: - #next: v1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1105 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1105 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1106 
=== Usages ===
v1344 v1345 
=== Predecessor ===
v1159 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: a java.lang.Object
=== Inputs ===
object: a4 
=== Succesors ===
next: j1107 
=== Usages ===
j1108 
=== Predecessor ===
j1105 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4 #next: j1107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a79 
=== Succesors ===
next: j1108 
=== Usages ===
j1109 j1120 
=== Predecessor ===
a1106 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a79 #next: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1106 
=== Succesors ===
next: v1112 
=== Usages ===
j1109 v1113 
=== Predecessor ===
j1107 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1106 #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid j1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1107 
y: j1108 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1107 y: j1108  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
x: j1109 
y: j924 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1109 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1110 
=== Usages ===
=== Predecessor ===
j1108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1111 #falseSuccessor: v1110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1108 
y: j605 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1108 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1113 
=== Succesors ===
trueSuccessor: v1118 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
v1110 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1113 #trueSuccessor: v1118 #falseSuccessor: v1114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1145 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1145  <|@  <|@
f <@~|@floating>@ <|@
tid j1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1107 
y: i902 
=== Succesors ===
=== Usages ===
j1142 v1347 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1107 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1120 
index: j901 
=== Succesors ===
=== Usages ===
i1145 i1146 v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1120 index: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
=== Succesors ===
next: v1124 
=== Usages ===
v1152 
=== Predecessor ===
v1114 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - #next: v1124  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1145 
y: i938 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1145 y: i938  <|@  <|@
f <@*|@fixed>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1152 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1121 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1152 #trueSuccessor: v1123 #falseSuccessor: v1121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1123 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1146 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1146 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
=== Succesors ===
next: v1129 
=== Usages ===
v1153 
=== Predecessor ===
v1125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1146 
y: i877 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1146 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v1128 
falseSuccessor: v1126 
=== Usages ===
=== Predecessor ===
i1146 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v1128 #falseSuccessor: v1126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1128 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
value: i877 
stateAfter: - 
=== Succesors ===
next: j1148 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - value: i877 stateAfter: - #next: j1148  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1105 
index: - 
=== Succesors ===
=== Usages ===
j1148 v1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1148 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1344 
lastLocationAccess: - 
=== Succesors ===
next: v1134 
=== Usages ===
v1131 j1144 v1346 
=== Predecessor ===
v1147 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1344 lastLocationAccess: - #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1148 
y: j605 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1148 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid j1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1120 
y: j901 
=== Succesors ===
=== Usages ===
v1138 v1150 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1120 y: j901  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1133 
falseSuccessor: v1132 
=== Usages ===
=== Predecessor ===
j1148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1133 #falseSuccessor: v1132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1142 
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1142 #next: v1170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1149 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1149  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1105 
index: - 
=== Succesors ===
=== Usages ===
j1149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1149 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1345 
lastLocationAccess: - 
=== Succesors ===
next: v1150 
=== Usages ===
v1346 
=== Predecessor ===
v1132 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1345 lastLocationAccess: - #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1149 
index: j1148 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1149 index: j1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
lastLocationAccess: - 
value: j1142 
stateAfter: - 
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
j1149 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1346 lastLocationAccess: - value: j1142 stateAfter: - #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid j1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1148 
y: j868 
=== Succesors ===
=== Usages ===
v1151 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1148 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1344 
lastLocationAccess: - 
value: j1144 
stateAfter: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1344 lastLocationAccess: - value: j1144 stateAfter: - #next: v1171  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1151 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 239]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1247  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 222
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 659
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a79 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a79  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1229 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?137 
object: v1348 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: v1348 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1247 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v157 v1170 v1171 v1172 v1173 v1174 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v157 v1170 v1171 v1172 v1173 v1174 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
displacement: 688
stamp: void*
stride: S1
=== Inputs ===
base: v734 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
=== Succesors ===
next: j426 
=== Usages ===
v1281 v427 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - #next: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v424 
index: - 
=== Succesors ===
=== Usages ===
j426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
v427 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: v160  <|@  <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
computedAddress: j426 
metaspaceMethod: v424 
arguments: a1 a79 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j426 metaspaceMethod: v424 arguments: a1 a79  <|@  <|@
f <@~|@floating>@ <|@
tid a421 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1229 
=== Succesors ===
=== Usages ===
v162 ?688 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1229  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 253
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - a421 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
bci: 253
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeAccess
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v427 
stateDuring: ?688 
=== Succesors ===
next: j1176 
=== Usages ===
=== Predecessor ===
j426 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v427 stateDuring: ?688 #next: j1176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1194 
=== Usages ===
j1177 
=== Predecessor ===
v160 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1194 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v1198 
=== Usages ===
j1179 j1183 
=== Predecessor ===
j1176 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
x: j1176 
y: j1175 
=== Succesors ===
=== Usages ===
j1179 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1176 y: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid j1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
x: j1177 
y: j1194 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1177 y: j1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
value: j1179 
stateAfter: - 
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
j1194 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - value: j1179 stateAfter: - #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid i1182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
x: j1194 
y: i1182 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1194 y: i1182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: j1183 
stateAfter: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: j1183 stateAfter: - #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
=== Inputs ===
memoryMap: - 
result: a421 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a421  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i698 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -83739
stableDimension: 0
stamp: i32 [-83739]
stampKind: i32
value: int[-83739|0xfffffffffffeb8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [-83739 - -55347] bits:1...1xx01xxxxx11x0x101
valueDescription: i32
=== Inputs ===
merge: v691 
values: i698 i700 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v691 values: i698 i700  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v691 
values: j605 j701 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v691 values: j605 j701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v699 
=== Succesors ===
next: v696 
=== Usages ===
i694 j695 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v699 #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i694 
speculation: j695 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i694 speculation: j695  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1175 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j1175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1175 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1202 
=== Usages ===
j1177 j1186 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a1202  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 v1261 v1262 v1263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result [v9|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1202 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: a1203 
=== Usages ===
v1256 
=== Predecessor ===
j1175 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: a1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result [v9|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1203 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: a1204 
=== Usages ===
v1257 
=== Predecessor ===
a1202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - #next: a1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
result [v9|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1204 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: a1205 
=== Usages ===
v1258 
=== Predecessor ===
a1203 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: a1205  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
result [v9|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a299 
index: - 
=== Succesors ===
=== Usages ===
a1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1205 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v203 
=== Usages ===
v1259 
=== Predecessor ===
a1204 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [v10|DWORD[_] * 8 + 15904] <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1202 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [v11|DWORD[_] * 8 + 15904] <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1203 
=== Succesors ===
=== Usages ===
v203 j1194 v1198 j1196 v1200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [v12|DWORD[_] * 8 + 15904] <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1204 
=== Succesors ===
=== Usages ===
v203 v1201 v1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1204  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [v13|DWORD[_] * 8 + 15904] <|@
d <@d|@=== Debug Properties ===
displacement: 15904
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1205 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v1256 v1257 v1258 v1259 
=== Succesors ===
next: a1206 
=== Usages ===
=== Predecessor ===
a1205 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v1256 v1257 v1258 v1259 #next: a1206  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 v1264 v451 ?21 ?28 ?689 v1283 v1299 ?58 ?244 v377 ?679 ?85 v1284 v450 ?112 ?682 v408 ?183 ?683 v415 ?684 ?137 ?685 ?686 v427 ?677 v1282 ?238 ?687 v337 ?269 v1285 v449 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1206 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: v13 
=== Usages ===
a319 v457 v1289 
=== Predecessor ===
v203 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 lastLocationAccess: - #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1206 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1206  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v59 i84 v113 v146 v260 v270 i587 v771 v819 ?58 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v408 v187 ?238 ?21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 i32 v336 v45 ?58 v377 ?85 ?683 v97 ?112 v408 ?684 ?685 v415 v546 ?238 ?679 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v336 v50 v400 v1328 ?58 v377 ?85 ?684 v102 v373 ?112 v408 a548 ?238 ?679 ?683 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v336 ?58 a428 v377 ?238 ?85 ?679 ?682 ?112 ?683 v408 ?684 ?685 ?686 ?137 a1106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?58 v146 ?137 ?85 ?679 ?682 ?112 ?683 ?684 ?685 ?686 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?687 ?679 ?58 v260 ?682 ?85 ?183 ?244 ?112 ?683 ?684 ?685 ?686 ?137 ?677 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0017414699907082889
stamp: void
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
a1206 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a20  <|@  <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?679 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a20 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 20
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v451 
stateDuring: ?679 
=== Succesors ===
next: i1207 
=== Usages ===
a26 v1288 
=== Predecessor ===
v12 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v451 stateDuring: ?679 #next: i1207  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: dup
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
sourceFile: HashMap.java
sourceLine: 635
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a9 a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a9 a1 i2 a3 a4 i5 i6  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result [v15|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a20 
index: - 
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1207 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-115979|0xfffffffffffe3af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?21 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v25 
=== Usages ===
i27 
=== Predecessor ===
a20 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?21 guard: - address: v1288 lastLocationAccess: - #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
i1207 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1208 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
result [v14|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1206 
=== Succesors ===
=== Usages ===
i1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1208 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v16 i27 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1208 
y: i15 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1208 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
i1208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v541 #falseSuccessor: v542  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 634
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x3b4f4800]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1206 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a26 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: a java.util.HashMap$Node[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v24 
values: a319 a20 
=== Succesors ===
=== Usages ===
?28 v1317 ?677 v1266 ?58 v377 ?85 ?685 ?112 ?683 ?684 v415 ?244 v1265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: a319 a20  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v24 
values: i1208 i1207 
=== Succesors ===
=== Usages ===
?28 i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: i1208 i1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v23 v25 
=== Succesors ===
next: i1209 
=== Usages ===
a26 i27 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v23 v25 #next: i1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
result [v19|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1209 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v1210 
=== Usages ===
v339 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
result [v19|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1210 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1317 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
v836 
=== Predecessor ===
i1209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1317 lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i27 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i27 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v1266 ?677 v339 ?244 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i1209 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i1209  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 636
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - i27 
=== Succesors ===
=== Usages ===
v696 v1251 v1253 a748 a797 v1218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - i27  <|@  <|@
f <@~|@floating>@ <|@
tid j605 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 v1131 j695 v1017 v1113 v1078 v772 v773 v982 v820 v821 v822 v1035 v856 v894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v515 #falseSuccessor: v517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1211 
=== Usages ===
v354 
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
result [v19|QWORD[.] + v24|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a26 
index: i32 
=== Succesors ===
=== Usages ===
a1211 v354 j843 j888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1211 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: v1212 
=== Usages ===
a335 v356 v1268 v1269 v1329 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1212 v1228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1212 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
v734 
=== Predecessor ===
a1211 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1212 
=== Succesors ===
=== Usages ===
v219 v256 v1277 v1280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1211 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 i165 i169 i601 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i938 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 v1056 v1152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i902 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j903 j1024 j1120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j901 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j926 v1327 j1046 v1338 j1142 v1347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 v1045 v1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j869 j930 j993 j1048 j1089 j1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v878 v933 v940 v1001 v1051 v1057 v1097 v1147 v1153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v429 v551 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.8210215251749418
stamp: void
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1212 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v36 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 v815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@1c4cfae4
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9996266926576334, 3.7240749684443457E-4, 8.998455222337046E-7, 0.0]
stamp: void
=== Inputs ===
value: v734 
=== Succesors ===
successors: v209 v214 v217 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v734 #successors: v209 v214 v217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j736 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j736 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j764 
=== Usages ===
v1300 v1301 
=== Predecessor ===
v783 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j764  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j736 
index: - 
=== Succesors ===
=== Usages ===
j764 v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j736 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j764 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
=== Succesors ===
next: j765 
=== Usages ===
j739 v1302 v1303 a747 v1304 v1305 v1306 v1307 
=== Predecessor ===
j736 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - #next: j765  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j736 
index: - 
=== Succesors ===
=== Usages ===
j765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j736 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
v740 
=== Predecessor ===
j764 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 lastLocationAccess: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i64 [32]
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j764 
y: j607 
=== Succesors ===
=== Usages ===
v740 v766 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j764 y: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j765 
y: j739 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j765 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v741 
=== Usages ===
=== Predecessor ===
j765 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v742 #falseSuccessor: v741  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a748 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a748 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v735 
=== Succesors ===
next: v1251 
=== Usages ===
v1251 a762 
=== Predecessor ===
v742 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v735 #next: v1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-199537|0xfffffffffffcf48f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a748 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
a748 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a748 #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v1251 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
value: j739 
stateAfter: - 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - value: j739 stateAfter: - #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
result [v31|QWORD + 288] <|@
d <@d|@=== Debug Properties ===
displacement: 288
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1304 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1304 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
result [v31|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
lastLocationAccess: - 
value: j744 
stateAfter: - 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1302 lastLocationAccess: - value: j744 stateAfter: - #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
result [v31|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
result meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1307 
lastLocationAccess: - 
value: v1163 
stateAfter: - 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1307 lastLocationAccess: - value: v1163 stateAfter: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
result [v31|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - value: i15 stateAfter: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
result [v31|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - value: j605 stateAfter: - #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
result [v31|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1306 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1306 lastLocationAccess: - value: j605 stateAfter: - #next: a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j764 
=== Succesors ===
next: v750 
=== Usages ===
a762 
=== Predecessor ===
v773 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j764 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
a747 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a762 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v751 
values: a747 a748 
=== Succesors ===
=== Usages ===
v1292 a552 v1290 v1291 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v751 values: a747 a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: v551 
=== Usages ===
a762 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
result [v37|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a762 
index: - 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a762 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
lastLocationAccess: - 
value: a428 
stateAfter: - 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1292 lastLocationAccess: - value: a428 stateAfter: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
result [v37|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a762 
index: - 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a762 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a548 <|@
result v38|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1291 
lastLocationAccess: - 
value: a548 
stateAfter: - 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1291 lastLocationAccess: - value: a548 stateAfter: - #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
result [v37|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a762 
index: - 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a762 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.newNode(HashMap.java:1909) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - value: i2 stateAfter: - #next: v553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a552 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a552 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.HashMap$Node
=== Inputs ===
object: a762 
=== Succesors ===
next: v210 
=== Usages ===
a205 
=== Predecessor ===
v553 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a762 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
a552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j786 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j786 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j812 
=== Usages ===
v1308 v1309 
=== Predecessor ===
v832 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j812  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: - 
=== Succesors ===
=== Usages ===
j812 v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j812 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
=== Succesors ===
next: j813 
=== Usages ===
j789 v1310 v1311 a796 v1312 v1313 v1314 v1315 v1316 
=== Predecessor ===
j786 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - #next: j813  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j786 
index: - 
=== Succesors ===
=== Usages ===
j813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j786 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
lastLocationAccess: - 
=== Succesors ===
next: v793 
=== Usages ===
v790 
=== Predecessor ===
j812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 lastLocationAccess: - #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid j604 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 40
stableDimension: 0
stamp: i64 [40]
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j789 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: i64
=== Inputs ===
x: j812 
y: j604 
=== Succesors ===
=== Usages ===
v790 v814 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j812 y: j604  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j813 
y: j789 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j813 y: j789  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v790 
=== Succesors ===
trueSuccessor: v792 
falseSuccessor: v791 
=== Usages ===
=== Predecessor ===
j813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v790 #trueSuccessor: v792 #falseSuccessor: v791  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a797 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a797  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a797 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v785 
=== Succesors ===
next: v1253 
=== Usages ===
v1253 a810 
=== Predecessor ===
v792 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v785 #next: v1253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-212081|0xfffffffffffcc38f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a797 
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
a797 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a797 #next: v801  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
v1253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
value: j789 
stateAfter: - 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - value: j789 stateAfter: - #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
result [v39|QWORD + 296] <|@
d <@d|@=== Debug Properties ===
displacement: 296
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
address: v1312 
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1312 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
result [v39|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
value: j744 
stateAfter: - 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - value: j744 stateAfter: - #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
result [v39|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
result meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1316 
lastLocationAccess: - 
value: v1164 
stateAfter: - 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1316 lastLocationAccess: - value: v1164 stateAfter: - #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
result [v39|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1311 lastLocationAccess: - value: i15 stateAfter: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
result [v39|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1313 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1313 lastLocationAccess: - value: j605 stateAfter: - #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
result [v39|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1314 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: v822 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1314 lastLocationAccess: - value: j605 stateAfter: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
result [v39|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j812 
index: - 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j812 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1315 
lastLocationAccess: - 
value: j605 
stateAfter: - 
=== Succesors ===
next: a796 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1315 lastLocationAccess: - value: j605 stateAfter: - #next: a796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a796 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j812 
=== Succesors ===
next: v799 
=== Usages ===
a810 
=== Predecessor ===
v822 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j812 #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
a796 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a810 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v800 
values: a796 a797 
=== Succesors ===
=== Usages ===
a555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v800 values: a796 a797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v799 v801 
=== Succesors ===
next: v556 
=== Usages ===
a810 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v799 v801 #next: v556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a555 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a555 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(int, Object, Object, boolean, boolean) [bci: -6] Placeholder
stamp: a!# java.util.LinkedHashMap$Entry
=== Inputs ===
object: a810 
=== Succesors ===
next: v237 
=== Usages ===
v336 ?286 v337 a205 
=== Predecessor ===
v556 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a810 #next: v237  <|@  <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap$Node;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>
=== Inputs ===
arguments: a555 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a555 i2 a3 a4 a9  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 56
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 637
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a1 - - - - i6 
=== Succesors ===
=== Usages ===
?238 ?681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a1 - - - - i6  <|@  <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.hash int:12>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.key Object:16>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.value Object:20>, HotSpotResolvedJavaFieldImpl<java.util.HashMap$Node.next HashMap$Node:24>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.before LinkedHashMap$Entry:28>, HotSpotResolvedJavaFieldImpl<java.util.LinkedHashMap$Entry.after LinkedHashMap$Entry:32>]
hasIdentity: true
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 0]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
objectId: 1
stamp: a!# java.util.LinkedHashMap$Entry
type: HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?681 ?286 ?238 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
sourceFile: LinkedHashMap.java
sourceLine: 281
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
values: a283 a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
?680 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244 values: a283 a1 i2 a3 a4 a9  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a283 
materializedValue: a555 
=== Succesors ===
=== Usages ===
?680 ?681 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a283 materializedValue: a555  <|@  <|@
tid ?680 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<LinkedHashMap$Entry.<init>(int, Object, Object, HashMap$Node)>
localsSize: 5
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 208
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
virtualObjectMappings: ?286 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238 virtualObjectMappings: ?286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
bci: 6
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap$Node.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v336 
stateDuring: ?680 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
a555 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v336 stateDuring: ?680 #next: v241  <|@  <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/LinkedHashMap$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>
=== Inputs ===
arguments: a1 a555 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a555  <|@  <|@
tid ?681 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
localsSize: 6
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 283
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?244 
values: - - - - - a283 
virtualObjectMappings: ?286 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?244 values: - - - - - a283 virtualObjectMappings: ?286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#LinkedHashMap.linkNodeAtEnd
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v337 
stateDuring: ?681 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v337 stateDuring: ?681 #next: v215  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
v241 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a205 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v204 
values: a552 a555 
=== Succesors ===
=== Usages ===
v1318 a353 ?677 a887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v204 values: a552 a555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v210 v215 
=== Succesors ===
next: v614 
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v210 v215 #next: v614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1213 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v1213  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1210 
=== Succesors ===
=== Usages ===
v1267 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result [v47|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v836 
index: - 
=== Succesors ===
=== Usages ===
v1213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v836 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1213 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
lastLocationAccess: - 
=== Succesors ===
next: i608 
=== Usages ===
v612 v597 v1293 v572 v579 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1267 lastLocationAccess: - #next: i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
result [v49|QWORD + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v1213 
index: - 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i608 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:64) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
=== Succesors ===
next: v1214 
=== Usages ===
v569 j570 
=== Predecessor ===
v1213 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
result [v46|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a205 
index: - 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
lastLocationAccess: - 
=== Succesors ===
next: v1215 
=== Usages ===
v839 
=== Predecessor ===
i608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 lastLocationAccess: - #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1214 
=== Succesors ===
=== Usages ===
v1294 v579 v1295 v1298 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i608 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
result [v52|QWORD + v54|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: j570 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: j570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
v572 
=== Predecessor ===
v1214 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1213 
y: v1215 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1213 y: v1215  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:68) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v574 #falseSuccessor: v573  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:69) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i568 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:65) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i608 
y: i568 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i608 y: i568  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v576 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v577 #falseSuccessor: v576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v839 
y: v1213 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v839 y: v1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:88) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v581 #falseSuccessor: v580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:89) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j609 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j609  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
result [v52|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: - 
=== Succesors ===
=== Usages ===
j609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j609 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:94) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
=== Succesors ===
next: i610 
=== Usages ===
v1296 v1297 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - #next: i610  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
result [v55|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j609 
index: - 
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i610 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:95) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
lastLocationAccess: - 
=== Succesors ===
next: v585 
=== Usages ===
v588 
=== Predecessor ===
j609 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 lastLocationAccess: - #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i592 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
i610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i587 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v586 
values: i15 i601 
=== Succesors ===
=== Usages ===
v588 i601 i606 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v586 values: i15 i601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v585 
=== Succesors ===
next: v591 
=== Usages ===
i587 v589 v598 v602 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v585 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i610 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i587 y: i610  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v588 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v588 #trueSuccessor: v590 #falseSuccessor: v589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 56]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j611 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j611  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i587 
y: i192 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i587 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 12]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
x: i606 
y: i592 
=== Succesors ===
=== Usages ===
j594 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i606 y: i592  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] bits:x...x000
=== Inputs ===
value: i593 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
result [v55|QWORD + v60|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j609 
index: j594 
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j611 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1297 
lastLocationAccess: - 
=== Succesors ===
next: v600 
=== Usages ===
v596 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1297 lastLocationAccess: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:178) [bci: 22]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: Klass*
=== Inputs ===
input: j611 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j611  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 66]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v596 
y: v1213 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v596 y: v1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:97) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
j611 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v598 #falseSuccessor: v599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i32
=== Inputs ===
x: i587 
y: i29 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i587 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:96) [bci: 49]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
loopBegin: v586 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v586 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v586 #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
result [v52|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: - 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
value: v1213 
stateAfter: - 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - value: v1213 stateAfter: - #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:103) [bci: 104]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v586 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v586 #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:83) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v624 v625 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v624 v625 #next: v884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j842 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j842 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j843 
=== Usages ===
v1319 v1321 v1322 
=== Predecessor ===
v884 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j843 <|@
result [v19|QWORD[.] + v24|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1266 
=== Succesors ===
next: i870 
=== Usages ===
v1320 
=== Predecessor ===
j842 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1266 #next: i870  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j842 
index: - 
=== Succesors ===
=== Usages ===
i870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i870 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1319 
lastLocationAccess: - 
=== Succesors ===
next: v847 
=== Usages ===
v878 
=== Predecessor ===
j843 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1319 lastLocationAccess: - #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i870 
y: i877 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i870 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v846 
falseSuccessor: v845 
=== Usages ===
=== Predecessor ===
i870 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v846 #falseSuccessor: v845  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a871 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a871  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
result [v63|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
a871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a871 <|@
result v64|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1320 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
a872 v879 
=== Predecessor ===
v845 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1320 lastLocationAccess: - #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a871  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v853 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
a871 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v853 #falseSuccessor: v849  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j873 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j873  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j842 
index: - 
=== Succesors ===
=== Usages ===
j873 v876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j873 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
v856 j869 v1323 
=== Predecessor ===
v849 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1321 lastLocationAccess: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j873 
y: j605 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j873 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid a872 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a871 
=== Succesors ===
=== Usages ===
j861 v864 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a871  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v856 
=== Succesors ===
trueSuccessor: v858 
falseSuccessor: v857 
=== Usages ===
=== Predecessor ===
j873 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v856 #trueSuccessor: v858 #falseSuccessor: v857  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a872 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a872 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v864 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j874 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j874  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j842 
index: - 
=== Succesors ===
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j874 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1322 
lastLocationAccess: - 
=== Succesors ===
next: j861 
=== Usages ===
v1323 
=== Predecessor ===
v857 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1322 lastLocationAccess: - #next: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j861 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a872 
=== Succesors ===
next: v875 
=== Usages ===
v875 
=== Predecessor ===
j874 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a872 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
result [v67|QWORD + v65|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j874 
index: j873 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: j873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
lastLocationAccess: - 
value: j861 
stateAfter: - 
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
j861 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1323 lastLocationAccess: - value: j861 stateAfter: - #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j873 
y: j868 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j873 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
lastLocationAccess: - 
value: j869 
stateAfter: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1321 lastLocationAccess: - value: j869 stateAfter: - #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
v876 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v850 v852 v863 v865 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v850 v852 v863 v865 #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
result v69|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
op: Compress
stamp: n! java.util.HashMap$Node
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v515 
address: v1266 
lastLocationAccess: - 
value: a353 
stateAfter: - 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v515 address: v1266 lastLocationAccess: - value: a353 stateAfter: - #next: v946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j886 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a887 
=== Usages ===
v1324 v1325 
=== Predecessor ===
v946 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: a! java.util.HashMap$Node
=== Inputs ===
object: a205 
=== Succesors ===
next: j888 
=== Usages ===
j889 
=== Predecessor ===
j886 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a205 #next: j888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j888 <|@
result [v19|QWORD[.] + v24|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1266 
=== Succesors ===
next: j889 
=== Usages ===
j890 j903 
=== Predecessor ===
a887 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1266 #next: j889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j889 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a887 
=== Succesors ===
next: v893 
=== Usages ===
j890 v894 
=== Predecessor ===
j888 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a887 #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid j890 <|@
result v71|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j888 
y: j889 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j888 y: j889  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
x: j890 
y: j924 
=== Succesors ===
=== Usages ===
v893 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j890 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v925 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v891 
=== Usages ===
=== Predecessor ===
j889 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v925 #trueSuccessor: v892 #falseSuccessor: v891  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j889 
y: j605 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j889 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v899 
falseSuccessor: v895 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v899 #falseSuccessor: v895  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1169  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i931 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i931  <|@  <|@
f <@~|@floating>@ <|@
tid j903 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j888 
y: i902 
=== Succesors ===
=== Usages ===
j926 v1327 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j888 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
result [v72|QWORD[*] + v29|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: j901 
=== Succesors ===
=== Usages ===
i931 i932 v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i931 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
=== Succesors ===
next: v907 
=== Usages ===
v939 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i931 
y: i938 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i931 y: i938  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v939 
=== Succesors ===
trueSuccessor: v906 
falseSuccessor: v904 
=== Usages ===
=== Predecessor ===
i931 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v939 #trueSuccessor: v906 #falseSuccessor: v904  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i932 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i932 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
v940 
=== Predecessor ===
v908 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i877 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i932 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v909 
=== Usages ===
=== Predecessor ===
i932 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v911 #falseSuccessor: v909  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
value: i877 
stateAfter: - 
=== Succesors ===
next: j934 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - value: i877 stateAfter: - #next: j934  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j934 v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j934 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
lastLocationAccess: - 
=== Succesors ===
next: v917 
=== Usages ===
v914 j930 v1326 
=== Predecessor ===
v933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 lastLocationAccess: - #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j934 
y: j605 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j934 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid j926 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j903 
y: j901 
=== Succesors ===
=== Usages ===
v921 v936 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j903 y: j901  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
j934 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v916 #falseSuccessor: v915  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j926 
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j926 #next: v1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j935 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j935  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j886 
index: - 
=== Succesors ===
=== Usages ===
j935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j935 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1325 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
v1326 
=== Predecessor ===
v915 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1325 lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
result [v76|QWORD + v74|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j935 
index: j934 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j935 index: j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1326 
lastLocationAccess: - 
value: j926 
stateAfter: - 
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
j935 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1326 lastLocationAccess: - value: j926 stateAfter: - #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: i64
=== Inputs ===
x: j934 
y: j868 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j934 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
lastLocationAccess: - 
value: j930 
stateAfter: - 
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1324 lastLocationAccess: - value: j930 stateAfter: - #next: v1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:79) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v620 v626 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v620 v626 #next: v520  <|@  <|@
tid ?677 <|@
d <@d|@=== Debug Properties ===
bci: 59
bytecode: aastore
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
sourceFile: HashMap.java
sourceLine: 637
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a26 i32 a205 a1 - - - - i6 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a26 i32 a205 a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 355
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?677 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?677  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid j701 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i700 <|@
result int[-55347|0xffffffffffff27cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -55347
stableDimension: 0
stamp: i32 [-55347]
stampKind: i32
value: int[-55347|0xffffffffffff27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1216 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result [v25|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
i1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1216 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 65]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
v45 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1216 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid a335 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1211 
=== Succesors ===
=== Usages ===
v377 ?684 a79 ?58 a79 a83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1218 v1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 69]
profileData: PROFILED designatedSuccessorProbability: 0.024740441782651668
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
i1216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1217 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
result [v25|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
a1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1217 <|@
result v79|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
a363 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 74]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1217 
=== Succesors ===
=== Usages ===
v50 v373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1217  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a363 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a363  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 81]
profileData: PROFILED designatedSuccessorProbability: 0.9155742003146303
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a1217 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-93195|0xfffffffffffe93f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v1328 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
v949 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v1328 lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1218 
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
result [v82|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v949 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v949 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
=== Succesors ===
next: j372 
=== Usages ===
v1271 v373 
=== Predecessor ===
v1218 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - #next: j372  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
result [v84|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v369 
index: - 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j372 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: i57 
=== Usages ===
v373 
=== Predecessor ===
v369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: i57  <|@  <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j372 
metaspaceMethod: v369 
arguments: a3 a363 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j372 metaspaceMethod: v369 arguments: a3 a363  <|@  <|@
tid ?684 <|@
d <@d|@=== Debug Properties ===
bci: 91
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a335 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 91
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v373 
stateDuring: ?684 
=== Succesors ===
next: v636 
=== Usages ===
v59 
=== Predecessor ===
j372 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v373 stateDuring: ?684 #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i15 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v634 #falseSuccessor: v635  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 94
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
sourceFile: HashMap.java
sourceLine: 641
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 a335 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 a335  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x3b4f4855]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 104]}
stamp: void
=== Inputs ===
stateBefore: ?58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
result [v25|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1329 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
v1236 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1329 lastLocationAccess: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:643) [bci: 106]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1219 
y: v1235 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1219 y: v1235  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 109]
profileData: PROFILED designatedSuccessorProbability: 1.0288769444977142E-5
stamp: void
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v1232 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v68 #falseSuccessor: v1232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: a74 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a74  <|@  <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
referencedType: [null]
returnStamp: a# java.util.HashMap$TreeNode
signature: [HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>, UnresolvedJavaType<Ljava/util/HashMap;>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a335 a1 a26 i2 a3 a4 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a335 a1 a26 i2 a3 a4  <|@  <|@
tid ?682 <|@
d <@d|@=== Debug Properties ===
bci: 123
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 123
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
polymorphic: false
stamp: a# java.util.HashMap$TreeNode
targetMethod: Direct#HashMap$TreeNode.putTreeVal
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v377 
stateDuring: ?682 
=== Succesors ===
next: v78 
=== Usages ===
a79 
=== Predecessor ===
v68 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v377 stateDuring: ?682 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
a74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
v1232 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a83 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v82 
values: a335 a384 
=== Succesors ===
=== Usages ===
?85 j1011 ?685 v1272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: a335 a384  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v82 
values: i15 i119 
=== Succesors ===
=== Usages ===
?85 v127 ?112 i119 ?685 ?683 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v82 values: i15 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v81 
=== Succesors ===
next: a1220 
=== Usages ===
a83 i84 v90 v105 v116 v120 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v81 #next: a1220  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 134
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 647
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84 
=== Succesors ===
=== Usages ===
v1223 v539 a1220 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 a83 - - - - i84  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
result [v88|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a83 
index: - 
=== Succesors ===
=== Usages ===
a1220 v414 j969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a83 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1220 <|@
result v90|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-97035|0xfffffffffffe84f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1272 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
a384 v385 v1273 v1274 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1272 lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid a384 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 136]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a1220 
=== Succesors ===
=== Usages ===
a79 a79 a79 a83 a79 ?112 ?683 ?685 ?686 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1220  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1220 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 142]
profileData: PROFILED designatedSuccessorProbability: 0.5861486748857938
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
a1220 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v90 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1221 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
result [v90|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1220 
=== Succesors ===
=== Usages ===
i1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1221 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.hash
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 177]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1273 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
v97 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1273 lastLocationAccess: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1221 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1221  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.8819612515065538
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i1221 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1222 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
result [v90|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1220 
=== Succesors ===
=== Usages ===
a1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1222 <|@
result v92|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.key
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
a392 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 186]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1222 
=== Succesors ===
=== Usages ===
v102 v400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1222  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a392 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a392  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 193]
profileData: PROFILED designatedSuccessorProbability: 0.9989928379588182
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
a1222 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v105 #falseSuccessor: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 196]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1223 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-100619|0xfffffffffffe76f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?85 
guard: - 
address: v1328 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
v964 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?85 guard: - address: v1328 lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1223 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result [v95|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v964 
index: - 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v964 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
=== Succesors ===
next: j399 
=== Usages ===
v1276 v400 
=== Predecessor ===
v1223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - #next: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
result [v97|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v397 
index: - 
=== Succesors ===
=== Usages ===
j399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v397 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
lastLocationAccess: - 
=== Succesors ===
next: i111 
=== Usages ===
v400 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1276 lastLocationAccess: - #next: i111  <|@  <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j399 
metaspaceMethod: v397 
arguments: a3 a392 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j399 metaspaceMethod: v397 arguments: a3 a392  <|@  <|@
tid ?683 <|@
d <@d|@=== Debug Properties ===
bci: 203
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 654
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i111 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 203
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v400 
stateDuring: ?683 
=== Succesors ===
next: v653 
=== Usages ===
v113 
=== Predecessor ===
j399 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v400 stateDuring: ?683 #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i15 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v652 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 206
bytecode: ifeq
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
sourceFile: HashMap.java
sourceLine: 654
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i15 a1 i2 a3 a4 i5 i6 a26 - - - a384 - i84  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x3b4f47c1]: UnreachedCode@5[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 212]}
stamp: void
=== Inputs ===
stateBefore: ?112 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
stateBefore: ?85 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?85 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:646) [bci: 216]
stamp: i32
=== Inputs ===
x: i84 
y: i29 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i84 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 209]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v136  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 145]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
result [v27|QWORD + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
stamp: void*
stride: S1
=== Inputs ===
base: v734 
index: - 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
=== Succesors ===
next: j407 
=== Usages ===
v1278 v408 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - #next: j407  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
result [v102|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v405 
index: - 
=== Succesors ===
=== Usages ===
j407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1278 
lastLocationAccess: - 
=== Succesors ===
next: a122 
=== Usages ===
v408 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1278 lastLocationAccess: - #next: a122  <|@  <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
referencedType: [null]
returnStamp: a java.util.HashMap$Node
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j407 
metaspaceMethod: v405 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j407 metaspaceMethod: v405 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?685 <|@
d <@d|@=== Debug Properties ===
bci: 152
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 648
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a83 a1 i2 - a4 i5 i6 a26 - - - a384 - i84 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a83 a1 i2 - a4 i5 i6 a26 - - - a384 - i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 152
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
polymorphic: true
stamp: a java.util.HashMap$Node
targetMethod: Indirect#HashMap.newNode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v408 
stateDuring: ?685 
=== Succesors ===
next: v1007 
=== Usages ===
a1010 a412 
=== Predecessor ===
j407 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v408 stateDuring: ?685 #next: v1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j968 
=== Usages ===
=== Predecessor ===
a122 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j968 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j969 
=== Usages ===
v1330 v1332 v1333 
=== Predecessor ===
v1007 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j969 <|@
result [v88|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1272 
=== Succesors ===
next: i994 
=== Usages ===
v1331 
=== Predecessor ===
j968 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1272 #next: i994  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j968 
index: - 
=== Succesors ===
=== Usages ===
i994 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j968 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i994 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1330 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
v1001 
=== Predecessor ===
j969 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1330 lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i994 
y: i877 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i994 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1001 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v971 
=== Usages ===
=== Predecessor ===
i994 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1001 #trueSuccessor: v972 #falseSuccessor: v971  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v976  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: a995 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a995  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
result [v105|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j969 
index: - 
=== Succesors ===
=== Usages ===
a995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j969 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a995 <|@
result v106|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1331 
lastLocationAccess: - 
=== Succesors ===
next: v980 
=== Usages ===
a996 v1002 
=== Predecessor ===
v971 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1331 lastLocationAccess: - #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a995 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a995  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1002 
=== Succesors ===
trueSuccessor: v979 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
a995 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1002 #trueSuccessor: v979 #falseSuccessor: v975  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j997 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j997  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j968 
index: - 
=== Succesors ===
=== Usages ===
j997 v1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j968 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j997 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
v982 j993 v1334 
=== Predecessor ===
v975 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1332 lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j605 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j997 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid a996 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a995 
=== Succesors ===
=== Usages ===
j987 v990 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a995  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v982 
=== Succesors ===
trueSuccessor: v984 
falseSuccessor: v983 
=== Usages ===
=== Predecessor ===
j997 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v982 #trueSuccessor: v984 #falseSuccessor: v983  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a996 
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a996 #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j998 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j998  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j968 
index: - 
=== Succesors ===
=== Usages ===
j998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j968 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j998 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1333 
lastLocationAccess: - 
=== Succesors ===
next: j987 
=== Usages ===
v1334 
=== Predecessor ===
v983 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1333 lastLocationAccess: - #next: j987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j987 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a996 
=== Succesors ===
next: v999 
=== Usages ===
v999 
=== Predecessor ===
j998 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a996 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
result [v109|QWORD + v107|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j998 
index: j997 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j998 index: j997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1334 
lastLocationAccess: - 
value: j987 
stateAfter: - 
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
j987 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1334 lastLocationAccess: - value: j987 stateAfter: - #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j993 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j997 
y: j868 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j997 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
lastLocationAccess: - 
value: j993 
stateAfter: - 
=== Succesors ===
next: v989 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1332 lastLocationAccess: - value: j993 stateAfter: - #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
v1000 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v976 v978 v989 v991 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v976 v978 v989 v991 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
result v111|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
op: Compress
stamp: n java.util.HashMap$Node
=== Inputs ===
value: a122 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.next
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1272 
lastLocationAccess: - 
value: a412 
stateAfter: - 
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1272 lastLocationAccess: - value: a412 stateAfter: - #next: v1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1009 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1009 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1010 
=== Usages ===
v1335 v1336 
=== Predecessor ===
v1063 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1010 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a122 
=== Succesors ===
next: j1011 
=== Usages ===
j1012 
=== Predecessor ===
j1009 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a122 #next: j1011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1011 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a83 
=== Succesors ===
next: j1012 
=== Usages ===
j1013 j1024 
=== Predecessor ===
a1010 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a83 #next: j1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1012 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1010 
=== Succesors ===
next: v1016 
=== Usages ===
j1013 v1017 
=== Predecessor ===
j1011 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1010 #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid j1013 <|@
result v112|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j1011 
y: j1012 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1011 y: j1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
x: j1013 
y: j924 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1013 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1045 
=== Succesors ===
trueSuccessor: v1015 
falseSuccessor: v1014 
=== Usages ===
=== Predecessor ===
j1012 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1045 #trueSuccessor: v1015 #falseSuccessor: v1014  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1012 
y: j605 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1012 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1017 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1018 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1017 #trueSuccessor: v1022 #falseSuccessor: v1018  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1022 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1049 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid j1024 <|@
result v113|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1011 
y: i902 
=== Succesors ===
=== Usages ===
j1046 v1338 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1011 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
result [v113|QWORD[*] + v29|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: j901 
=== Succesors ===
=== Usages ===
i1049 i1050 v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1049 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
=== Succesors ===
next: v1028 
=== Usages ===
v1056 
=== Predecessor ===
v1018 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1049 
y: i938 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1049 y: i938  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1025 
=== Usages ===
=== Predecessor ===
i1049 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v1027 #falseSuccessor: v1025  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1027 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1050 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
=== Succesors ===
next: v1033 
=== Usages ===
v1057 
=== Predecessor ===
v1029 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1050 
y: i877 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1050 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1032 #falseSuccessor: v1030  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
value: i877 
stateAfter: - 
=== Succesors ===
next: j1052 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - value: i877 stateAfter: - #next: j1052  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: - 
=== Succesors ===
=== Usages ===
j1052 v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1052 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1335 
lastLocationAccess: - 
=== Succesors ===
next: v1038 
=== Usages ===
v1035 j1048 v1337 
=== Predecessor ===
v1051 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1335 lastLocationAccess: - #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1052 
y: j605 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1052 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid j1046 <|@
result v115|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1024 
y: j901 
=== Succesors ===
=== Usages ===
v1042 v1054 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1024 y: j901  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1035 
=== Succesors ===
trueSuccessor: v1037 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
j1052 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1035 #trueSuccessor: v1037 #falseSuccessor: v1036  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1046 
=== Succesors ===
next: v1043 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1046 #next: v1043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1042 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1053 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: - 
=== Succesors ===
=== Usages ===
j1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1053 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1336 
lastLocationAccess: - 
=== Succesors ===
next: v1054 
=== Usages ===
v1337 
=== Predecessor ===
v1036 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1336 lastLocationAccess: - #next: v1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
result [v116|QWORD + v114|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1053 
index: j1052 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1053 index: j1052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1337 
lastLocationAccess: - 
value: j1046 
stateAfter: - 
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
j1053 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1337 lastLocationAccess: - value: j1046 stateAfter: - #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid j1048 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: i64
=== Inputs ===
x: j1052 
y: j868 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1052 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1335 
lastLocationAccess: - 
value: j1048 
stateAfter: - 
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1335 lastLocationAccess: - value: j1048 stateAfter: - #next: v1041  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:648) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1019 v1021 v1026 v1031 v1041 v1043 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1019 v1021 v1026 v1031 v1041 v1043 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 160]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i126 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i84 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 162]
profileData: PROFILED designatedSuccessorProbability: 0.9999852699864189
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v130 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<[Ljava/util/HashMap$Node;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a26 i2 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a26 i2  <|@  <|@
tid ?686 <|@
d <@d|@=== Debug Properties ===
bci: 169
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 650
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a384 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: 169
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v415 
stateDuring: ?686 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v415 stateDuring: ?686 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a79 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: a java.util.HashMap$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v77 
values: a335 a74 a384 a384 a384 a384 a335 
=== Succesors ===
=== Usages ===
?137 v138 j1107 v427 v1279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: a335 a74 a384 a384 a384 a384 a335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 v104 v129 v135 v136 v188 
=== Succesors ===
next: v144 
=== Usages ===
a79 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 v104 v129 v135 v136 v188 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a79 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a79  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:659) [bci: 224]
profileData: PROFILED designatedSuccessorProbability: 0.6009546268952672
stamp: void
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v143 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v143 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 259]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v140 v142 v1165 v1166 v1167 v1168 v1169 
=== Succesors ===
next: i1224 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v140 v142 v1165 v1166 v1167 v1168 v1169 #next: i1224  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1224 v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1224 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 261]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
i165 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 265]
stamp: i32
=== Inputs ===
x: i1224 
y: i29 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1224 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:667) [bci: 266]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
value: i165 
stateAfter: - 
=== Succesors ===
next: i1225 
=== Usages ===
=== Predecessor ===
i1224 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - value: i165 stateAfter: - #next: i1225  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1225 v435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1225 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 271]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: v435 
=== Usages ===
i169 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 275]
stamp: i32
=== Inputs ===
x: i1225 
y: i29 
=== Succesors ===
=== Usages ===
v435 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1225 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 277]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
value: i169 
stateAfter: - 
=== Succesors ===
next: i1226 
=== Usages ===
=== Predecessor ===
i1225 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - value: i169 stateAfter: - #next: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1226 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.threshold
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 281]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
v173 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1226 
y: i169 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1226 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:668) [bci: 284]
profileData: PROFILED designatedSuccessorProbability: 8.044266462171601E-4
stamp: void
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
i1226 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v175 #falseSuccessor: v174  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 287]
stamp: void
=== Inputs ===
=== Succesors ===
next: a178 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a178  <|@  <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
referencedType: [null]
returnStamp: a java.util.HashMap$Node[]
signature: [HotSpotType<Ljava/util/HashMap;, resolved>]
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?687 <|@
d <@d|@=== Debug Properties ===
bci: 288
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 669
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
result v121|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 288
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
polymorphic: false
stamp: a java.util.HashMap$Node[]
targetMethod: Direct#HashMap.resize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v450 
stateDuring: ?687 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v450 stateDuring: ?687 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
a178 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v180 v182 
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v180 v182 #next: v256  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 292
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 
=== Succesors ===
=== Usages ===
v1350 v1255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}]
keySuccessors: [I@40711f3d
keys: [HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]
profileData: PROFILED keyProbabilities: [0.9995620457234738, 4.371573750612191E-4, 7.969014649553474E-7, 0.0]
stamp: void
=== Inputs ===
value: v734 
=== Succesors ===
successors: v248 v252 v255 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v734 #successors: v248 v252 v255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v248 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i15 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i6 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: PROFILED designatedSuccessorProbability: 0.4908637873754153
stamp: void
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v262 #falseSuccessor: v261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v262 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 4]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1227 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1227 <|@
result v122|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.LinkedHashMap$Entry
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedHashMap.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: n java.util.LinkedHashMap$Entry
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
=== Succesors ===
next: v1255 
=== Usages ===
a442 v1349 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - #next: v1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
result [v122|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1227 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?183 
object: v1349 
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
a1227 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?183 object: v1349 #next: v1228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
v1162 
=== Predecessor ===
v1255 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1228 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1228  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
result [v124|QWORD + 872] <|@
d <@d|@=== Debug Properties ===
displacement: 872
stamp: void*
stride: S1
=== Inputs ===
base: v1162 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v1162 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: j448 
=== Usages ===
v1287 v449 
=== Predecessor ===
v1228 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
result [v126|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v446 
index: - 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v446 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
=== Succesors ===
next: i268 
=== Usages ===
v449 
=== Predecessor ===
v446 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - #next: i268  <|@  <|@
f <@~|@floating>@ <|@
tid a442 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
op: Uncompress
stamp: a java.util.LinkedHashMap$Entry
=== Inputs ===
value: a1227 
=== Succesors ===
=== Usages ===
?269 v449 ?689 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1227  <|@  <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/LinkedHashMap;, resolved>, UnresolvedJavaType<Ljava/util/Map$Entry;>]
stamp: void
targetMethod: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>
=== Inputs ===
computedAddress: j448 
metaspaceMethod: v446 
arguments: a1 a442 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j448 metaspaceMethod: v446 arguments: a1 a442  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 295
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 670
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?269 ?689 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?689 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?277 
values: a1 - a442 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?277 values: a1 - a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i268 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#LinkedHashMap.removeEldestEntry
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v449 
stateDuring: ?689 
=== Succesors ===
next: v667 
=== Usages ===
?269 v270 
=== Predecessor ===
j448 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v449 stateDuring: ?689 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i15 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i268 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
i268 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v665 #falseSuccessor: v666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:328) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v253 v278 
=== Succesors ===
next: j1185 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v253 v278 #next: j1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1185 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1196 
=== Usages ===
j1186 
=== Predecessor ===
v245 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1196 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v1200 
=== Usages ===
j1188 j1192 
=== Predecessor ===
j1185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid j1186 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
x: j1185 
y: j1175 
=== Succesors ===
=== Usages ===
j1188 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1185 y: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid j1188 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
x: j1186 
y: j1196 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1186 y: j1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
value: j1188 
stateAfter: - 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
j1196 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - value: j1188 stateAfter: - #next: v1201  <|@  <|@
f <@~|@floating>@ <|@
tid i1191 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1192 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: i64
=== Inputs ===
x: j1196 
y: i1191 
=== Succesors ===
=== Usages ===
v1201 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1196 y: i1191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: j1192 
stateAfter: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: j1192 stateAfter: - #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:671) [bci: 299]
stamp: void
=== Inputs ===
memoryMap: - 
result: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1201 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: ifeq
code: ResolvedJavaMethodBytecode<LinkedHashMap.afterNodeInsertion(boolean)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
sourceFile: LinkedHashMap.java
sourceLine: 324
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?277 
values: i268 a1 - a442 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?277 values: i268 a1 - a442  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
at java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
reason: UnreachedCode
speculation: {0x0000000000002814[index: 320, len: 20, hash: 0x56fc92f9]: UnreachedCode@5[HotSpotMethod<LinkedHashMap.afterNodeInsertion(boolean)>, 21]}
stamp: void
=== Inputs ===
stateBefore: ?269 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 254
mayConvertToGuard: true
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002314[index: 280, len: 20, hash: 0xf2f813fc]: FallbackDeopt@8[HotSpotMethod<HashMap.putVal(int, Object, Object, boolean, boolean)>, 295, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/util/HashMap;, resolved>, HotSpotType<Ljava/util/LinkedHashMap;, resolved>, HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?183 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 227]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1229 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result [v118|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a79 
index: - 
=== Succesors ===
=== Usages ===
a1229 v429 j1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a79 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1229 <|@
result v137|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
a421 v1348 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i15 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 236]
profileData: PROFILED designatedSuccessorProbability: 0.9999955633968408
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
a1229 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 244]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1064 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1064 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1065 
=== Usages ===
v1339 v1341 v1342 
=== Predecessor ===
v1103 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1065  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1065 <|@
result [v118|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1279 
=== Succesors ===
next: i1090 
=== Usages ===
v1340 
=== Predecessor ===
j1064 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1279 #next: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1339 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
i1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1339 
lastLocationAccess: - 
=== Succesors ===
next: v1069 
=== Usages ===
v1097 
=== Predecessor ===
j1065 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1339 lastLocationAccess: - #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1090 
y: i877 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1090 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
i1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v1068 #falseSuccessor: v1067  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1091 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
result [v138|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1065 
index: - 
=== Succesors ===
=== Usages ===
a1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1065 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1091 <|@
result v139|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1340 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
a1092 v1098 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1340 lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1098 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
a1091 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1098 #trueSuccessor: v1075 #falseSuccessor: v1071  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1093 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1341 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1093 v1096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1093 <|@
result v140|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1341 
lastLocationAccess: - 
=== Succesors ===
next: v1081 
=== Usages ===
v1078 j1089 v1343 
=== Predecessor ===
v1071 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1341 lastLocationAccess: - #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1093 
y: j605 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1093 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid a1092 <|@
result v141|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
j1083 v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1079 
=== Usages ===
=== Predecessor ===
j1093 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v1080 #falseSuccessor: v1079  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1092 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1092 #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1094 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1094  <|@  <|@
f <@~|@floating>@ <|@
tid v1342 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1094 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1342 
lastLocationAccess: - 
=== Succesors ===
next: j1083 
=== Usages ===
v1343 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1342 lastLocationAccess: - #next: j1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1083 <|@
result v141|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1092 
=== Succesors ===
next: v1095 
=== Usages ===
v1095 
=== Predecessor ===
j1094 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1092 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
result [v142|QWORD + v140|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1094 
index: j1093 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1094 index: j1093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1343 
lastLocationAccess: - 
value: j1083 
stateAfter: - 
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
j1083 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1343 lastLocationAccess: - value: j1083 stateAfter: - #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1093 
y: j868 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1093 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1341 
lastLocationAccess: - 
value: j1089 
stateAfter: - 
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1341 lastLocationAccess: - value: j1089 stateAfter: - #next: v1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1072 v1074 v1085 v1087 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1072 v1074 v1085 v1087 #next: v429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$Node.value
location: HashMap$Node.value
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
lastLocationAccess: - 
value: a428 
stateAfter: - 
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1279 lastLocationAccess: - value: a428 stateAfter: - #next: v1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1105 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1105 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1106 
=== Usages ===
v1344 v1345 
=== Predecessor ===
v1159 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1106 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: a java.lang.Object
=== Inputs ===
object: a4 
=== Succesors ===
next: j1107 
=== Usages ===
j1108 
=== Predecessor ===
j1105 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4 #next: j1107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1107 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a79 
=== Succesors ===
next: j1108 
=== Usages ===
j1109 j1120 
=== Predecessor ===
a1106 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a79 #next: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1108 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1106 
=== Succesors ===
next: v1112 
=== Usages ===
j1109 v1113 
=== Predecessor ===
j1107 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1106 #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid j1109 <|@
result v144|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1107 
y: j1108 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1107 y: j1108  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
x: j1109 
y: j924 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1109 y: j924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1110 
=== Usages ===
=== Predecessor ===
j1108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1111 #falseSuccessor: v1110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1108 
y: j605 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1108 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1113 
=== Succesors ===
trueSuccessor: v1118 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
v1110 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1113 #trueSuccessor: v1118 #falseSuccessor: v1114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1145 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1145  <|@  <|@
f <@~|@floating>@ <|@
tid j1120 <|@
result v145|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1107 
y: i902 
=== Succesors ===
=== Usages ===
j1142 v1347 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1107 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
result [v145|QWORD[*] + v29|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1120 
index: j901 
=== Succesors ===
=== Usages ===
i1145 i1146 v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1120 index: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
=== Succesors ===
next: v1124 
=== Usages ===
v1152 
=== Predecessor ===
v1114 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - #next: v1124  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1145 
y: i938 
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1145 y: i938  <|@  <|@
f <@*|@fixed>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1152 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1121 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1152 #trueSuccessor: v1123 #falseSuccessor: v1121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1123 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1146 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1146 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
=== Succesors ===
next: v1129 
=== Usages ===
v1153 
=== Predecessor ===
v1125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1146 
y: i877 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1146 y: i877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v1128 
falseSuccessor: v1126 
=== Usages ===
=== Predecessor ===
i1146 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v1128 #falseSuccessor: v1126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1128 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
value: i877 
stateAfter: - 
=== Succesors ===
next: j1148 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - value: i877 stateAfter: - #next: j1148  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1105 
index: - 
=== Succesors ===
=== Usages ===
j1148 v1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1148 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1344 
lastLocationAccess: - 
=== Succesors ===
next: v1134 
=== Usages ===
v1131 j1144 v1346 
=== Predecessor ===
v1147 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1344 lastLocationAccess: - #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1148 
y: j605 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1148 y: j605  <|@  <|@
f <@~|@floating>@ <|@
tid j1142 <|@
result v147|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1120 
y: j901 
=== Succesors ===
=== Usages ===
v1138 v1150 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1120 y: j901  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1133 
falseSuccessor: v1132 
=== Usages ===
=== Predecessor ===
j1148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1133 #falseSuccessor: v1132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1142 
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1142 #next: v1170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1149 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1149  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1105 
index: - 
=== Succesors ===
=== Usages ===
j1149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1149 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1345 
lastLocationAccess: - 
=== Succesors ===
next: v1150 
=== Usages ===
v1346 
=== Predecessor ===
v1132 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1345 lastLocationAccess: - #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1346 <|@
result [v148|QWORD + v146|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1149 
index: j1148 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1149 index: j1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
lastLocationAccess: - 
value: j1142 
stateAfter: - 
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
j1149 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1346 lastLocationAccess: - value: j1142 stateAfter: - #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid j1144 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: i64
=== Inputs ===
x: j1148 
y: j868 
=== Succesors ===
=== Usages ===
v1151 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1148 y: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1344 
lastLocationAccess: - 
value: j1144 
stateAfter: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1344 lastLocationAccess: - value: j1144 stateAfter: - #next: v1171  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.putVal(HashMap.java:662) [bci: 247]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1151 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 239]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1247  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 222
bytecode: aload
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 659
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a79 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a79  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
result [v137|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1229 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?137 
object: v1348 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: v1348 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v1247 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 250]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v157 v1170 v1171 v1172 v1173 v1174 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v157 v1170 v1171 v1172 v1173 v1174 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result [v27|QWORD + 688] <|@
d <@d|@=== Debug Properties ===
displacement: 688
stamp: void*
stride: S1
=== Inputs ===
base: v734 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
result v150|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
=== Succesors ===
next: j426 
=== Usages ===
v1281 v427 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - #next: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result [v150|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v424 
index: - 
=== Succesors ===
=== Usages ===
j426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
v427 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: v160  <|@  <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/HashMap;, resolved>, UnresolvedJavaType<Ljava/util/HashMap$Node;>]
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
computedAddress: j426 
metaspaceMethod: v424 
arguments: a1 a79 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j426 metaspaceMethod: v424 arguments: a1 a79  <|@  <|@
f <@~|@floating>@ <|@
tid a421 <|@
result v152|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:660) [bci: 229]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1229 
=== Succesors ===
=== Usages ===
v162 ?688 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1229  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 253
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
localsSize: 13
locksSize: 0
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - a421 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
bci: 253
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeAccess
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v427 
stateDuring: ?688 
=== Succesors ===
next: j1176 
=== Usages ===
=== Predecessor ===
j426 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v427 stateDuring: ?688 #next: j1176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1176 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1194 
=== Usages ===
j1177 
=== Predecessor ===
v160 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1194 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v1198 
=== Usages ===
j1179 j1183 
=== Predecessor ===
j1176 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
x: j1176 
y: j1175 
=== Succesors ===
=== Usages ===
j1179 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1176 y: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid j1179 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
x: j1177 
y: j1194 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1177 y: j1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
value: j1179 
stateAfter: - 
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
j1194 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - value: j1179 stateAfter: - #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid i1182 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1183 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: i64
=== Inputs ===
x: j1194 
y: i1182 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1194 y: i1182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: j1183 
stateAfter: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: j1183 stateAfter: - #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 258]
stamp: void
=== Inputs ===
memoryMap: - 
result: a421 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a421  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i698 <|@
result int[-83739|0xfffffffffffeb8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
rawvalue: -83739
stableDimension: 0
stamp: i32 [-83739]
stampKind: i32
value: int[-83739|0xfffffffffffeb8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i694 <|@
result v160|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i32 [-83739 - -55347] bits:1...1xx01xxxxx11x0x101
valueDescription: i32
=== Inputs ===
merge: v691 
values: i698 i700 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v691 values: i698 i700  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v691 
values: j605 j701 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v691 values: j605 j701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v699 
=== Succesors ===
next: v696 
=== Usages ===
i694 j695 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v699 #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 40]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i694 
speculation: j695 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i694 speculation: j695  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   62  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   82  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   84  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr  250  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  268  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  356  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  360  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  456  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  460  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  568  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  626  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  750  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  860  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  894  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  936  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  956  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  960  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr  964  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  982  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  996  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   62  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   82  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   84  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr  250  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  268  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  356  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  360  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  456  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  460  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  568  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  626  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  750  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  860  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  894  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  936  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  956  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  960  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr  964  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  982  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  996  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v103|q [0, 1[[18, 24[[264, 268[[354, 356[[454, 456[[564, 568[[618, 619[[624, 625[[678, 684[[698, 700[[748, 750[[856, 860[[890, 894[[924, 927[[928, 934[[948, 950[[958, 960[[980, 982[[994, 995[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[256, 267[[454, 455[[566, 567[[612, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[972, 981[[992, 995[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[18, 20[[254, 267[[454, 455[[560, 567[[610, 619[[622, 625[[678, 680[[748, 749[[852, 859[[886, 893[[920, 927[[928, 930[[970, 981[[990, 995[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v102|q [0, 1[[262, 267[[454, 455[[562, 567[[618, 619[[624, 625[[748, 749[[854, 859[[888, 893[[922, 927[[980, 981[[994, 995[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[252, 267[[352, 354[[364, 366[[452, 455[[468, 470[[540, 542[[558, 567[[608, 619[[620, 625[[630, 632[[746, 749[[760, 762[[850, 859[[884, 893[[904, 906[[918, 927[[956, 958[[968, 981[[988, 995[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[978, 981[[994, 995[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[258, 267[[454, 455[[566, 567[[614, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[974, 981[[994, 995[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[260, 267[[454, 455[[566, 567[[616, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[976, 981[[994, 995[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 672[[702, 864[[872, 918[[952, 1011[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[[1068, 1075[6 MustHaveRegister 44 MustHaveRegister 76 MustHaveRegister 252 ShouldHaveRegister 452 ShouldHaveRegister 620 ShouldHaveRegister 654 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister 746 ShouldHaveRegister 834 MustHaveRegister 838 MustHaveRegister 850 ShouldHaveRegister 918 ShouldHaveRegister 970 ShouldHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 128[[212, 276[[304, 312[[316, 344[[348, 362[[438, 446[[450, 538[[546, 572[[576, 619[[628, 640[[872, 898[[952, 974[[986, 992[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[[1068, 1075[8 MustHaveRegister 68 ShouldHaveRegister 128 MustHaveRegister 216 MustHaveRegister 236 MustHaveRegister 245 LiveAtLoopEnd 254 ShouldHaveRegister 610 ShouldHaveRegister 974 ShouldHaveRegister 992 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [10, 124[[212, 256[[304, 312[[348, 362[[438, 446[[450, 462[[546, 572[[576, 619[[872, 898[[952, 976[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[[1068, 1075[10 MustHaveRegister 124 MustHaveRegister 256 ShouldHaveRegister 310 ShouldHaveRegister 444 ShouldHaveRegister 548 MustHaveRegister 558 ShouldHaveRegister 612 ShouldHaveRegister 874 MustHaveRegister 884 ShouldHaveRegister 976 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [12, 100[[212, 276[[304, 344[[348, 359[[438, 538[[546, 619[[628, 648[[702, 744[[754, 776[[872, 902[[952, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[[1068, 1075[12 MustHaveRegister 84 MustHaveRegister 258 ShouldHaveRegister 614 ShouldHaveRegister 770 ShouldHaveRegister 776 MustHaveRegister 978 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|- [14, 100[[212, 276[[304, 344[[348, 359[[438, 538[[546, 584[[628, 648[[702, 708[[872, 902[[952, 963[[966, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[[1068, 1075[14 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d rdi|- [16, 672[[702, 708[[744, 754[[828, 837[[872, 902[[952, 1001[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[[1068, 1075[16 MustHaveRegister 830 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|q [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|q [24, 689[[702, 939[[952, 1004[24 MustHaveRegister 688 ShouldHaveRegister 938 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [30, 692[[702, 942[[952, 1004[30 MustHaveRegister 38 MustHaveRegister 686 MustHaveRegister 692 MustHaveRegister 936 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [32, 696[[702, 946[[952, 1004[32 MustHaveRegister 40 MustHaveRegister 696 MustHaveRegister 946 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [44, 56[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q rax|- [456, 461[456 MustHaveRegister 458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v20|d [50, 59[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v14|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v18|q [60, 312[[316, 388[[438, 446[[462, 538[[546, 572[[576, 640[[872, 898[[952, 972[[986, 990[[1012, 1019[[1020, 1028[[1036, 1047[[1048, 1059[[1060, 1067[62 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister 278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister 972 ShouldHaveRegister 990 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v17|d [60, 100[[212, 218[[348, 359[[438, 446[[546, 549[[576, 584[[952, 963[[1020, 1024[[1048, 1059[66 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [62, 70[62 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [64, 136[[348, 362[[576, 628[[952, 966[64 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v20|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v1|d [68, 212[[276, 304[[344, 388[[576, 628[[952, 966[[1024, 1028[[1036, 1047[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister 278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [74, 88[[212, 220[[438, 440[74 MustHaveRegister 86 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 220 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|d [80, 450[[462, 671[[702, 828[[872, 912[[952, 1004[80 MustHaveRegister 90 MustHaveRegister 248 MustHaveRegister 670 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [82, 394[[406, 412[[416, 422[[438, 450[[462, 538[[546, 648[[702, 744[[754, 784[[796, 802[[806, 812[[872, 902[[952, 998[82 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister 782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v3|q [84, 122[[212, 276[[304, 344[[348, 362[[438, 450[[462, 538[[546, 576[[628, 648[[702, 744[[754, 768[[872, 902[[966, 998[84 MustHaveRegister 122 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [94, 116[94 MustHaveRegister 96 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q rax|- [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v31|q [116, 119[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|q [120, 131[122 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v2|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [578, 602[578 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister 592 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [580, 586[580 MustHaveRegister 582 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [954, 956[954 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q rax|- [960, 965[960 MustHaveRegister 962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v39|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|q [606, 627[608 ShouldHaveRegister 622 ShouldHaveRegister 626 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v37|q [132, 212[[276, 304[[344, 348[[362, 384[[1024, 1028[[1036, 1047[142 MustHaveRegister 372 MustHaveRegister 378 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v22|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [134, 137[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [138, 190[[194, 196[138 MustHaveRegister 140 MustHaveRegister 150 MustHaveRegister 158 MustHaveRegister 182 MustHaveRegister 189 LiveAtLoopEnd 196 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [140, 154[140 MustHaveRegister 148 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [142, 146[142 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|d [146, 190[[194, 196[146 MustHaveRegister 150 MustHaveRegister 158 ShouldHaveRegister 162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [144, 147[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [162, 190[162 MustHaveRegister 164 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [164, 190[164 MustHaveRegister 170 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v62|d [168, 186[170 ShouldHaveRegister 174 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v57|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v57|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [286, 298[286 MustHaveRegister 290 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v64|d [288, 296[[362, 364[288 MustHaveRegister 296 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d v46|q [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [376, 378[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q v70|q [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v73|q [390, 394[[406, 412[[416, 422[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [420, 432[420 MustHaveRegister 424 MustHaveRegister 430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q v72|q [422, 430[[538, 540[422 MustHaveRegister 430 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v25|d [214, 225[[438, 449[[546, 575[[966, 968[[1012, 1019[214 MustHaveRegister 224 ShouldHaveRegister 448 ShouldHaveRegister 574 ShouldHaveRegister 968 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q v79|d [442, 446[[546, 560[442 MustHaveRegister 444 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d -1 [548, 552[548 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q v81|d [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [550, 553[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [554, 562[554 MustHaveRegister 556 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q -1 [556, 564[556 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d rax|- [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q rax|- [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q v78|q [226, 241[[246, 276[[304, 312[[316, 344[[462, 490[[872, 875[228 MustHaveRegister 318 MustHaveRegister 478 MustHaveRegister 480 ShouldHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d v101|d [226, 242[[246, 276[[304, 312[[316, 344[[462, 538[[628, 638[[872, 898[[1060, 1067[242 ShouldHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d -1 [228, 238[[304, 306[228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 236 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q v90|d [230, 245[[246, 276[[304, 315[[316, 344[[462, 538[[628, 643[[872, 901[[986, 997[[1060, 1067[230 MustHaveRegister 244 ShouldHaveRegister 314 ShouldHaveRegister 642 ShouldHaveRegister 900 ShouldHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q v92|d [308, 312[[872, 886[308 MustHaveRegister 310 MustHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [874, 878[874 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q v94|d [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q -1 [876, 879[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [880, 888[880 MustHaveRegister 882 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[v98|q]" v98|q -1 [882, 890[882 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d rax|- [894, 896[894 MustHaveRegister 896 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q -1 [240, 241[240 MustHaveRegister  "NoDefinitionFound"
  v101|d DWORD "[v101|d]" v101|d v89|d [242, 245[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q -1 [248, 262[248 MustHaveRegister 250 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[v103|q]" v103|q -1 [250, 264[250 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v104|q QWORD "[v104|q]" v104|q rax|- [268, 276[[316, 344[[462, 486[268 MustHaveRegister 476 MustHaveRegister 480 ShouldHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d -1 [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [326, 338[326 MustHaveRegister 330 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q v106|d [328, 336[[466, 468[328 MustHaveRegister 336 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d v104|q [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[v112|q]" v112|q v88|q [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q v88|q [490, 494[[506, 512[[516, 522[490 MustHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q -1 [520, 532[520 MustHaveRegister 524 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q v113|q [522, 530[[628, 630[522 MustHaveRegister 530 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q v91|q [644, 648[[702, 744[[754, 828[[902, 920[[998, 1004[646 MustHaveRegister 704 MustHaveRegister 718 MustHaveRegister 768 MustHaveRegister 770 ShouldHaveRegister 780 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[v119|d]" v119|d -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[v120|d]" v120|d v119|d [658, 662[658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[v121|q]" v121|q rax|- [750, 751[750 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[v122|d]" v122|d -1 [834, 848[834 MustHaveRegister 836 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[v123|d]" v123|d -1 [838, 842[838 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[v124|q]" v124|q v123|d [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[v125|q]" v125|q -1 [840, 843[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q -1 [844, 854[844 MustHaveRegister 846 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[v127|q]" v127|q -1 [846, 856[846 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[v128|q]" v128|q v122|d [848, 864[[1004, 1011[848 MustHaveRegister 852 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[v129|d]" v129|d rax|- [860, 864[[1004, 1011[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v130|q QWORD "[v130|q]" v130|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v131|q QWORD "[v131|q]" v131|q v130|q [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[v132|q]" v132|q v131|q [684, 688[684 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[v133|q]" v133|q -1 [686, 694[686 MustHaveRegister 690 ShouldHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[v134|q]" v134|q v132|q [688, 690[688 MustHaveRegister 690 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[v135|q]" v135|q v134|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[v136|q]" v136|q v133|q [694, 696[694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[v137|d]" v137|d -1 [704, 744[[754, 828[[902, 916[[998, 1004[704 MustHaveRegister 916 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[v138|q]" v138|q -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[v139|d]" v139|d -1 [720, 728[720 MustHaveRegister 722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v140|q QWORD "[v140|q]" v140|q -1 [726, 738[726 MustHaveRegister 730 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[v141|q]" v141|q v139|d [728, 736[[758, 760[728 MustHaveRegister 736 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[v142|q]" v142|q -1 [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v143|q QWORD "[v143|q]" v143|q -1 [738, 740[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[v144|q]" v144|q v118|q [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v145|q QWORD "[v145|q]" v145|q v118|q [780, 784[[796, 802[[806, 812[780 MustHaveRegister 782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v146|q QWORD "[v146|q]" v146|q -1 [810, 822[810 MustHaveRegister 814 MustHaveRegister 820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[v147|q]" v147|q v145|q [812, 820[[902, 904[812 MustHaveRegister 820 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[v148|q]" v148|q -1 [818, 820[818 MustHaveRegister 820 MustHaveRegister  "NoSpillStore"
  v149|q QWORD "[v149|q]" v149|q -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v150|q QWORD "[v150|q]" v150|q -1 [912, 922[912 MustHaveRegister 914 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v151|q QWORD "[v151|q]" v151|q -1 [914, 924[914 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v152|q QWORD "[v152|q]" v152|q v137|d [916, 948[916 MustHaveRegister 948 ShouldHaveRegister  "NoSpillStore"
  v153|q QWORD "[v153|q]" v153|q -1 [930, 932[930 MustHaveRegister 932 MustHaveRegister  "NoSpillStore"
  v154|q QWORD "[v154|q]" v154|q v153|q [932, 934[932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v155|q QWORD "[v155|q]" v155|q v154|q [934, 938[934 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v156|q QWORD "[v156|q]" v156|q -1 [936, 944[936 MustHaveRegister 940 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v157|q QWORD "[v157|q]" v157|q v155|q [938, 940[938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v158|q QWORD "[v158|q]" v158|q v157|q [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v159|q QWORD "[v159|q]" v159|q v156|q [944, 946[944 MustHaveRegister 946 MustHaveRegister  "NoSpillStore"
  v160|d DWORD "[v160|d]" v160|d -1 [1052, 1054[1054 MustHaveRegister  "NoSpillStore"
  v161|q QWORD "[v161|q]" v161|q -1 [1052, 1056[1056 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v103|q [0, 1[[18, 24[[264, 268[[354, 356[[454, 456[[564, 568[[618, 619[[624, 625[[678, 684[[698, 700[[748, 750[[856, 860[[890, 894[[924, 927[[928, 934[[948, 950[[958, 960[[980, 982[[994, 995[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[256, 267[[454, 455[[566, 567[[612, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[972, 981[[992, 995[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[18, 20[[254, 267[[454, 455[[560, 567[[610, 619[[622, 625[[678, 680[[748, 749[[852, 859[[886, 893[[920, 927[[928, 930[[970, 981[[990, 995[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v102|q [0, 1[[262, 267[[454, 455[[562, 567[[618, 619[[624, 625[[748, 749[[854, 859[[888, 893[[922, 927[[980, 981[[994, 995[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[252, 267[[352, 354[[364, 366[[452, 455[[468, 470[[540, 542[[558, 567[[608, 619[[620, 625[[630, 632[[746, 749[[760, 762[[850, 859[[884, 893[[904, 906[[918, 927[[956, 958[[968, 981[[988, 995[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[978, 981[[994, 995[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[258, 267[[454, 455[[566, 567[[614, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[974, 981[[994, 995[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[260, 267[[454, 455[[566, 567[[616, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[976, 981[[994, 995[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 83[6 MustHaveRegister 44 MustHaveRegister 76 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 17[8 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 124[[212, 226[10 MustHaveRegister 124 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 92[12 MustHaveRegister 84 MustHaveRegister  "SpillInDominator"
  v4|d DWORD "[r9|d]" v4|d r9|- [14, 100[[212, 246[14 MustHaveRegister  "SpillInDominator"
  v5|d DWORD "[rdi|d]" v5|d rdi|- [16, 246[16 MustHaveRegister  "SpillInDominator"
  v6|q QWORD "[rdx|q]" v6|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v6|q [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q v7|q [24, 246[24 MustHaveRegister  "OneSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [30, 60[30 MustHaveRegister 38 MustHaveRegister  "SpillInDominator"
  v12|d DWORD "[rbp|d]" v12|d -1 [32, 246[32 MustHaveRegister 40 MustHaveRegister  "SpillInDominator"
  v13|d DWORD "[rbx|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d -1 [44, 56[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|- [456, 461[456 MustHaveRegister 458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v20|d [50, 59[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v14|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v18|q [60, 246[62 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister  "SpillInDominator"
  v20|d DWORD "[r13|d]" v20|d v17|d [60, 72[66 ShouldHaveRegister  "OneSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [62, 70[62 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r14|d]" v22|d -1 [64, 136[[348, 362[[576, 606[64 MustHaveRegister 136 MustHaveRegister  "OneSpillStore"
  v23|d DWORD "[r11|d]" v23|d v20|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v1|d [68, 77[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister  "SpillInDominator"
  v25|d DWORD "[rax|d]" v25|d -1 [74, 88[[212, 220[[438, 440[74 MustHaveRegister 86 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 220 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r13|d]" v26|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r13|q]" v27|q v26|d [80, 226[80 MustHaveRegister 90 MustHaveRegister  "SpillInDominator"
  v28|q QWORD "[r11|q]" v28|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[r11|q]" v29|q -1 [82, 246[82 MustHaveRegister  "SpillInDominator"
  v30|d DWORD "[rsi|d]" v30|d v3|q [84, 122[[212, 246[84 MustHaveRegister 122 MustHaveRegister  "SpillInDominator"
  v31|q QWORD "[rax|q]" v31|q -1 [94, 116[94 MustHaveRegister 96 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[r8|q]" v32|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|- [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v31|q [116, 119[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|q [120, 131[122 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d v2|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [578, 602[578 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister 592 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [580, 586[580 MustHaveRegister 582 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [954, 956[954 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|- [960, 965[960 MustHaveRegister 962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v39|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q v44|q [606, 607[ "OneSpillStore"
  v46|q QWORD "[rax|q]" v46|q v37|q [132, 212[[276, 304[[344, 348[[362, 384[[1024, 1028[[1036, 1047[142 MustHaveRegister 372 MustHaveRegister 378 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r14|q]" v47|q v22|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [134, 137[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [138, 190[[194, 196[138 MustHaveRegister 140 MustHaveRegister 150 MustHaveRegister 158 MustHaveRegister 182 MustHaveRegister 189 LiveAtLoopEnd 196 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rcx|d]" v50|d -1 [140, 154[140 MustHaveRegister 148 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d -1 [142, 146[142 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v51|d [146, 190[[194, 196[146 MustHaveRegister 150 MustHaveRegister 158 ShouldHaveRegister 162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r9|q]" v53|q -1 [144, 147[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r9|q]" v54|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q -1 [162, 190[162 MustHaveRegister 164 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[r9|d]" v56|d -1 [164, 190[164 MustHaveRegister 170 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v62|d [168, 186[170 ShouldHaveRegister 174 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r14|d]" v58|d v57|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r14|d]" v59|d -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r14|q]" v60|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r14|q]" v61|q -1 [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d v57|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rsi|d]" v64|d -1 [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q -1 [286, 298[286 MustHaveRegister 290 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v64|d [288, 296[[362, 364[288 MustHaveRegister 296 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r8|q]" v67|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q -1 [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rsi|d]" v69|d v46|q [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [376, 378[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rsi|q]" v71|q v70|q [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v73|q [390, 394[[406, 412[[416, 422[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [420, 432[420 MustHaveRegister 424 MustHaveRegister 430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q v72|q [422, 430[[538, 540[422 MustHaveRegister 430 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rsi|q]" v77|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r8|q]" v78|q v25|d [214, 225[[438, 449[214 MustHaveRegister 224 ShouldHaveRegister 448 ShouldHaveRegister  "OneSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q v79|d [442, 446[[546, 560[442 MustHaveRegister 444 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d -1 [548, 552[548 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q v81|d [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [550, 553[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [554, 562[554 MustHaveRegister 556 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[r9|q]" v85|q -1 [556, 564[556 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[rax|d]" v86|d rax|- [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q rax|- [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[r8|q]" v88|q v78|q [226, 241[228 MustHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v89|d v101|d [226, 242[242 ShouldHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v90|d -1 [228, 238[[304, 306[228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 236 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[r13|q]" v91|q v90|d [230, 245[230 MustHaveRegister 244 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[r10|q]" v93|q v92|d [308, 312[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rdx|d]" v94|d -1 [874, 878[874 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdx|q]" v95|q v94|d [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rbx|q]" v96|q -1 [876, 879[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rbx|q]" v97|q -1 [880, 888[880 MustHaveRegister 882 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[rax|q]" v98|q -1 [882, 890[882 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d rax|- [894, 896[894 MustHaveRegister 896 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rcx|q]" v100|q -1 [240, 241[240 MustHaveRegister  "NoDefinitionFound"
  v101|d DWORD "[r14|d]" v101|d v89|d [242, 245[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rbp|q]" v102|q -1 [248, 262[248 MustHaveRegister 250 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[r13|q]" v103|q -1 [250, 264[250 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v104|q QWORD "[rax|q]" v104|q rax|- [268, 276[[316, 344[[462, 486[268 MustHaveRegister 476 MustHaveRegister 480 ShouldHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rsi|q]" v105|q -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rsi|d]" v106|d -1 [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[r10|q]" v107|q -1 [326, 338[326 MustHaveRegister 330 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q v106|d [328, 336[[466, 468[328 MustHaveRegister 336 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[r11|q]" v109|q -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[rsi|q]" v110|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rsi|d]" v111|d v104|q [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q v88|q [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[r8|q]" v113|q v88|q [490, 494[[506, 512[[516, 522[490 MustHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [520, 532[520 MustHaveRegister 524 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r8|q]" v115|q v113|q [522, 530[[628, 630[522 MustHaveRegister 530 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rdx|q]" v116|q -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r13|q]" v118|q v91|q [644, 648[[702, 744[[754, 828[[902, 920[[998, 1004[646 MustHaveRegister 704 MustHaveRegister 718 MustHaveRegister 768 MustHaveRegister 770 ShouldHaveRegister 780 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[rdx|d]" v119|d -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[rdx|d]" v120|d v119|d [658, 662[658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q rax|- [750, 751[750 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[rdx|d]" v122|d -1 [834, 848[834 MustHaveRegister 836 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[rbx|d]" v123|d -1 [838, 842[838 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[rbx|q]" v124|q v123|d [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rax|q]" v125|q -1 [840, 843[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rbx|q]" v126|q -1 [844, 854[844 MustHaveRegister 846 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rax|q]" v127|q -1 [846, 856[846 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[rdx|q]" v128|q v122|d [848, 851[848 MustHaveRegister  "OneSpillStore"
  v129|d DWORD "[rax|d]" v129|d rax|- [860, 864[[1004, 1011[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q v130|q [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q v131|q [684, 688[684 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[rax|q]" v133|q -1 [686, 694[686 MustHaveRegister 690 ShouldHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q v132|q [688, 690[688 MustHaveRegister 690 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[rsi|q]" v135|q v134|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[rax|q]" v136|q v133|q [694, 696[694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[r8|d]" v137|d -1 [704, 744[[754, 828[[902, 916[[998, 1004[704 MustHaveRegister 916 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[r9|q]" v138|q -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[r9|d]" v139|d -1 [720, 728[720 MustHaveRegister 722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v140|q QWORD "[rcx|q]" v140|q -1 [726, 738[726 MustHaveRegister 730 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r9|q]" v141|q v139|d [728, 736[[758, 760[728 MustHaveRegister 736 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[rbx|q]" v142|q -1 [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v143|q QWORD "[r9|q]" v143|q -1 [738, 740[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[rsi|q]" v144|q v118|q [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v145|q QWORD "[rsi|q]" v145|q v118|q [780, 784[[796, 802[[806, 812[780 MustHaveRegister 782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v146|q QWORD "[rdx|q]" v146|q -1 [810, 822[810 MustHaveRegister 814 MustHaveRegister 820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[rsi|q]" v147|q v145|q [812, 820[[902, 904[812 MustHaveRegister 820 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[rbx|q]" v148|q -1 [818, 820[818 MustHaveRegister 820 MustHaveRegister  "NoSpillStore"
  v149|q QWORD "[rsi|q]" v149|q -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v150|q QWORD "[rbx|q]" v150|q -1 [912, 922[912 MustHaveRegister 914 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v151|q QWORD "[rax|q]" v151|q -1 [914, 924[914 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v152|q QWORD "[r8|q]" v152|q v137|d [916, 925[916 MustHaveRegister  "OneSpillStore"
  v153|q QWORD "[rsi|q]" v153|q -1 [930, 932[930 MustHaveRegister 932 MustHaveRegister  "NoSpillStore"
  v154|q QWORD "[rsi|q]" v154|q v153|q [932, 934[932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v155|q QWORD "[rsi|q]" v155|q v154|q [934, 938[934 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v156|q QWORD "[rax|q]" v156|q -1 [936, 944[936 MustHaveRegister 940 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v157|q QWORD "[rsi|q]" v157|q v155|q [938, 940[938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v158|q QWORD "[rsi|q]" v158|q v157|q [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v159|q QWORD "[rax|q]" v159|q v156|q [944, 946[944 MustHaveRegister 946 MustHaveRegister  "NoSpillStore"
  v160|d DWORD "[r10|d]" v160|d -1 [1052, 1054[1054 MustHaveRegister  "NoSpillStore"
  v161|q QWORD "[r11|q]" v161|q -1 [1052, 1056[1056 MustHaveRegister  "NoSpillStore"
  v162|q QWORD "[rdi|q]" v0|q v0|q [251, 265[252 ShouldHaveRegister  "SpillInDominator"
  v163|d DWORD "[r10|d]" v1|d v1|d [17, 128[[212, 265[68 ShouldHaveRegister 128 MustHaveRegister 216 MustHaveRegister 236 MustHaveRegister 245 LiveAtLoopEnd 254 ShouldHaveRegister  "OneSpillStore"
  v164|q QWORD "[vstack:5|q]" v2|q v2|q [450, 453[ "SpillInDominator"
  v165|q QWORD "[r11|q]" v3|q v3|q [257, 265[258 ShouldHaveRegister  "SpillInDominator"
  v166|d DWORD "[vstack:15|d]" v4|d v4|d [246, 259[ "SpillInDominator"
  v167|d DWORD "[vstack:12|d]" v5|d v5|d [246, 255[ "SpillInDominator"
  v168|d DWORD "[vstack:18|d]" v1|d v1|d [265, 276[[304, 312[[316, 344[[348, 362[[438, 446[[450, 538[[546, 572[[576, 619[[628, 640[[872, 898[[952, 974[[986, 992[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[610 ShouldHaveRegister 974 ShouldHaveRegister 992 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[vstack:10|q]" v8|q v8|q [246, 253[ "OneSpillStore"
  v170|d DWORD "[vstack:0|d]" v11|d v11|d [246, 265[ "SpillInDominator"
  v171|d DWORD "[vstack:17|d]" v12|d v12|d [246, 263[ "SpillInDominator"
  v172|q QWORD "[vstack:16|q]" v19|q v19|q [246, 261[ "SpillInDominator"
  v173|d DWORD "[vstack:22|d]" v22|d v22|d [606, 617[ "OneSpillStore"
  v174|d DWORD "[vstack:0|d]" v11|d v11|d [226, 246[ "SpillInDominator"
  v175|d DWORD "[vstack:0|d]" v11|d v11|d [60, 226[ "SpillInDominator"
  v176|d DWORD "[vstack:2|d]" v24|d v24|d [606, 617[ "SpillInDominator"
  v177|d DWORD "[r13|d]" v20|d v20|d [1052, 1059[ "OneSpillStore"
  v178|d DWORD "[vstack:1|d]" v20|d v20|d [72, 100[[212, 218[[348, 359[[438, 446[[546, 549[[576, 584[[952, 963[[1020, 1024[[1048, 1052[ "OneSpillStore"
  v179|d DWORD "[r11|d]" v24|d v24|d [276, 304[[344, 388[[576, 606[278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister  "SpillInDominator"
  v180|d DWORD "[vstack:2|d]" v24|d v24|d [77, 212[ "SpillInDominator"
  v181|q QWORD "[vstack:6|q]" v27|q v27|q [265, 450[[462, 668[ "SpillInDominator"
  v182|q QWORD "[vstack:8|q]" v29|q v29|q [246, 265[ "SpillInDominator"
  v183|d DWORD "[vstack:9|d]" v30|d v30|d [246, 251[ "SpillInDominator"
  v184|q QWORD "[rdi|q]" v0|q v0|q [246, 251[ "SpillInDominator"
  v185|q QWORD "[vstack:3|q]" v0|q v0|q [83, 246[ "SpillInDominator"
  v186|q QWORD "[r11|q]" v3|q v3|q [246, 257[ "SpillInDominator"
  v187|q QWORD "[vstack:4|q]" v3|q v3|q [92, 100[[212, 246[ "SpillInDominator"
  v188|q QWORD "[vstack:20|q]" v78|q v78|q [546, 565[ "OneSpillStore"
  v189|q QWORD "[vstack:14|q]" v88|q v88|q [246, 257[ "OneSpillStore"
  v190|d DWORD "[vstack:19|d]" v89|d v89|d [246, 265[ "OneSpillStore"
  v191|q QWORD "[vstack:5|q]" v2|q v2|q [226, 256[[304, 312[[348, 362[[438, 446[256 ShouldHaveRegister 310 ShouldHaveRegister 444 ShouldHaveRegister  "SpillInDominator"
  v192|q QWORD "[vstack:7|q]" v91|q v91|q [246, 265[ "OneSpillStore"
  v193|q QWORD "[r13|q]" v27|q v27|q [246, 249[248 MustHaveRegister  "SpillInDominator"
  v194|q QWORD "[vstack:6|q]" v27|q v27|q [226, 246[ "SpillInDominator"
  v195|q QWORD "[vstack:16|q]" v19|q v19|q [261, 276[ "SpillInDominator"
  v196|q QWORD "[vstack:7|q]" v91|q v91|q [265, 276[[304, 315[[316, 344[[462, 538[[628, 643[[872, 901[[986, 997[314 ShouldHaveRegister 642 ShouldHaveRegister 900 ShouldHaveRegister 996 ShouldHaveRegister  "OneSpillStore"
  v197|q QWORD "[vstack:14|q]" v88|q v88|q [257, 276[[304, 312[ "OneSpillStore"
  v198|q QWORD "[vstack:8|q]" v29|q v29|q [265, 386[ "SpillInDominator"
  v199|d DWORD "[vstack:19|d]" v89|d v89|d [265, 276[[304, 312[[316, 344[[462, 538[[628, 638[[872, 898[638 ShouldHaveRegister  "OneSpillStore"
  v200|d DWORD "[vstack:0|d]" v11|d v11|d [265, 676[ "SpillInDominator"
  v201|q QWORD "[vstack:10|q]" v8|q v8|q [253, 689[[702, 939[[952, 1004[688 ShouldHaveRegister 938 ShouldHaveRegister  "OneSpillStore"
  v202|d DWORD "[vstack:17|d]" v12|d v12|d [263, 676[ "SpillInDominator"
  v203|d DWORD "[vstack:15|d]" v4|d v4|d [259, 276[[304, 344[[348, 359[[438, 538[[546, 584[[628, 648[ "SpillInDominator"
  v204|d DWORD "[vstack:9|d]" v30|d v30|d [251, 276[[304, 344[[348, 362[[438, 450[[462, 538[[546, 576[[628, 648[[702, 744[[754, 766[ "SpillInDominator"
  v205|d DWORD "[vstack:12|d]" v5|d v5|d [255, 672[[702, 708[[744, 754[ "SpillInDominator"
  v206|q QWORD "[vstack:6|q]" v27|q v27|q [249, 265[ "SpillInDominator"
  v207|q QWORD "[vstack:3|q]" v0|q v0|q [265, 652[452 ShouldHaveRegister 620 ShouldHaveRegister  "SpillInDominator"
  v208|d DWORD "[rsi|d]" v30|d v30|d [766, 768[768 MustHaveRegister  "SpillInDominator"
  v209|d DWORD "[rdi|d]" v5|d v5|d [828, 837[830 MustHaveRegister  "SpillInDominator"
  v210|q QWORD "[vstack:4|q]" v3|q v3|q [265, 276[[304, 344[[348, 359[[438, 538[[546, 619[[628, 648[[702, 744[[754, 774[614 ShouldHaveRegister 770 ShouldHaveRegister  "SpillInDominator"
  v211|q QWORD "[r8|q]" v88|q v88|q [316, 344[[462, 490[[872, 875[318 MustHaveRegister 478 MustHaveRegister 480 ShouldHaveRegister 490 MustHaveRegister  "OneSpillStore"
  v212|d DWORD "[r9|d]" v4|d v4|d [702, 708[706 MustHaveRegister  "SpillInDominator"
  v213|q QWORD "[rbx|q]" v19|q v19|q [276, 312[[316, 388[[438, 446[[462, 538[278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister  "SpillInDominator"
  v214|d DWORD "[rbp|d]" v12|d v12|d [676, 696[[702, 744[696 MustHaveRegister  "SpillInDominator"
  v215|q QWORD "[r13|q]" v91|q v91|q [1060, 1067[ "OneSpillStore"
  v216|q QWORD "[r10|q]" v29|q v29|q [386, 394[[406, 412[[416, 422[[438, 450[[462, 538[392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister  "SpillInDominator"
  v217|q QWORD "[rsi|q]" v0|q v0|q [652, 672[[702, 745[654 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "SpillInDominator"
  v218|d DWORD "[rdx|d]" v1|d v1|d [1068, 1075[ "OneSpillStore"
  v219|q QWORD "[r10|q]" v3|q v3|q [774, 776[776 MustHaveRegister  "SpillInDominator"
  v220|d DWORD "[r14|d]" v89|d v89|d [1060, 1067[ "OneSpillStore"
  v221|q QWORD "[r13|q]" v27|q v27|q [668, 671[670 MustHaveRegister  "SpillInDominator"
  v222|d DWORD "[r11|d]" v11|d v11|d [676, 692[[702, 744[686 MustHaveRegister 692 MustHaveRegister  "SpillInDominator"
  v223|q QWORD "[vstack:16|q]" v19|q v19|q [546, 561[ "SpillInDominator"
  v224|q QWORD "[vstack:8|q]" v29|q v29|q [546, 565[ "SpillInDominator"
  v225|q QWORD "[vstack:5|q]" v2|q v2|q [453, 462[ "SpillInDominator"
  v226|q QWORD "[rcx|q]" v2|q v2|q [546, 565[548 MustHaveRegister 558 ShouldHaveRegister  "SpillInDominator"
  v227|q QWORD "[vstack:5|q]" v2|q v2|q [565, 572[[576, 619[612 ShouldHaveRegister  "SpillInDominator"
  v228|q QWORD "[vstack:20|q]" v78|q v78|q [565, 575[[966, 968[574 ShouldHaveRegister 968 ShouldHaveRegister  "OneSpillStore"
  v229|q QWORD "[vstack:8|q]" v29|q v29|q [565, 648[[702, 744[[754, 778[ "SpillInDominator"
  v230|q QWORD "[vstack:16|q]" v19|q v19|q [561, 565[ "SpillInDominator"
  v231|q QWORD "[vstack:16|q]" v19|q v19|q [565, 572[[576, 640[[872, 898[[952, 972[[986, 990[[1012, 1019[[1020, 1028[[1036, 1047[[1048, 1059[972 ShouldHaveRegister 990 ShouldHaveRegister  "SpillInDominator"
  v232|q QWORD "[r8|q]" v78|q v78|q [1012, 1019[ "OneSpillStore"
  v233|q QWORD "[rcx|q]" v2|q v2|q [872, 891[874 MustHaveRegister 884 ShouldHaveRegister  "SpillInDominator"
  v234|q QWORD "[r11|q]" v29|q v29|q [778, 784[[796, 802[[806, 812[782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "SpillInDominator"
  v235|q QWORD "[rbx|q]" v19|q v19|q [1060, 1067[ "SpillInDominator"
  v236|q QWORD "[r10|q]" v45|q v45|q [607, 617[608 ShouldHaveRegister  "OneSpillStore"
  v237|d DWORD "[vstack:2|d]" v24|d v24|d [617, 628[[952, 966[[1024, 1028[[1036, 1040[ "SpillInDominator"
  v238|d DWORD "[vstack:22|d]" v22|d v22|d [617, 628[[952, 966[ "OneSpillStore"
  v239|q QWORD "[vstack:21|q]" v45|q v45|q [617, 627[622 ShouldHaveRegister 626 ShouldHaveRegister  "OneSpillStore"
  v240|d DWORD "[r11|d]" v24|d v24|d [1040, 1047[ "SpillInDominator"
  v241|q QWORD "[r10|q]" v0|q v0|q [745, 747[746 ShouldHaveRegister  "SpillInDominator"
  v242|q QWORD "[vstack:6|q]" v27|q v27|q [702, 744[ "SpillInDominator"
  v243|d DWORD "[vstack:0|d]" v11|d v11|d [744, 747[ "SpillInDominator"
  v244|d DWORD "[vstack:17|d]" v12|d v12|d [744, 747[ "SpillInDominator"
  v245|d DWORD "[vstack:15|d]" v4|d v4|d [872, 891[ "SpillInDominator"
  v246|q QWORD "[vstack:6|q]" v27|q v27|q [744, 747[ "SpillInDominator"
  v247|q QWORD "[vstack:6|q]" v27|q v27|q [747, 828[[872, 910[ "SpillInDominator"
  v248|d DWORD "[vstack:0|d]" v11|d v11|d [747, 910[ "SpillInDominator"
  v249|d DWORD "[vstack:17|d]" v12|d v12|d [747, 910[ "SpillInDominator"
  v250|q QWORD "[vstack:3|q]" v0|q v0|q [747, 832[ "SpillInDominator"
  v251|q QWORD "[r10|q]" v93|q v93|q [872, 886[886 ShouldHaveRegister  "NoSpillStore"
  v252|q QWORD "[rsi|q]" v0|q v0|q [832, 849[834 MustHaveRegister 838 MustHaveRegister  "SpillInDominator"
  v253|q QWORD "[r10|q]" v27|q v27|q [910, 912[[952, 966[912 MustHaveRegister  "SpillInDominator"
  v254|d DWORD "[vstack:0|d]" v11|d v11|d [910, 925[ "SpillInDominator"
  v255|d DWORD "[vstack:17|d]" v12|d v12|d [910, 925[ "SpillInDominator"
  v256|d DWORD "[vstack:9|d]" v30|d v30|d [872, 883[ "SpillInDominator"
  v257|q QWORD "[vstack:4|q]" v3|q v3|q [872, 891[ "SpillInDominator"
  v258|q QWORD "[vstack:8|q]" v29|q v29|q [872, 891[ "SpillInDominator"
  v259|d DWORD "[vstack:12|d]" v5|d v5|d [872, 891[ "SpillInDominator"
  v260|q QWORD "[r10|q]" v0|q v0|q [849, 857[850 ShouldHaveRegister  "SpillInDominator"
  v261|q QWORD "[r11|q]" v128|q v128|q [851, 857[852 ShouldHaveRegister  "OneSpillStore"
  v262|q QWORD "[vstack:3|q]" v0|q v0|q [857, 864[[872, 918[[952, 1011[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[918 ShouldHaveRegister 970 ShouldHaveRegister 988 ShouldHaveRegister  "SpillInDominator"
  v263|q QWORD "[vstack:23|q]" v128|q v128|q [857, 864[ "OneSpillStore"
  v264|q QWORD "[rsi|q]" v0|q v0|q [1068, 1075[ "SpillInDominator"
  v265|q QWORD "[rdx|q]" v128|q v128|q [1004, 1011[ "OneSpillStore"
  v266|q QWORD "[vstack:5|q]" v2|q v2|q [891, 898[[952, 976[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[976 ShouldHaveRegister  "SpillInDominator"
  v267|q QWORD "[vstack:4|q]" v3|q v3|q [891, 902[[952, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[978 ShouldHaveRegister  "SpillInDominator"
  v268|d DWORD "[vstack:12|d]" v5|d v5|d [891, 902[[952, 1001[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[ "SpillInDominator"
  v269|q QWORD "[vstack:8|q]" v29|q v29|q [891, 902[[952, 998[ "SpillInDominator"
  v270|d DWORD "[vstack:9|d]" v30|d v30|d [883, 891[ "SpillInDominator"
  v271|d DWORD "[vstack:15|d]" v4|d v4|d [891, 902[[952, 963[[966, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[ "SpillInDominator"
  v272|d DWORD "[vstack:9|d]" v30|d v30|d [891, 902[[966, 998[ "SpillInDominator"
  v273|q QWORD "[rcx|q]" v2|q v2|q [1068, 1075[ "SpillInDominator"
  v274|q QWORD "[r8|q]" v3|q v3|q [1068, 1075[ "SpillInDominator"
  v275|d DWORD "[r9|d]" v4|d v4|d [1068, 1075[ "SpillInDominator"
  v276|d DWORD "[rdi|d]" v5|d v5|d [1068, 1075[ "SpillInDominator"
  v277|q QWORD "[vstack:6|q]" v27|q v27|q [966, 979[ "SpillInDominator"
  v278|d DWORD "[vstack:0|d]" v11|d v11|d [925, 935[ "SpillInDominator"
  v279|d DWORD "[vstack:17|d]" v12|d v12|d [925, 945[ "SpillInDominator"
  v280|q QWORD "[vstack:24|q]" v152|q v152|q [925, 948[948 ShouldHaveRegister  "OneSpillStore"
  v281|d DWORD "[r11|d]" v11|d v11|d [935, 942[[952, 966[936 MustHaveRegister 942 MustHaveRegister  "SpillInDominator"
  v282|d DWORD "[rbp|d]" v12|d v12|d [945, 946[[952, 966[946 MustHaveRegister  "SpillInDominator"
  v283|d DWORD "[vstack:0|d]" v11|d v11|d [966, 979[ "SpillInDominator"
  v284|d DWORD "[vstack:17|d]" v12|d v12|d [966, 979[ "SpillInDominator"
  v285|d DWORD "[vstack:17|d]" v12|d v12|d [979, 1004[ "SpillInDominator"
  v286|d DWORD "[vstack:0|d]" v11|d v11|d [979, 1004[ "SpillInDominator"
  v287|q QWORD "[vstack:6|q]" v27|q v27|q [979, 1004[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   62  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVE v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   82  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = MOVE v193|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[_] = STACKMOVE (input: v183|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v184|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = STACKMOVE (input: v169|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = STACKMOVE (input: v167|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = STACKMOVE (input: v189|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = STACKMOVE (input: v166|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v195|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = STACKMOVE (input: v171|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD[_] = STACKMOVE (input: v170|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = STACKMOVE (input: v206|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = STACKMOVE (input: v190|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = STACKMOVE (input: v182|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = STACKMOVE (input: v192|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  268  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  356  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  360  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v225|QWORD[.] = STACKMOVE (input: v164|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  456  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  460  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v230|QWORD[.] = MOVE v223|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = STACKMOVE (input: v230|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = STACKMOVE (input: v224|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[.] = MOVE v226|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = STACKMOVE (input: v188|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  568  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = STACKMOVE (input: v176|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = MOVE v236|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  626  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[_] = STACKMOVE (input: v244|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v248|DWORD[_] = STACKMOVE (input: v243|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v247|QWORD = STACKMOVE (input: v246|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v241|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  750  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v260|QWORD[.] = MOVE v252|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v261|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v263|QWORD[.] = MOVE v261|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = MOVE v260|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  860  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v270|DWORD[_] = MOVE v256|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = STACKMOVE (input: v259|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = STACKMOVE (input: v258|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = STACKMOVE (input: v245|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v272|DWORD[_] = STACKMOVE (input: v270|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v267|QWORD[.] = STACKMOVE (input: v257|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = MOVE v233|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  894  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v280|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[_] = STACKMOVE (input: v255|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v278|DWORD[_] = STACKMOVE (input: v254|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[_] = MOVE v278|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v282|DWORD[_] = MOVE v279|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  956  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  960  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr  964  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v285|DWORD[_] = STACKMOVE (input: v284|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v286|DWORD[_] = STACKMOVE (input: v283|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = STACKMOVE (input: v277|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  982  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  996  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v103|q [0, 1[[18, 24[[264, 268[[354, 356[[454, 456[[564, 568[[618, 619[[624, 625[[678, 684[[698, 700[[748, 750[[856, 860[[890, 894[[924, 927[[928, 934[[948, 950[[958, 960[[980, 982[[994, 995[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[256, 267[[454, 455[[566, 567[[612, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[972, 981[[992, 995[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[18, 20[[254, 267[[454, 455[[560, 567[[610, 619[[622, 625[[678, 680[[748, 749[[852, 859[[886, 893[[920, 927[[928, 930[[970, 981[[990, 995[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v102|q [0, 1[[262, 267[[454, 455[[562, 567[[618, 619[[624, 625[[748, 749[[854, 859[[888, 893[[922, 927[[980, 981[[994, 995[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[252, 267[[352, 354[[364, 366[[452, 455[[468, 470[[540, 542[[558, 567[[608, 619[[620, 625[[630, 632[[746, 749[[760, 762[[850, 859[[884, 893[[904, 906[[918, 927[[956, 958[[968, 981[[988, 995[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[978, 981[[994, 995[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[258, 267[[454, 455[[566, 567[[614, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[974, 981[[994, 995[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[260, 267[[454, 455[[566, 567[[616, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[976, 981[[994, 995[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 83[6 MustHaveRegister 44 MustHaveRegister 76 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 17[8 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 124[[212, 226[10 MustHaveRegister 124 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 92[12 MustHaveRegister 84 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r9|d]" v4|d r9|- [14, 100[[212, 246[14 MustHaveRegister  "StoreAtDefinition"
  v5|d DWORD "[rdi|d]" v5|d rdi|- [16, 246[16 MustHaveRegister  "StoreAtDefinition"
  v6|q QWORD "[rdx|q]" v6|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v6|q [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q v7|q [24, 246[24 MustHaveRegister  "OneSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [30, 60[30 MustHaveRegister 38 MustHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[rbp|d]" v12|d -1 [32, 246[32 MustHaveRegister 40 MustHaveRegister  "StoreAtDefinition"
  v13|d DWORD "[rbx|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d -1 [44, 56[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|- [456, 461[456 MustHaveRegister 458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v20|d [50, 59[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v14|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v18|q [60, 246[62 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister  "StoreAtDefinition"
  v20|d DWORD "[r13|d]" v20|d v17|d [60, 72[66 ShouldHaveRegister  "OneSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [62, 70[62 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r14|d]" v22|d -1 [64, 136[[348, 362[[576, 606[64 MustHaveRegister 136 MustHaveRegister  "OneSpillStore"
  v23|d DWORD "[r11|d]" v23|d v20|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v1|d [68, 77[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister  "StoreAtDefinition"
  v25|d DWORD "[rax|d]" v25|d -1 [74, 88[[212, 220[[438, 440[74 MustHaveRegister 86 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 220 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r13|d]" v26|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r13|q]" v27|q v26|d [80, 226[80 MustHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v28|q QWORD "[r11|q]" v28|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[r11|q]" v29|q -1 [82, 246[82 MustHaveRegister  "StoreAtDefinition"
  v30|d DWORD "[rsi|d]" v30|d v3|q [84, 122[[212, 246[84 MustHaveRegister 122 MustHaveRegister  "StoreAtDefinition"
  v31|q QWORD "[rax|q]" v31|q -1 [94, 116[94 MustHaveRegister 96 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[r8|q]" v32|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|- [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v31|q [116, 119[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|q [120, 131[122 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d v2|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [578, 602[578 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister 592 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [580, 586[580 MustHaveRegister 582 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [954, 956[954 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|- [960, 965[960 MustHaveRegister 962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v39|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q v44|q [606, 607[ "OneSpillStore"
  v46|q QWORD "[rax|q]" v46|q v37|q [132, 212[[276, 304[[344, 348[[362, 384[[1024, 1028[[1036, 1047[142 MustHaveRegister 372 MustHaveRegister 378 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r14|q]" v47|q v22|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [134, 137[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [138, 190[[194, 196[138 MustHaveRegister 140 MustHaveRegister 150 MustHaveRegister 158 MustHaveRegister 182 MustHaveRegister 189 LiveAtLoopEnd 196 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rcx|d]" v50|d -1 [140, 154[140 MustHaveRegister 148 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d -1 [142, 146[142 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v51|d [146, 190[[194, 196[146 MustHaveRegister 150 MustHaveRegister 158 ShouldHaveRegister 162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r9|q]" v53|q -1 [144, 147[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r9|q]" v54|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q -1 [162, 190[162 MustHaveRegister 164 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[r9|d]" v56|d -1 [164, 190[164 MustHaveRegister 170 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v62|d [168, 186[170 ShouldHaveRegister 174 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r14|d]" v58|d v57|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r14|d]" v59|d -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r14|q]" v60|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r14|q]" v61|q -1 [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d v57|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rsi|d]" v64|d -1 [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q -1 [286, 298[286 MustHaveRegister 290 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v64|d [288, 296[[362, 364[288 MustHaveRegister 296 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r8|q]" v67|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q -1 [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rsi|d]" v69|d v46|q [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [376, 378[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rsi|q]" v71|q v70|q [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v73|q [390, 394[[406, 412[[416, 422[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [420, 432[420 MustHaveRegister 424 MustHaveRegister 430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q v72|q [422, 430[[538, 540[422 MustHaveRegister 430 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rsi|q]" v77|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r8|q]" v78|q v25|d [214, 225[[438, 449[214 MustHaveRegister 224 ShouldHaveRegister 448 ShouldHaveRegister  "OneSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q v79|d [442, 446[[546, 560[442 MustHaveRegister 444 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d -1 [548, 552[548 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q v81|d [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [550, 553[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [554, 562[554 MustHaveRegister 556 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[r9|q]" v85|q -1 [556, 564[556 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[rax|d]" v86|d rax|- [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q rax|- [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[r8|q]" v88|q v78|q [226, 241[228 MustHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v89|d v101|d [226, 242[242 ShouldHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v90|d -1 [228, 238[[304, 306[228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 236 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[r13|q]" v91|q v90|d [230, 245[230 MustHaveRegister 244 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[r10|q]" v93|q v92|d [308, 312[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rdx|d]" v94|d -1 [874, 878[874 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdx|q]" v95|q v94|d [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rbx|q]" v96|q -1 [876, 879[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rbx|q]" v97|q -1 [880, 888[880 MustHaveRegister 882 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[rax|q]" v98|q -1 [882, 890[882 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d rax|- [894, 896[894 MustHaveRegister 896 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rcx|q]" v100|q -1 [240, 241[240 MustHaveRegister  "NoDefinitionFound"
  v101|d DWORD "[r14|d]" v101|d v89|d [242, 245[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rbp|q]" v102|q -1 [248, 262[248 MustHaveRegister 250 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[r13|q]" v103|q -1 [250, 264[250 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v104|q QWORD "[rax|q]" v104|q rax|- [268, 276[[316, 344[[462, 486[268 MustHaveRegister 476 MustHaveRegister 480 ShouldHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rsi|q]" v105|q -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rsi|d]" v106|d -1 [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[r10|q]" v107|q -1 [326, 338[326 MustHaveRegister 330 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q v106|d [328, 336[[466, 468[328 MustHaveRegister 336 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[r11|q]" v109|q -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[rsi|q]" v110|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rsi|d]" v111|d v104|q [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q v88|q [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[r8|q]" v113|q v88|q [490, 494[[506, 512[[516, 522[490 MustHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [520, 532[520 MustHaveRegister 524 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r8|q]" v115|q v113|q [522, 530[[628, 630[522 MustHaveRegister 530 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rdx|q]" v116|q -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r13|q]" v118|q v91|q [644, 648[[702, 744[[754, 828[[902, 920[[998, 1004[646 MustHaveRegister 704 MustHaveRegister 718 MustHaveRegister 768 MustHaveRegister 770 ShouldHaveRegister 780 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[rdx|d]" v119|d -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[rdx|d]" v120|d v119|d [658, 662[658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q rax|- [750, 751[750 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[rdx|d]" v122|d -1 [834, 848[834 MustHaveRegister 836 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[rbx|d]" v123|d -1 [838, 842[838 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[rbx|q]" v124|q v123|d [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rax|q]" v125|q -1 [840, 843[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rbx|q]" v126|q -1 [844, 854[844 MustHaveRegister 846 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rax|q]" v127|q -1 [846, 856[846 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[rdx|q]" v128|q v122|d [848, 851[848 MustHaveRegister  "OneSpillStore"
  v129|d DWORD "[rax|d]" v129|d rax|- [860, 864[[1004, 1011[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q v130|q [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q v131|q [684, 688[684 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[rax|q]" v133|q -1 [686, 694[686 MustHaveRegister 690 ShouldHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q v132|q [688, 690[688 MustHaveRegister 690 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[rsi|q]" v135|q v134|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[rax|q]" v136|q v133|q [694, 696[694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[r8|d]" v137|d -1 [704, 744[[754, 828[[902, 916[[998, 1004[704 MustHaveRegister 916 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[r9|q]" v138|q -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[r9|d]" v139|d -1 [720, 728[720 MustHaveRegister 722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v140|q QWORD "[rcx|q]" v140|q -1 [726, 738[726 MustHaveRegister 730 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r9|q]" v141|q v139|d [728, 736[[758, 760[728 MustHaveRegister 736 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[rbx|q]" v142|q -1 [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v143|q QWORD "[r9|q]" v143|q -1 [738, 740[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[rsi|q]" v144|q v118|q [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v145|q QWORD "[rsi|q]" v145|q v118|q [780, 784[[796, 802[[806, 812[780 MustHaveRegister 782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v146|q QWORD "[rdx|q]" v146|q -1 [810, 822[810 MustHaveRegister 814 MustHaveRegister 820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[rsi|q]" v147|q v145|q [812, 820[[902, 904[812 MustHaveRegister 820 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[rbx|q]" v148|q -1 [818, 820[818 MustHaveRegister 820 MustHaveRegister  "NoSpillStore"
  v149|q QWORD "[rsi|q]" v149|q -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v150|q QWORD "[rbx|q]" v150|q -1 [912, 922[912 MustHaveRegister 914 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v151|q QWORD "[rax|q]" v151|q -1 [914, 924[914 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v152|q QWORD "[r8|q]" v152|q v137|d [916, 925[916 MustHaveRegister  "OneSpillStore"
  v153|q QWORD "[rsi|q]" v153|q -1 [930, 932[930 MustHaveRegister 932 MustHaveRegister  "NoSpillStore"
  v154|q QWORD "[rsi|q]" v154|q v153|q [932, 934[932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v155|q QWORD "[rsi|q]" v155|q v154|q [934, 938[934 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v156|q QWORD "[rax|q]" v156|q -1 [936, 944[936 MustHaveRegister 940 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v157|q QWORD "[rsi|q]" v157|q v155|q [938, 940[938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v158|q QWORD "[rsi|q]" v158|q v157|q [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v159|q QWORD "[rax|q]" v159|q v156|q [944, 946[944 MustHaveRegister 946 MustHaveRegister  "NoSpillStore"
  v160|d DWORD "[r10|d]" v160|d -1 [1052, 1054[1054 MustHaveRegister  "NoSpillStore"
  v161|q QWORD "[r11|q]" v161|q -1 [1052, 1056[1056 MustHaveRegister  "NoSpillStore"
  v162|q QWORD "[rdi|q]" v0|q v0|q [251, 265[252 ShouldHaveRegister  "StoreAtDefinition"
  v163|d DWORD "[r10|d]" v1|d v1|d [17, 128[[212, 265[68 ShouldHaveRegister 128 MustHaveRegister 216 MustHaveRegister 236 MustHaveRegister 245 LiveAtLoopEnd 254 ShouldHaveRegister  "OneSpillStore"
  v164|q QWORD "[vstack:5|q]" v2|q v2|q [450, 453[ "StoreAtDefinition"
  v165|q QWORD "[r11|q]" v3|q v3|q [257, 265[258 ShouldHaveRegister  "StoreAtDefinition"
  v166|d DWORD "[vstack:15|d]" v4|d v4|d [246, 259[ "StoreAtDefinition"
  v167|d DWORD "[vstack:12|d]" v5|d v5|d [246, 255[ "StoreAtDefinition"
  v168|d DWORD "[vstack:18|d]" v1|d v1|d [265, 276[[304, 312[[316, 344[[348, 362[[438, 446[[450, 538[[546, 572[[576, 619[[628, 640[[872, 898[[952, 974[[986, 992[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[610 ShouldHaveRegister 974 ShouldHaveRegister 992 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[vstack:10|q]" v8|q v8|q [246, 253[ "OneSpillStore"
  v170|d DWORD "[vstack:0|d]" v11|d v11|d [246, 265[ "StoreAtDefinition"
  v171|d DWORD "[vstack:17|d]" v12|d v12|d [246, 263[ "StoreAtDefinition"
  v172|q QWORD "[vstack:16|q]" v19|q v19|q [246, 261[ "StoreAtDefinition"
  v173|d DWORD "[vstack:22|d]" v22|d v22|d [606, 617[ "OneSpillStore"
  v174|d DWORD "[vstack:0|d]" v11|d v11|d [226, 246[ "StoreAtDefinition"
  v175|d DWORD "[vstack:0|d]" v11|d v11|d [60, 226[ "StoreAtDefinition"
  v176|d DWORD "[vstack:2|d]" v24|d v24|d [606, 617[ "StoreAtDefinition"
  v177|d DWORD "[r13|d]" v20|d v20|d [1052, 1059[ "OneSpillStore"
  v178|d DWORD "[vstack:1|d]" v20|d v20|d [72, 100[[212, 218[[348, 359[[438, 446[[546, 549[[576, 584[[952, 963[[1020, 1024[[1048, 1052[ "OneSpillStore"
  v179|d DWORD "[r11|d]" v24|d v24|d [276, 304[[344, 388[[576, 606[278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister  "StoreAtDefinition"
  v180|d DWORD "[vstack:2|d]" v24|d v24|d [77, 212[ "StoreAtDefinition"
  v181|q QWORD "[vstack:6|q]" v27|q v27|q [265, 450[[462, 668[ "StoreAtDefinition"
  v182|q QWORD "[vstack:8|q]" v29|q v29|q [246, 265[ "StoreAtDefinition"
  v183|d DWORD "[vstack:9|d]" v30|d v30|d [246, 251[ "StoreAtDefinition"
  v184|q QWORD "[rdi|q]" v0|q v0|q [246, 251[ "StoreAtDefinition"
  v185|q QWORD "[vstack:3|q]" v0|q v0|q [83, 246[ "StoreAtDefinition"
  v186|q QWORD "[r11|q]" v3|q v3|q [246, 257[ "StoreAtDefinition"
  v187|q QWORD "[vstack:4|q]" v3|q v3|q [92, 100[[212, 246[ "StoreAtDefinition"
  v188|q QWORD "[vstack:20|q]" v78|q v78|q [546, 565[ "OneSpillStore"
  v189|q QWORD "[vstack:14|q]" v88|q v88|q [246, 257[ "OneSpillStore"
  v190|d DWORD "[vstack:19|d]" v89|d v89|d [246, 265[ "OneSpillStore"
  v191|q QWORD "[vstack:5|q]" v2|q v2|q [226, 256[[304, 312[[348, 362[[438, 446[256 ShouldHaveRegister 310 ShouldHaveRegister 444 ShouldHaveRegister  "StoreAtDefinition"
  v192|q QWORD "[vstack:7|q]" v91|q v91|q [246, 265[ "OneSpillStore"
  v193|q QWORD "[r13|q]" v27|q v27|q [246, 249[248 MustHaveRegister  "StoreAtDefinition"
  v194|q QWORD "[vstack:6|q]" v27|q v27|q [226, 246[ "StoreAtDefinition"
  v195|q QWORD "[vstack:16|q]" v19|q v19|q [261, 276[ "StoreAtDefinition"
  v196|q QWORD "[vstack:7|q]" v91|q v91|q [265, 276[[304, 315[[316, 344[[462, 538[[628, 643[[872, 901[[986, 997[314 ShouldHaveRegister 642 ShouldHaveRegister 900 ShouldHaveRegister 996 ShouldHaveRegister  "OneSpillStore"
  v197|q QWORD "[vstack:14|q]" v88|q v88|q [257, 276[[304, 312[ "OneSpillStore"
  v198|q QWORD "[vstack:8|q]" v29|q v29|q [265, 386[ "StoreAtDefinition"
  v199|d DWORD "[vstack:19|d]" v89|d v89|d [265, 276[[304, 312[[316, 344[[462, 538[[628, 638[[872, 898[638 ShouldHaveRegister  "OneSpillStore"
  v200|d DWORD "[vstack:0|d]" v11|d v11|d [265, 676[ "StoreAtDefinition"
  v201|q QWORD "[vstack:10|q]" v8|q v8|q [253, 689[[702, 939[[952, 1004[688 ShouldHaveRegister 938 ShouldHaveRegister  "OneSpillStore"
  v202|d DWORD "[vstack:17|d]" v12|d v12|d [263, 676[ "StoreAtDefinition"
  v203|d DWORD "[vstack:15|d]" v4|d v4|d [259, 276[[304, 344[[348, 359[[438, 538[[546, 584[[628, 648[ "StoreAtDefinition"
  v204|d DWORD "[vstack:9|d]" v30|d v30|d [251, 276[[304, 344[[348, 362[[438, 450[[462, 538[[546, 576[[628, 648[[702, 744[[754, 766[ "StoreAtDefinition"
  v205|d DWORD "[vstack:12|d]" v5|d v5|d [255, 672[[702, 708[[744, 754[ "StoreAtDefinition"
  v206|q QWORD "[vstack:6|q]" v27|q v27|q [249, 265[ "StoreAtDefinition"
  v207|q QWORD "[vstack:3|q]" v0|q v0|q [265, 652[452 ShouldHaveRegister 620 ShouldHaveRegister  "StoreAtDefinition"
  v208|d DWORD "[rsi|d]" v30|d v30|d [766, 768[768 MustHaveRegister  "StoreAtDefinition"
  v209|d DWORD "[rdi|d]" v5|d v5|d [828, 837[830 MustHaveRegister  "StoreAtDefinition"
  v210|q QWORD "[vstack:4|q]" v3|q v3|q [265, 276[[304, 344[[348, 359[[438, 538[[546, 619[[628, 648[[702, 744[[754, 774[614 ShouldHaveRegister 770 ShouldHaveRegister  "StoreAtDefinition"
  v211|q QWORD "[r8|q]" v88|q v88|q [316, 344[[462, 490[[872, 875[318 MustHaveRegister 478 MustHaveRegister 480 ShouldHaveRegister 490 MustHaveRegister  "OneSpillStore"
  v212|d DWORD "[r9|d]" v4|d v4|d [702, 708[706 MustHaveRegister  "StoreAtDefinition"
  v213|q QWORD "[rbx|q]" v19|q v19|q [276, 312[[316, 388[[438, 446[[462, 538[278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister  "StoreAtDefinition"
  v214|d DWORD "[rbp|d]" v12|d v12|d [676, 696[[702, 744[696 MustHaveRegister  "StoreAtDefinition"
  v215|q QWORD "[r13|q]" v91|q v91|q [1060, 1067[ "OneSpillStore"
  v216|q QWORD "[r10|q]" v29|q v29|q [386, 394[[406, 412[[416, 422[[438, 450[[462, 538[392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister  "StoreAtDefinition"
  v217|q QWORD "[rsi|q]" v0|q v0|q [652, 672[[702, 745[654 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "StoreAtDefinition"
  v218|d DWORD "[rdx|d]" v1|d v1|d [1068, 1075[ "OneSpillStore"
  v219|q QWORD "[r10|q]" v3|q v3|q [774, 776[776 MustHaveRegister  "StoreAtDefinition"
  v220|d DWORD "[r14|d]" v89|d v89|d [1060, 1067[ "OneSpillStore"
  v221|q QWORD "[r13|q]" v27|q v27|q [668, 671[670 MustHaveRegister  "StoreAtDefinition"
  v222|d DWORD "[r11|d]" v11|d v11|d [676, 692[[702, 744[686 MustHaveRegister 692 MustHaveRegister  "StoreAtDefinition"
  v223|q QWORD "[vstack:16|q]" v19|q v19|q [546, 561[ "StoreAtDefinition"
  v224|q QWORD "[vstack:8|q]" v29|q v29|q [546, 565[ "StoreAtDefinition"
  v225|q QWORD "[vstack:5|q]" v2|q v2|q [453, 462[ "StoreAtDefinition"
  v226|q QWORD "[rcx|q]" v2|q v2|q [546, 565[548 MustHaveRegister 558 ShouldHaveRegister  "StoreAtDefinition"
  v227|q QWORD "[vstack:5|q]" v2|q v2|q [565, 572[[576, 619[612 ShouldHaveRegister  "StoreAtDefinition"
  v228|q QWORD "[vstack:20|q]" v78|q v78|q [565, 575[[966, 968[574 ShouldHaveRegister 968 ShouldHaveRegister  "OneSpillStore"
  v229|q QWORD "[vstack:8|q]" v29|q v29|q [565, 648[[702, 744[[754, 778[ "StoreAtDefinition"
  v230|q QWORD "[vstack:16|q]" v19|q v19|q [561, 565[ "StoreAtDefinition"
  v231|q QWORD "[vstack:16|q]" v19|q v19|q [565, 572[[576, 640[[872, 898[[952, 972[[986, 990[[1012, 1019[[1020, 1028[[1036, 1047[[1048, 1059[972 ShouldHaveRegister 990 ShouldHaveRegister  "StoreAtDefinition"
  v232|q QWORD "[r8|q]" v78|q v78|q [1012, 1019[ "OneSpillStore"
  v233|q QWORD "[rcx|q]" v2|q v2|q [872, 891[874 MustHaveRegister 884 ShouldHaveRegister  "StoreAtDefinition"
  v234|q QWORD "[r11|q]" v29|q v29|q [778, 784[[796, 802[[806, 812[782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "StoreAtDefinition"
  v235|q QWORD "[rbx|q]" v19|q v19|q [1060, 1067[ "StoreAtDefinition"
  v236|q QWORD "[r10|q]" v45|q v45|q [607, 617[608 ShouldHaveRegister  "OneSpillStore"
  v237|d DWORD "[vstack:2|d]" v24|d v24|d [617, 628[[952, 966[[1024, 1028[[1036, 1040[ "StoreAtDefinition"
  v238|d DWORD "[vstack:22|d]" v22|d v22|d [617, 628[[952, 966[ "OneSpillStore"
  v239|q QWORD "[vstack:21|q]" v45|q v45|q [617, 627[622 ShouldHaveRegister 626 ShouldHaveRegister  "OneSpillStore"
  v240|d DWORD "[r11|d]" v24|d v24|d [1040, 1047[ "StoreAtDefinition"
  v241|q QWORD "[r10|q]" v0|q v0|q [745, 747[746 ShouldHaveRegister  "StoreAtDefinition"
  v242|q QWORD "[vstack:6|q]" v27|q v27|q [702, 744[ "StoreAtDefinition"
  v243|d DWORD "[vstack:0|d]" v11|d v11|d [744, 747[ "StoreAtDefinition"
  v244|d DWORD "[vstack:17|d]" v12|d v12|d [744, 747[ "StoreAtDefinition"
  v245|d DWORD "[vstack:15|d]" v4|d v4|d [872, 891[ "StoreAtDefinition"
  v246|q QWORD "[vstack:6|q]" v27|q v27|q [744, 747[ "StoreAtDefinition"
  v247|q QWORD "[vstack:6|q]" v27|q v27|q [747, 828[[872, 910[ "StoreAtDefinition"
  v248|d DWORD "[vstack:0|d]" v11|d v11|d [747, 910[ "StoreAtDefinition"
  v249|d DWORD "[vstack:17|d]" v12|d v12|d [747, 910[ "StoreAtDefinition"
  v250|q QWORD "[vstack:3|q]" v0|q v0|q [747, 832[ "StoreAtDefinition"
  v251|q QWORD "[r10|q]" v93|q v93|q [872, 886[886 ShouldHaveRegister  "NoSpillStore"
  v252|q QWORD "[rsi|q]" v0|q v0|q [832, 849[834 MustHaveRegister 838 MustHaveRegister  "StoreAtDefinition"
  v253|q QWORD "[r10|q]" v27|q v27|q [910, 912[[952, 966[912 MustHaveRegister  "StoreAtDefinition"
  v254|d DWORD "[vstack:0|d]" v11|d v11|d [910, 925[ "StoreAtDefinition"
  v255|d DWORD "[vstack:17|d]" v12|d v12|d [910, 925[ "StoreAtDefinition"
  v256|d DWORD "[vstack:9|d]" v30|d v30|d [872, 883[ "StoreAtDefinition"
  v257|q QWORD "[vstack:4|q]" v3|q v3|q [872, 891[ "StoreAtDefinition"
  v258|q QWORD "[vstack:8|q]" v29|q v29|q [872, 891[ "StoreAtDefinition"
  v259|d DWORD "[vstack:12|d]" v5|d v5|d [872, 891[ "StoreAtDefinition"
  v260|q QWORD "[r10|q]" v0|q v0|q [849, 857[850 ShouldHaveRegister  "StoreAtDefinition"
  v261|q QWORD "[r11|q]" v128|q v128|q [851, 857[852 ShouldHaveRegister  "OneSpillStore"
  v262|q QWORD "[vstack:3|q]" v0|q v0|q [857, 864[[872, 918[[952, 1011[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[918 ShouldHaveRegister 970 ShouldHaveRegister 988 ShouldHaveRegister  "StoreAtDefinition"
  v263|q QWORD "[vstack:23|q]" v128|q v128|q [857, 864[ "OneSpillStore"
  v264|q QWORD "[rsi|q]" v0|q v0|q [1068, 1075[ "StoreAtDefinition"
  v265|q QWORD "[rdx|q]" v128|q v128|q [1004, 1011[ "OneSpillStore"
  v266|q QWORD "[vstack:5|q]" v2|q v2|q [891, 898[[952, 976[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[976 ShouldHaveRegister  "StoreAtDefinition"
  v267|q QWORD "[vstack:4|q]" v3|q v3|q [891, 902[[952, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[978 ShouldHaveRegister  "StoreAtDefinition"
  v268|d DWORD "[vstack:12|d]" v5|d v5|d [891, 902[[952, 1001[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[ "StoreAtDefinition"
  v269|q QWORD "[vstack:8|q]" v29|q v29|q [891, 902[[952, 998[ "StoreAtDefinition"
  v270|d DWORD "[vstack:9|d]" v30|d v30|d [883, 891[ "StoreAtDefinition"
  v271|d DWORD "[vstack:15|d]" v4|d v4|d [891, 902[[952, 963[[966, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[ "StoreAtDefinition"
  v272|d DWORD "[vstack:9|d]" v30|d v30|d [891, 902[[966, 998[ "StoreAtDefinition"
  v273|q QWORD "[rcx|q]" v2|q v2|q [1068, 1075[ "StoreAtDefinition"
  v274|q QWORD "[r8|q]" v3|q v3|q [1068, 1075[ "StoreAtDefinition"
  v275|d DWORD "[r9|d]" v4|d v4|d [1068, 1075[ "StoreAtDefinition"
  v276|d DWORD "[rdi|d]" v5|d v5|d [1068, 1075[ "StoreAtDefinition"
  v277|q QWORD "[vstack:6|q]" v27|q v27|q [966, 979[ "StoreAtDefinition"
  v278|d DWORD "[vstack:0|d]" v11|d v11|d [925, 935[ "StoreAtDefinition"
  v279|d DWORD "[vstack:17|d]" v12|d v12|d [925, 945[ "StoreAtDefinition"
  v280|q QWORD "[vstack:24|q]" v152|q v152|q [925, 948[948 ShouldHaveRegister  "OneSpillStore"
  v281|d DWORD "[r11|d]" v11|d v11|d [935, 942[[952, 966[936 MustHaveRegister 942 MustHaveRegister  "StoreAtDefinition"
  v282|d DWORD "[rbp|d]" v12|d v12|d [945, 946[[952, 966[946 MustHaveRegister  "StoreAtDefinition"
  v283|d DWORD "[vstack:0|d]" v11|d v11|d [966, 979[ "StoreAtDefinition"
  v284|d DWORD "[vstack:17|d]" v12|d v12|d [966, 979[ "StoreAtDefinition"
  v285|d DWORD "[vstack:17|d]" v12|d v12|d [979, 1004[ "StoreAtDefinition"
  v286|d DWORD "[vstack:0|d]" v11|d v11|d [979, 1004[ "StoreAtDefinition"
  v287|q QWORD "[vstack:6|q]" v27|q v27|q [979, 1004[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction JUMP ~[v18|QWORD[.], v17|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   62  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVE v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   82  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[v37|QWORD[.]] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[v62|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[v78|QWORD[.], int[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[v91|QWORD[.], v101|DWORD] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = MOVE v193|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[_] = STACKMOVE (input: v183|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v184|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = STACKMOVE (input: v169|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = STACKMOVE (input: v167|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = STACKMOVE (input: v189|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = STACKMOVE (input: v166|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v195|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = STACKMOVE (input: v171|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD[_] = STACKMOVE (input: v170|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = STACKMOVE (input: v206|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = STACKMOVE (input: v190|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = STACKMOVE (input: v182|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = STACKMOVE (input: v192|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  268  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  356  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr  360  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v225|QWORD[.] = STACKMOVE (input: v164|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  456  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr  460  <|@ instruction JUMP ~[v15|QWORD[.], v16|DWORD] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v230|QWORD[.] = MOVE v223|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = STACKMOVE (input: v230|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = STACKMOVE (input: v224|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[.] = MOVE v226|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = STACKMOVE (input: v188|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  568  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = STACKMOVE (input: v176|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = MOVE v236|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  626  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[_] = STACKMOVE (input: v244|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v248|DWORD[_] = STACKMOVE (input: v243|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v247|QWORD = STACKMOVE (input: v246|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v241|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  750  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v260|QWORD[.] = MOVE v252|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v261|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v263|QWORD[.] = MOVE v261|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = MOVE v260|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  860  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v270|DWORD[_] = MOVE v256|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = STACKMOVE (input: v259|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = STACKMOVE (input: v258|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = STACKMOVE (input: v245|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v272|DWORD[_] = STACKMOVE (input: v270|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v267|QWORD[.] = STACKMOVE (input: v257|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = MOVE v233|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  894  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v280|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[_] = STACKMOVE (input: v255|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v278|DWORD[_] = STACKMOVE (input: v254|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[_] = MOVE v278|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v282|DWORD[_] = MOVE v279|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  956  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  960  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr  964  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v285|DWORD[_] = STACKMOVE (input: v284|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v286|DWORD[_] = STACKMOVE (input: v283|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = STACKMOVE (input: v277|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  982  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v87|QWORD[.]] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  996  <|@ instruction JUMP ~[v91|QWORD[.]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction JUMP ~[int[-55347|0xffffffffffff27cd], long[5780|0x1694]] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v103|q [0, 1[[18, 24[[264, 268[[354, 356[[454, 456[[564, 568[[618, 619[[624, 625[[678, 684[[698, 700[[748, 750[[856, 860[[890, 894[[924, 927[[928, 934[[948, 950[[958, 960[[980, 982[[994, 995[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[256, 267[[454, 455[[566, 567[[612, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[972, 981[[992, 995[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[18, 20[[254, 267[[454, 455[[560, 567[[610, 619[[622, 625[[678, 680[[748, 749[[852, 859[[886, 893[[920, 927[[928, 930[[970, 981[[990, 995[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v102|q [0, 1[[262, 267[[454, 455[[562, 567[[618, 619[[624, 625[[748, 749[[854, 859[[888, 893[[922, 927[[980, 981[[994, 995[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[252, 267[[352, 354[[364, 366[[452, 455[[468, 470[[540, 542[[558, 567[[608, 619[[620, 625[[630, 632[[746, 749[[760, 762[[850, 859[[884, 893[[904, 906[[918, 927[[956, 958[[968, 981[[988, 995[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v3|q [0, 16[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[978, 981[[994, 995[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[258, 267[[454, 455[[566, 567[[614, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[974, 981[[994, 995[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v2|q [0, 14[[260, 267[[454, 455[[566, 567[[616, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[976, 981[[994, 995[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[266, 267[[454, 455[[566, 567[[618, 619[[624, 625[[748, 749[[858, 859[[892, 893[[926, 927[[980, 981[[994, 995[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 83[6 MustHaveRegister 44 MustHaveRegister 76 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 17[8 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 124[[212, 226[10 MustHaveRegister 124 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 92[12 MustHaveRegister 84 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r9|d]" v4|d r9|- [14, 100[[212, 246[14 MustHaveRegister  "StoreAtDefinition"
  v5|d DWORD "[rdi|d]" v5|d rdi|- [16, 246[16 MustHaveRegister  "StoreAtDefinition"
  v6|q QWORD "[rdx|q]" v6|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q v6|q [22, 24[22 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdx|q]" v8|q v7|q [24, 246[24 MustHaveRegister  "OneSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [30, 60[30 MustHaveRegister 38 MustHaveRegister  "StoreAtDefinition"
  v12|d DWORD "[rbp|d]" v12|d -1 [32, 246[32 MustHaveRegister 40 MustHaveRegister  "StoreAtDefinition"
  v13|d DWORD "[rbx|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d -1 [44, 56[44 MustHaveRegister 46 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|- [456, 461[456 MustHaveRegister 458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v20|d [50, 59[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v14|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v18|q [60, 246[62 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister  "StoreAtDefinition"
  v20|d DWORD "[r13|d]" v20|d v17|d [60, 72[66 ShouldHaveRegister  "OneSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [62, 70[62 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r14|d]" v22|d -1 [64, 136[[348, 362[[576, 606[64 MustHaveRegister 136 MustHaveRegister  "OneSpillStore"
  v23|d DWORD "[r11|d]" v23|d v20|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v1|d [68, 77[68 MustHaveRegister 70 ShouldHaveRegister 74 MustHaveRegister  "StoreAtDefinition"
  v25|d DWORD "[rax|d]" v25|d -1 [74, 88[[212, 220[[438, 440[74 MustHaveRegister 86 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 220 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r13|d]" v26|d -1 [76, 80[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r13|q]" v27|q v26|d [80, 226[80 MustHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v28|q QWORD "[r11|q]" v28|q -1 [78, 81[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[r11|q]" v29|q -1 [82, 246[82 MustHaveRegister  "StoreAtDefinition"
  v30|d DWORD "[rsi|d]" v30|d v3|q [84, 122[[212, 246[84 MustHaveRegister 122 MustHaveRegister  "StoreAtDefinition"
  v31|q QWORD "[rax|q]" v31|q -1 [94, 116[94 MustHaveRegister 96 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 MustHaveRegister 112 MustHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[r8|q]" v32|q -1 [96, 102[96 MustHaveRegister 98 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [350, 352[350 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|- [356, 361[356 MustHaveRegister 358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v31|q [116, 119[116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|q [120, 131[122 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d v2|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [578, 602[578 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister 592 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q -1 [580, 586[580 MustHaveRegister 582 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [954, 956[954 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|- [960, 965[960 MustHaveRegister 962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v39|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q v44|q [606, 607[ "OneSpillStore"
  v46|q QWORD "[rax|q]" v46|q v37|q [132, 212[[276, 304[[344, 348[[362, 384[[1024, 1028[[1036, 1047[142 MustHaveRegister 372 MustHaveRegister 378 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r14|q]" v47|q v22|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [134, 137[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [138, 190[[194, 196[138 MustHaveRegister 140 MustHaveRegister 150 MustHaveRegister 158 MustHaveRegister 182 MustHaveRegister 189 LiveAtLoopEnd 196 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rcx|d]" v50|d -1 [140, 154[140 MustHaveRegister 148 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d -1 [142, 146[142 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q v51|d [146, 190[[194, 196[146 MustHaveRegister 150 MustHaveRegister 158 ShouldHaveRegister 162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r9|q]" v53|q -1 [144, 147[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r9|q]" v54|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q -1 [162, 190[162 MustHaveRegister 164 MustHaveRegister 180 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v56|d DWORD "[r9|d]" v56|d -1 [164, 190[164 MustHaveRegister 170 MustHaveRegister 189 LiveAtLoopEnd  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v62|d [168, 186[170 ShouldHaveRegister 174 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r14|d]" v58|d v57|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r14|d]" v59|d -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r14|q]" v60|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r14|q]" v61|q -1 [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r10|d]" v62|d v57|d [186, 189[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rsi|d]" v64|d -1 [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q -1 [286, 298[286 MustHaveRegister 290 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v64|d [288, 296[[362, 364[288 MustHaveRegister 296 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r8|q]" v67|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q -1 [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[rsi|d]" v69|d v46|q [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [376, 378[376 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rsi|q]" v71|q v70|q [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v73|q [390, 394[[406, 412[[416, 422[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [420, 432[420 MustHaveRegister 424 MustHaveRegister 430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q v72|q [422, 430[[538, 540[422 MustHaveRegister 430 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rsi|q]" v77|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r8|q]" v78|q v25|d [214, 225[[438, 449[214 MustHaveRegister 224 ShouldHaveRegister 448 ShouldHaveRegister  "OneSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q v79|d [442, 446[[546, 560[442 MustHaveRegister 444 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d -1 [548, 552[548 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q v81|d [552, 554[552 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [550, 553[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [554, 562[554 MustHaveRegister 556 MustHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[r9|q]" v85|q -1 [556, 564[556 MustHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[rax|d]" v86|d rax|- [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q rax|- [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[r8|q]" v88|q v78|q [226, 241[228 MustHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v89|d v101|d [226, 242[242 ShouldHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v90|d -1 [228, 238[[304, 306[228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 236 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[r13|q]" v91|q v90|d [230, 245[230 MustHaveRegister 244 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[r10|q]" v93|q v92|d [308, 312[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rdx|d]" v94|d -1 [874, 878[874 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdx|q]" v95|q v94|d [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rbx|q]" v96|q -1 [876, 879[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rbx|q]" v97|q -1 [880, 888[880 MustHaveRegister 882 MustHaveRegister 888 ShouldHaveRegister  "NoSpillStore"
  v98|q QWORD "[rax|q]" v98|q -1 [882, 890[882 MustHaveRegister 890 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d rax|- [894, 896[894 MustHaveRegister 896 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rcx|q]" v100|q -1 [240, 241[240 MustHaveRegister  "NoDefinitionFound"
  v101|d DWORD "[r14|d]" v101|d v89|d [242, 245[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rbp|q]" v102|q -1 [248, 262[248 MustHaveRegister 250 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[r13|q]" v103|q -1 [250, 264[250 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v104|q QWORD "[rax|q]" v104|q rax|- [268, 276[[316, 344[[462, 486[268 MustHaveRegister 476 MustHaveRegister 480 ShouldHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rsi|q]" v105|q -1 [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rsi|d]" v106|d -1 [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[r10|q]" v107|q -1 [326, 338[326 MustHaveRegister 330 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q v106|d [328, 336[[466, 468[328 MustHaveRegister 336 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[r11|q]" v109|q -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[rsi|q]" v110|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rsi|d]" v111|d v104|q [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q v88|q [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[r8|q]" v113|q v88|q [490, 494[[506, 512[[516, 522[490 MustHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [520, 532[520 MustHaveRegister 524 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r8|q]" v115|q v113|q [522, 530[[628, 630[522 MustHaveRegister 530 MustHaveRegister 630 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rdx|q]" v116|q -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r13|q]" v118|q v91|q [644, 648[[702, 744[[754, 828[[902, 920[[998, 1004[646 MustHaveRegister 704 MustHaveRegister 718 MustHaveRegister 768 MustHaveRegister 770 ShouldHaveRegister 780 MustHaveRegister 920 ShouldHaveRegister  "NoSpillStore"
  v119|d DWORD "[rdx|d]" v119|d -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v120|d DWORD "[rdx|d]" v120|d v119|d [658, 662[658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[rax|q]" v121|q rax|- [750, 751[750 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[rdx|d]" v122|d -1 [834, 848[834 MustHaveRegister 836 MustHaveRegister 848 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[rbx|d]" v123|d -1 [838, 842[838 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[rbx|q]" v124|q v123|d [842, 844[842 MustHaveRegister 844 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rax|q]" v125|q -1 [840, 843[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rbx|q]" v126|q -1 [844, 854[844 MustHaveRegister 846 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rax|q]" v127|q -1 [846, 856[846 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v128|q QWORD "[rdx|q]" v128|q v122|d [848, 851[848 MustHaveRegister  "OneSpillStore"
  v129|d DWORD "[rax|d]" v129|d rax|- [860, 864[[1004, 1011[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v130|q QWORD "[rsi|q]" v130|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q v130|q [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v132|q QWORD "[rsi|q]" v132|q v131|q [684, 688[684 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[rax|q]" v133|q -1 [686, 694[686 MustHaveRegister 690 ShouldHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q v132|q [688, 690[688 MustHaveRegister 690 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[rsi|q]" v135|q v134|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[rax|q]" v136|q v133|q [694, 696[694 MustHaveRegister 696 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[r8|d]" v137|d -1 [704, 744[[754, 828[[902, 916[[998, 1004[704 MustHaveRegister 916 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[r9|q]" v138|q -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v139|d DWORD "[r9|d]" v139|d -1 [720, 728[720 MustHaveRegister 722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v140|q QWORD "[rcx|q]" v140|q -1 [726, 738[726 MustHaveRegister 730 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r9|q]" v141|q v139|d [728, 736[[758, 760[728 MustHaveRegister 736 MustHaveRegister 760 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[rbx|q]" v142|q -1 [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v143|q QWORD "[r9|q]" v143|q -1 [738, 740[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[rsi|q]" v144|q v118|q [770, 772[770 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v145|q QWORD "[rsi|q]" v145|q v118|q [780, 784[[796, 802[[806, 812[780 MustHaveRegister 782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v146|q QWORD "[rdx|q]" v146|q -1 [810, 822[810 MustHaveRegister 814 MustHaveRegister 820 MustHaveRegister 822 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[rsi|q]" v147|q v145|q [812, 820[[902, 904[812 MustHaveRegister 820 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[rbx|q]" v148|q -1 [818, 820[818 MustHaveRegister 820 MustHaveRegister  "NoSpillStore"
  v149|q QWORD "[rsi|q]" v149|q -1 [822, 824[822 MustHaveRegister 824 MustHaveRegister  "NoSpillStore"
  v150|q QWORD "[rbx|q]" v150|q -1 [912, 922[912 MustHaveRegister 914 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v151|q QWORD "[rax|q]" v151|q -1 [914, 924[914 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v152|q QWORD "[r8|q]" v152|q v137|d [916, 925[916 MustHaveRegister  "OneSpillStore"
  v153|q QWORD "[rsi|q]" v153|q -1 [930, 932[930 MustHaveRegister 932 MustHaveRegister  "NoSpillStore"
  v154|q QWORD "[rsi|q]" v154|q v153|q [932, 934[932 MustHaveRegister 934 ShouldHaveRegister  "NoSpillStore"
  v155|q QWORD "[rsi|q]" v155|q v154|q [934, 938[934 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v156|q QWORD "[rax|q]" v156|q -1 [936, 944[936 MustHaveRegister 940 ShouldHaveRegister 944 ShouldHaveRegister  "NoSpillStore"
  v157|q QWORD "[rsi|q]" v157|q v155|q [938, 940[938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v158|q QWORD "[rsi|q]" v158|q v157|q [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v159|q QWORD "[rax|q]" v159|q v156|q [944, 946[944 MustHaveRegister 946 MustHaveRegister  "NoSpillStore"
  v160|d DWORD "[r10|d]" v160|d -1 [1052, 1054[1054 MustHaveRegister  "NoSpillStore"
  v161|q QWORD "[r11|q]" v161|q -1 [1052, 1056[1056 MustHaveRegister  "NoSpillStore"
  v162|q QWORD "[rdi|q]" v0|q v0|q [251, 265[252 ShouldHaveRegister  "StoreAtDefinition"
  v163|d DWORD "[r10|d]" v1|d v1|d [17, 128[[212, 265[68 ShouldHaveRegister 128 MustHaveRegister 216 MustHaveRegister 236 MustHaveRegister 245 LiveAtLoopEnd 254 ShouldHaveRegister  "OneSpillStore"
  v164|q QWORD "[vstack:5|q]" v2|q v2|q [450, 453[ "StoreAtDefinition"
  v165|q QWORD "[r11|q]" v3|q v3|q [257, 265[258 ShouldHaveRegister  "StoreAtDefinition"
  v166|d DWORD "[vstack:15|d]" v4|d v4|d [246, 259[ "StoreAtDefinition"
  v167|d DWORD "[vstack:12|d]" v5|d v5|d [246, 255[ "StoreAtDefinition"
  v168|d DWORD "[vstack:18|d]" v1|d v1|d [265, 276[[304, 312[[316, 344[[348, 362[[438, 446[[450, 538[[546, 572[[576, 619[[628, 640[[872, 898[[952, 974[[986, 992[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[610 ShouldHaveRegister 974 ShouldHaveRegister 992 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[vstack:10|q]" v8|q v8|q [246, 253[ "OneSpillStore"
  v170|d DWORD "[vstack:0|d]" v11|d v11|d [246, 265[ "StoreAtDefinition"
  v171|d DWORD "[vstack:17|d]" v12|d v12|d [246, 263[ "StoreAtDefinition"
  v172|q QWORD "[vstack:16|q]" v19|q v19|q [246, 261[ "StoreAtDefinition"
  v173|d DWORD "[vstack:22|d]" v22|d v22|d [606, 617[ "OneSpillStore"
  v174|d DWORD "[vstack:0|d]" v11|d v11|d [226, 246[ "StoreAtDefinition"
  v175|d DWORD "[vstack:0|d]" v11|d v11|d [60, 226[ "StoreAtDefinition"
  v176|d DWORD "[vstack:2|d]" v24|d v24|d [606, 617[ "StoreAtDefinition"
  v177|d DWORD "[r13|d]" v20|d v20|d [1052, 1059[ "OneSpillStore"
  v178|d DWORD "[vstack:1|d]" v20|d v20|d [72, 100[[212, 218[[348, 359[[438, 446[[546, 549[[576, 584[[952, 963[[1020, 1024[[1048, 1052[ "OneSpillStore"
  v179|d DWORD "[r11|d]" v24|d v24|d [276, 304[[344, 388[[576, 606[278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister  "StoreAtDefinition"
  v180|d DWORD "[vstack:2|d]" v24|d v24|d [77, 212[ "StoreAtDefinition"
  v181|q QWORD "[vstack:6|q]" v27|q v27|q [265, 450[[462, 668[ "StoreAtDefinition"
  v182|q QWORD "[vstack:8|q]" v29|q v29|q [246, 265[ "StoreAtDefinition"
  v183|d DWORD "[vstack:9|d]" v30|d v30|d [246, 251[ "StoreAtDefinition"
  v184|q QWORD "[rdi|q]" v0|q v0|q [246, 251[ "StoreAtDefinition"
  v185|q QWORD "[vstack:3|q]" v0|q v0|q [83, 246[ "StoreAtDefinition"
  v186|q QWORD "[r11|q]" v3|q v3|q [246, 257[ "StoreAtDefinition"
  v187|q QWORD "[vstack:4|q]" v3|q v3|q [92, 100[[212, 246[ "StoreAtDefinition"
  v188|q QWORD "[vstack:20|q]" v78|q v78|q [546, 565[ "OneSpillStore"
  v189|q QWORD "[vstack:14|q]" v88|q v88|q [246, 257[ "OneSpillStore"
  v190|d DWORD "[vstack:19|d]" v89|d v89|d [246, 265[ "OneSpillStore"
  v191|q QWORD "[vstack:5|q]" v2|q v2|q [226, 256[[304, 312[[348, 362[[438, 446[256 ShouldHaveRegister 310 ShouldHaveRegister 444 ShouldHaveRegister  "StoreAtDefinition"
  v192|q QWORD "[vstack:7|q]" v91|q v91|q [246, 265[ "OneSpillStore"
  v193|q QWORD "[r13|q]" v27|q v27|q [246, 249[248 MustHaveRegister  "StoreAtDefinition"
  v194|q QWORD "[vstack:6|q]" v27|q v27|q [226, 246[ "StoreAtDefinition"
  v195|q QWORD "[vstack:16|q]" v19|q v19|q [261, 276[ "StoreAtDefinition"
  v196|q QWORD "[vstack:7|q]" v91|q v91|q [265, 276[[304, 315[[316, 344[[462, 538[[628, 643[[872, 901[[986, 997[314 ShouldHaveRegister 642 ShouldHaveRegister 900 ShouldHaveRegister 996 ShouldHaveRegister  "OneSpillStore"
  v197|q QWORD "[vstack:14|q]" v88|q v88|q [257, 276[[304, 312[ "OneSpillStore"
  v198|q QWORD "[vstack:8|q]" v29|q v29|q [265, 386[ "StoreAtDefinition"
  v199|d DWORD "[vstack:19|d]" v89|d v89|d [265, 276[[304, 312[[316, 344[[462, 538[[628, 638[[872, 898[638 ShouldHaveRegister  "OneSpillStore"
  v200|d DWORD "[vstack:0|d]" v11|d v11|d [265, 676[ "StoreAtDefinition"
  v201|q QWORD "[vstack:10|q]" v8|q v8|q [253, 689[[702, 939[[952, 1004[688 ShouldHaveRegister 938 ShouldHaveRegister  "OneSpillStore"
  v202|d DWORD "[vstack:17|d]" v12|d v12|d [263, 676[ "StoreAtDefinition"
  v203|d DWORD "[vstack:15|d]" v4|d v4|d [259, 276[[304, 344[[348, 359[[438, 538[[546, 584[[628, 648[ "StoreAtDefinition"
  v204|d DWORD "[vstack:9|d]" v30|d v30|d [251, 276[[304, 344[[348, 362[[438, 450[[462, 538[[546, 576[[628, 648[[702, 744[[754, 766[ "StoreAtDefinition"
  v205|d DWORD "[vstack:12|d]" v5|d v5|d [255, 672[[702, 708[[744, 754[ "StoreAtDefinition"
  v206|q QWORD "[vstack:6|q]" v27|q v27|q [249, 265[ "StoreAtDefinition"
  v207|q QWORD "[vstack:3|q]" v0|q v0|q [265, 652[452 ShouldHaveRegister 620 ShouldHaveRegister  "StoreAtDefinition"
  v208|d DWORD "[rsi|d]" v30|d v30|d [766, 768[768 MustHaveRegister  "StoreAtDefinition"
  v209|d DWORD "[rdi|d]" v5|d v5|d [828, 837[830 MustHaveRegister  "StoreAtDefinition"
  v210|q QWORD "[vstack:4|q]" v3|q v3|q [265, 276[[304, 344[[348, 359[[438, 538[[546, 619[[628, 648[[702, 744[[754, 774[614 ShouldHaveRegister 770 ShouldHaveRegister  "StoreAtDefinition"
  v211|q QWORD "[r8|q]" v88|q v88|q [316, 344[[462, 490[[872, 875[318 MustHaveRegister 478 MustHaveRegister 480 ShouldHaveRegister 490 MustHaveRegister  "OneSpillStore"
  v212|d DWORD "[r9|d]" v4|d v4|d [702, 708[706 MustHaveRegister  "StoreAtDefinition"
  v213|q QWORD "[rbx|q]" v19|q v19|q [276, 312[[316, 388[[438, 446[[462, 538[278 MustHaveRegister 374 MustHaveRegister 376 MustHaveRegister 388 MustHaveRegister  "StoreAtDefinition"
  v214|d DWORD "[rbp|d]" v12|d v12|d [676, 696[[702, 744[696 MustHaveRegister  "StoreAtDefinition"
  v215|q QWORD "[r13|q]" v91|q v91|q [1060, 1067[ "OneSpillStore"
  v216|q QWORD "[r10|q]" v29|q v29|q [386, 394[[406, 412[[416, 422[[438, 450[[462, 538[392 MustHaveRegister 410 MustHaveRegister 418 MustHaveRegister 422 ShouldHaveRegister 492 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 522 ShouldHaveRegister  "StoreAtDefinition"
  v217|q QWORD "[rsi|q]" v0|q v0|q [652, 672[[702, 745[654 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister 662 MustHaveRegister  "StoreAtDefinition"
  v218|d DWORD "[rdx|d]" v1|d v1|d [1068, 1075[ "OneSpillStore"
  v219|q QWORD "[r10|q]" v3|q v3|q [774, 776[776 MustHaveRegister  "StoreAtDefinition"
  v220|d DWORD "[r14|d]" v89|d v89|d [1060, 1067[ "OneSpillStore"
  v221|q QWORD "[r13|q]" v27|q v27|q [668, 671[670 MustHaveRegister  "StoreAtDefinition"
  v222|d DWORD "[r11|d]" v11|d v11|d [676, 692[[702, 744[686 MustHaveRegister 692 MustHaveRegister  "StoreAtDefinition"
  v223|q QWORD "[vstack:16|q]" v19|q v19|q [546, 561[ "StoreAtDefinition"
  v224|q QWORD "[vstack:8|q]" v29|q v29|q [546, 565[ "StoreAtDefinition"
  v225|q QWORD "[vstack:5|q]" v2|q v2|q [453, 462[ "StoreAtDefinition"
  v226|q QWORD "[rcx|q]" v2|q v2|q [546, 565[548 MustHaveRegister 558 ShouldHaveRegister  "StoreAtDefinition"
  v227|q QWORD "[vstack:5|q]" v2|q v2|q [565, 572[[576, 619[612 ShouldHaveRegister  "StoreAtDefinition"
  v228|q QWORD "[vstack:20|q]" v78|q v78|q [565, 575[[966, 968[574 ShouldHaveRegister 968 ShouldHaveRegister  "OneSpillStore"
  v229|q QWORD "[vstack:8|q]" v29|q v29|q [565, 648[[702, 744[[754, 778[ "StoreAtDefinition"
  v230|q QWORD "[vstack:16|q]" v19|q v19|q [561, 565[ "StoreAtDefinition"
  v231|q QWORD "[vstack:16|q]" v19|q v19|q [565, 572[[576, 640[[872, 898[[952, 972[[986, 990[[1012, 1019[[1020, 1028[[1036, 1047[[1048, 1059[972 ShouldHaveRegister 990 ShouldHaveRegister  "StoreAtDefinition"
  v232|q QWORD "[r8|q]" v78|q v78|q [1012, 1019[ "OneSpillStore"
  v233|q QWORD "[rcx|q]" v2|q v2|q [872, 891[874 MustHaveRegister 884 ShouldHaveRegister  "StoreAtDefinition"
  v234|q QWORD "[r11|q]" v29|q v29|q [778, 784[[796, 802[[806, 812[782 MustHaveRegister 800 MustHaveRegister 808 MustHaveRegister 812 ShouldHaveRegister  "StoreAtDefinition"
  v235|q QWORD "[rbx|q]" v19|q v19|q [1060, 1067[ "StoreAtDefinition"
  v236|q QWORD "[r10|q]" v45|q v45|q [607, 617[608 ShouldHaveRegister  "OneSpillStore"
  v237|d DWORD "[vstack:2|d]" v24|d v24|d [617, 628[[952, 966[[1024, 1028[[1036, 1040[ "StoreAtDefinition"
  v238|d DWORD "[vstack:22|d]" v22|d v22|d [617, 628[[952, 966[ "OneSpillStore"
  v239|q QWORD "[vstack:21|q]" v45|q v45|q [617, 627[622 ShouldHaveRegister 626 ShouldHaveRegister  "OneSpillStore"
  v240|d DWORD "[r11|d]" v24|d v24|d [1040, 1047[ "StoreAtDefinition"
  v241|q QWORD "[r10|q]" v0|q v0|q [745, 747[746 ShouldHaveRegister  "StoreAtDefinition"
  v242|q QWORD "[vstack:6|q]" v27|q v27|q [702, 744[ "StoreAtDefinition"
  v243|d DWORD "[vstack:0|d]" v11|d v11|d [744, 747[ "StoreAtDefinition"
  v244|d DWORD "[vstack:17|d]" v12|d v12|d [744, 747[ "StoreAtDefinition"
  v245|d DWORD "[vstack:15|d]" v4|d v4|d [872, 891[ "StoreAtDefinition"
  v246|q QWORD "[vstack:6|q]" v27|q v27|q [744, 747[ "StoreAtDefinition"
  v247|q QWORD "[vstack:6|q]" v27|q v27|q [747, 828[[872, 910[ "StoreAtDefinition"
  v248|d DWORD "[vstack:0|d]" v11|d v11|d [747, 910[ "StoreAtDefinition"
  v249|d DWORD "[vstack:17|d]" v12|d v12|d [747, 910[ "StoreAtDefinition"
  v250|q QWORD "[vstack:3|q]" v0|q v0|q [747, 832[ "StoreAtDefinition"
  v251|q QWORD "[r10|q]" v93|q v93|q [872, 886[886 ShouldHaveRegister  "NoSpillStore"
  v252|q QWORD "[rsi|q]" v0|q v0|q [832, 849[834 MustHaveRegister 838 MustHaveRegister  "StoreAtDefinition"
  v253|q QWORD "[r10|q]" v27|q v27|q [910, 912[[952, 966[912 MustHaveRegister  "StoreAtDefinition"
  v254|d DWORD "[vstack:0|d]" v11|d v11|d [910, 925[ "StoreAtDefinition"
  v255|d DWORD "[vstack:17|d]" v12|d v12|d [910, 925[ "StoreAtDefinition"
  v256|d DWORD "[vstack:9|d]" v30|d v30|d [872, 883[ "StoreAtDefinition"
  v257|q QWORD "[vstack:4|q]" v3|q v3|q [872, 891[ "StoreAtDefinition"
  v258|q QWORD "[vstack:8|q]" v29|q v29|q [872, 891[ "StoreAtDefinition"
  v259|d DWORD "[vstack:12|d]" v5|d v5|d [872, 891[ "StoreAtDefinition"
  v260|q QWORD "[r10|q]" v0|q v0|q [849, 857[850 ShouldHaveRegister  "StoreAtDefinition"
  v261|q QWORD "[r11|q]" v128|q v128|q [851, 857[852 ShouldHaveRegister  "OneSpillStore"
  v262|q QWORD "[vstack:3|q]" v0|q v0|q [857, 864[[872, 918[[952, 1011[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[918 ShouldHaveRegister 970 ShouldHaveRegister 988 ShouldHaveRegister  "StoreAtDefinition"
  v263|q QWORD "[vstack:23|q]" v128|q v128|q [857, 864[ "OneSpillStore"
  v264|q QWORD "[rsi|q]" v0|q v0|q [1068, 1075[ "StoreAtDefinition"
  v265|q QWORD "[rdx|q]" v128|q v128|q [1004, 1011[ "OneSpillStore"
  v266|q QWORD "[vstack:5|q]" v2|q v2|q [891, 898[[952, 976[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[976 ShouldHaveRegister  "StoreAtDefinition"
  v267|q QWORD "[vstack:4|q]" v3|q v3|q [891, 902[[952, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[978 ShouldHaveRegister  "StoreAtDefinition"
  v268|d DWORD "[vstack:12|d]" v5|d v5|d [891, 902[[952, 1001[[1012, 1019[[1020, 1035[[1036, 1047[[1048, 1059[[1060, 1067[ "StoreAtDefinition"
  v269|q QWORD "[vstack:8|q]" v29|q v29|q [891, 902[[952, 998[ "StoreAtDefinition"
  v270|d DWORD "[vstack:9|d]" v30|d v30|d [883, 891[ "StoreAtDefinition"
  v271|d DWORD "[vstack:15|d]" v4|d v4|d [891, 902[[952, 963[[966, 1001[[1012, 1019[[1020, 1024[[1048, 1059[[1060, 1067[ "StoreAtDefinition"
  v272|d DWORD "[vstack:9|d]" v30|d v30|d [891, 902[[966, 998[ "StoreAtDefinition"
  v273|q QWORD "[rcx|q]" v2|q v2|q [1068, 1075[ "StoreAtDefinition"
  v274|q QWORD "[r8|q]" v3|q v3|q [1068, 1075[ "StoreAtDefinition"
  v275|d DWORD "[r9|d]" v4|d v4|d [1068, 1075[ "StoreAtDefinition"
  v276|d DWORD "[rdi|d]" v5|d v5|d [1068, 1075[ "StoreAtDefinition"
  v277|q QWORD "[vstack:6|q]" v27|q v27|q [966, 979[ "StoreAtDefinition"
  v278|d DWORD "[vstack:0|d]" v11|d v11|d [925, 935[ "StoreAtDefinition"
  v279|d DWORD "[vstack:17|d]" v12|d v12|d [925, 945[ "StoreAtDefinition"
  v280|q QWORD "[vstack:24|q]" v152|q v152|q [925, 948[948 ShouldHaveRegister  "OneSpillStore"
  v281|d DWORD "[r11|d]" v11|d v11|d [935, 942[[952, 966[936 MustHaveRegister 942 MustHaveRegister  "StoreAtDefinition"
  v282|d DWORD "[rbp|d]" v12|d v12|d [945, 946[[952, 966[946 MustHaveRegister  "StoreAtDefinition"
  v283|d DWORD "[vstack:0|d]" v11|d v11|d [966, 979[ "StoreAtDefinition"
  v284|d DWORD "[vstack:17|d]" v12|d v12|d [966, 979[ "StoreAtDefinition"
  v285|d DWORD "[vstack:17|d]" v12|d v12|d [979, 1004[ "StoreAtDefinition"
  v286|d DWORD "[vstack:0|d]" v11|d v11|d [979, 1004[ "StoreAtDefinition"
  v287|q QWORD "[vstack:6|q]" v27|q v27|q [979, 1004[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD[_] = MOVE v11|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v19|QWORD[.], v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   62  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVE v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   82  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [v46|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVE v27|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = MOVE v27|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [v88|QWORD[.], v89|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = MOVE v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v189|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD[_] = MOVE v30|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = MOVE v194|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v187|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE v185|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = MOVE v193|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[_] = STACKMOVE (input: v183|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v184|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = STACKMOVE (input: v169|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = STACKMOVE (input: v167|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = STACKMOVE (input: v189|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = STACKMOVE (input: v166|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v195|QWORD[.] = STACKMOVE (input: v172|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = STACKMOVE (input: v171|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD[_] = STACKMOVE (input: v170|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = STACKMOVE (input: v206|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = STACKMOVE (input: v190|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = STACKMOVE (input: v182|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = STACKMOVE (input: v192|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  268  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v195|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVE v27|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = MOVE v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[_] = MOVE v30|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v195|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[_] = MOVE v30|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVE v27|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  356  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVE v179|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE v201|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE v191|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v168|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[_] = MOVE v30|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVE v27|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v200|DWORD[_] = MOVE v11|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v225|QWORD[.] = STACKMOVE (input: v164|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  456  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE v201|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE v203|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE v225|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v168|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v223|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v226|QWORD[.] = MOVE v191|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v230|QWORD[.] = MOVE v223|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = STACKMOVE (input: v230|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = STACKMOVE (input: v224|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[.] = MOVE v226|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = STACKMOVE (input: v188|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  568  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v228|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVE v27|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = MOVE v179|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = STACKMOVE (input: v176|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = MOVE v236|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v239|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE v229|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE v238|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v231|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE v201|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVE v216|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [v118|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v200|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v200|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = MOVE v203|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[_] = MOVE v214|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v248|DWORD[_] = MOVE v222|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[_] = MOVE v214|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v248|DWORD[_] = MOVE v222|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[_] = STACKMOVE (input: v244|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v248|DWORD[_] = STACKMOVE (input: v243|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v247|QWORD = STACKMOVE (input: v246|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v241|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  750  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v250|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[_] = MOVE v214|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v248|DWORD[_] = MOVE v222|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[_] = MOVE v214|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v248|DWORD[_] = MOVE v222|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v234|QWORD = MOVE v229|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v252|QWORD[.] = MOVE v250|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v260|QWORD[.] = MOVE v252|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v261|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v263|QWORD[.] = MOVE v261|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = MOVE v260|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  860  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v249|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v248|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v249|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v248|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v233|QWORD[.] = MOVE v191|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v270|DWORD[_] = MOVE v256|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = STACKMOVE (input: v259|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = STACKMOVE (input: v258|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = STACKMOVE (input: v245|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v272|DWORD[_] = STACKMOVE (input: v270|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v267|QWORD[.] = STACKMOVE (input: v257|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = MOVE v233|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  894  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v280|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[_] = STACKMOVE (input: v255|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v278|DWORD[_] = STACKMOVE (input: v254|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[_] = MOVE v278|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v282|DWORD[_] = MOVE v279|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = MOVE v179|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = MOVE v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v282|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[_] = MOVE v200|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  956  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  960  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVE v253|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[_] = MOVE v282|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v200|DWORD[_] = MOVE v281|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v272|DWORD[_] = MOVE v30|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v277|QWORD = MOVE v27|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v284|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v285|DWORD[_] = STACKMOVE (input: v284|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v286|DWORD[_] = STACKMOVE (input: v283|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = STACKMOVE (input: v277|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  982  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v285|DWORD[_] = MOVE v214|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v286|DWORD[_] = MOVE v222|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = MOVE v212|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v287|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v265|QWORD[.] = MOVE v263|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v232|QWORD[.] = MOVE v228|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE v178|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v267|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = MOVE v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = MOVE v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v267|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [v160|DWORD, v161|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE v199|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v235|QWORD[.] = MOVE v231|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   16  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|QWORD = SHL v6|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = OR (x: v7|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction v14|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v17|DWORD = MOV [v14|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   62  <|@ instruction v21|DWORD = MOV [v19|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction v22|DWORD = MOV [v19|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction v23|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction v24|DWORD = AND (x: v1|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v24|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction v25|DWORD[_] = MOV [v19|QWORD[.] + v24|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction v26|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   78  <|@ instruction v28|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v26|DWORD, ~baseRegister: v28|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD = MOVE r13|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   82  <|@ instruction v29|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD = MOVE r11|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   84  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   94  <|@ instruction v31|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction v32|QWORD = LEA [v31|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v32|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: v32|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [v31|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [v31|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [v31|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [v31|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [v31|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction v36|QWORD[.] = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [v37|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction v38|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [v37|QWORD[.] + 16], y: v38|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [v37|QWORD[.] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction v49|QWORD = MOV [v47|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction v50|DWORD = MOV [v49|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction v51|DWORD = MOV [v46|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction v53|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction v52|QWORD = UNCOMPRESSPOINTER (input: v51|DWORD, ~baseRegister: v53|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction v54|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v49|QWORD, y: [v52|QWORD + v54|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH v50|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v52|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v55|QWORD = MOV [v52|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction v56|DWORD = MOV [v55|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v58|DWORD = SHL v57|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction v59|DWORD = LEA [v58|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction v61|QWORD = MOV [v55|QWORD + v60|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v49|QWORD, y: v61|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v62|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [v52|QWORD + 32], y: v49|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  214  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [v25|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v90|DWORD[_] = MOV [v88|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v90|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: v90|DWORD[_], y: v90|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v90|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction SAFEPOINT v100|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction v101|DWORD = INC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = MOVE v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v189|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = MOVE v194|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v187|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[.] = MOVE v185|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction v102|QWORD = MOV [v27|QWORD + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  250  <|@ instruction v103|QWORD = MOV [v102|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v184|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = STACKMOVE (input: v169|QWORD, ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = STACKMOVE (input: v189|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = STACKMOVE (input: v190|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = STACKMOVE (input: v192|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: v88|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  268  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v195|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  278  <|@ instruction v63|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = MOVE v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction v92|DWORD[_] = MOV [v90|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v93|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v195|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction v105|QWORD[.+] = LEA [v88|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  356  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v34|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE v201|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE v191|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v168|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [v19|QWORD[.] + v24|DWORD * 4 + 16], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction v70|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction v71|QWORD[*] = XOR (x: v70|QWORD[.+], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH v71|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v46|QWORD[.], y: v46|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction v73|QWORD[.+] = LEA [v19|QWORD[.] + v24|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction v72|QWORD[*] = SHR v73|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [v72|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [v72|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction v74|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction v75|QWORD[*] = ADD (x: v72|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: v74|QWORD, y: v74|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v76|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [v76|QWORD + v74|QWORD * 1 - 8], y: v75|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction v77|QWORD = LEA [v74|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v29|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction v79|DWORD[_] = MOV [v25|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: v80|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  456  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE v201|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE v203|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE v225|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = MOVE v168|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|QWORD = MOVE v198|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v111|DWORD[_] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [v88|QWORD[.] + 24], y: v111|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v112|QWORD[*] = XOR (x: v88|QWORD[.], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH v112|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: v104|QWORD[.], y: v104|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v113|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [v113|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [v113|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction v114|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction v115|QWORD[*] = ADD (x: v113|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v114|QWORD, y: v114|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction v116|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [v116|QWORD + v114|QWORD * 1 - 8], y: v115|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v117|QWORD = LEA [v114|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v226|QWORD[.] = MOVE v191|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction v81|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction v83|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction v82|QWORD = UNCOMPRESSPOINTER (input: v81|DWORD, ~baseRegister: v83|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction v84|QWORD = MOV [v82|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction v85|QWORD = MOV [v84|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = STACKMOVE (input: v188|QWORD[.], ~backupSlot: vstack:13|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  568  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v86|DWORD, y: v86|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v228|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction v39|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction v40|QWORD = LEA [v39|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [v39|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [v39|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction v44|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v239|QWORD[.] = MOVE v236|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: v45|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - v45|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: v19|QWORD[.] v24|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v239|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE v229|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE v238|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v231|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE v201|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH v89|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: v118|QWORD[.], y: v118|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction v119|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction v120|DWORD = ADD (x: v119|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v120|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: v120|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v27|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v200|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction v130|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction v131|QWORD = SHL v130|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction v132|QWORD = OR (x: v131|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction v133|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction v134|QWORD = SUB (x: v132|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction v135|QWORD = ADD (x: v134|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v135|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction v136|QWORD = INC v133|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v136|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v200|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = MOVE v203|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v207|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction v137|DWORD[_] = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction v138|QWORD[.+] = LEA [v118|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction v139|DWORD[_] = MOV [v138|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: v139|DWORD[_], y: v139|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction v140|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction v141|QWORD[.] = UNCOMPRESSPOINTER (input: v139|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: v140|QWORD, y: v140|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction v142|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [v142|QWORD + v140|QWORD * 1 - 8], y: v141|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction v143|QWORD = LEA [v140|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[.] = MOVE v217|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  750  <|@ instruction v121|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v250|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[_] = MOVE v204|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [v118|QWORD[.] + 20], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction v144|QWORD[*] = XOR (x: v118|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH v144|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v234|QWORD = MOVE v229|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction v145|QWORD[*] = SHR v118|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [v145|QWORD[*] + v29|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [v145|QWORD[*] + v29|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction v146|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction v147|QWORD[*] = ADD (x: v145|QWORD[*], y: v29|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: v146|QWORD, y: v146|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction v148|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [v148|QWORD + v146|QWORD * 1 - 8], y: v147|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction v149|QWORD = LEA [v146|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = MOVE v205|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v252|QWORD[.] = MOVE v250|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction v122|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [v122|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction v123|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction v125|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction v124|QWORD = UNCOMPRESSPOINTER (input: v123|DWORD, ~baseRegister: v125|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction v126|QWORD = MOV [v124|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction v127|QWORD = MOV [v126|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction v128|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v260|QWORD[.] = MOVE v252|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v261|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVE v126|QWORD moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rax|QWORD = MOVE v127|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v263|QWORD[.] = MOVE v261|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  860  <|@ instruction v129|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: v129|DWORD, y: v129|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v249|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v248|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[_] = MOVE v249|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[_] = MOVE v248|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v233|QWORD[.] = MOVE v191|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v88|QWORD[.] - - - - v89|DWORD 
>@ <|@ instruction v94|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction v96|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction v95|QWORD = UNCOMPRESSPOINTER (input: v94|DWORD, ~baseRegister: v96|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction v97|QWORD = MOV [v95|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction v98|QWORD = MOV [v97|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rbx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rax|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  894  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: v99|DWORD, y: v99|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE v147|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v247|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction v150|QWORD = MOV [v27|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction v151|QWORD = MOV [v150|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction v152|QWORD[.] = UNCOMPRESSPOINTER (input: v137|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rbx|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rax|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v280|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - v152|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction v153|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction v154|QWORD = SHL v153|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction v155|QWORD = OR (x: v154|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[_] = MOVE v278|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction v156|QWORD = MOV [v11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction v157|QWORD = SUB (x: v155|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction v158|QWORD = ADD (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 15904], y: v158|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction v159|QWORD = INC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v282|DWORD[_] = MOVE v279|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 15904], y: v159|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE v152|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v181|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = MOVE v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v282|DWORD[_] = MOVE v202|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[_] = MOVE v200|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  956  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  960  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction NULLCHECK [v42|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  982  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v91|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v118|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v137|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVE v287|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v265|QWORD[.] = MOVE v263|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: v129|DWORD 
locals: v0|QWORD[.] - v128|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v232|QWORD[.] = MOVE v228|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] v78|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE v178|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOVE v180|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: v19|QWORD[.] v24|DWORD v46|QWORD[.] 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v160|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v161|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - v20|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE v199|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v235|QWORD[.] = MOVE v231|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v19|QWORD[.] - - - v91|QWORD[.] - v89|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE v163|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   32  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   34  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD = MOVE r13|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD = MOVE r11|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] r10|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] r10|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:19|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  250  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: vstack:14|QWORD[.] 
locals: vstack:3|QWORD[.] vstack:18|DWORD - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - - - vstack:7|QWORD[.] - vstack:19|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:19|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: vstack:5|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: vstack:5|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD rcx|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] vstack:20|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:22|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: vstack:21|QWORD[.] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:16|QWORD[.] vstack:2|DWORD 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - vstack:21|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:16|QWORD[.] vstack:2|DWORD 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE vstack:22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH vstack:19|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:10|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: vstack:4|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:23|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: vstack:3|QWORD[.] - vstack:23|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] vstack:18|DWORD rcx|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] r8|QWORD[.] - - - - vstack:19|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - - - vstack:7|QWORD[.] - vstack:19|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:24|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - vstack:24|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:10|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE vstack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:22|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - vstack:7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: vstack:3|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: vstack:16|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE vstack:19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   32  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   34  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   80  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD = MOVE r13|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD = MOVE r11|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  144  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  146  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  164  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  176  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  180  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] r10|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  230  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] r10|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  242  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:19|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  250  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  262  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: vstack:14|QWORD[.] 
locals: vstack:3|QWORD[.] vstack:18|DWORD - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - - - vstack:7|QWORD[.] - vstack:19|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  280  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:19|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  308  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: vstack:5|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  380  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: vstack:5|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  492  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD rcx|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  556  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] vstack:20|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  590  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  594  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:22|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r8|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: vstack:21|QWORD[.] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:16|QWORD[.] vstack:2|DWORD 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  620  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - vstack:21|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:16|QWORD[.] vstack:2|DWORD 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE vstack:22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction CMPCONSTBRANCH vstack:19|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  646  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:10|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  700  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  706  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  720  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr  722  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  728  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  734  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  738  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  770  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: vstack:4|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  840  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  842  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  844  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr  846  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:23|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  858  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: vstack:3|QWORD[.] - vstack:23|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr  862  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] vstack:18|DWORD rcx|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] r8|QWORD[.] - - - - vstack:19|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  876  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  878  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  880  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  882  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  884  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - - - vstack:7|QWORD[.] - vstack:19|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  896  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr  914  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  916  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:24|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - vstack:24|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  936  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:10|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  946  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr  948  <|@ instruction rax|QWORD[.] = MOVE vstack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:22|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  958  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  962  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rdx|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction r8|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r9|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - vstack:7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1006  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: vstack:3|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: vstack:16|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1054  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1058  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE vstack:19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:3|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction vstack:5|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction vstack:4|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction vstack:15|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction vstack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction vstack:0|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction vstack:17|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction vstack:16|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction vstack:2|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction vstack:1|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction vstack:6|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction vstack:8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction vstack:9|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] r10|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] r10|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction vstack:7|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction vstack:19|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction vstack:14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: vstack:14|QWORD[.] 
locals: vstack:3|QWORD[.] vstack:18|DWORD - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - - - vstack:7|QWORD[.] - vstack:19|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction vstack:7|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction vstack:19|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction vstack:14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: vstack:5|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: vstack:5|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction vstack:20|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD rcx|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] vstack:20|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction vstack:22|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction vstack:21|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: vstack:21|QWORD[.] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:16|QWORD[.] vstack:2|DWORD 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - vstack:21|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: vstack:16|QWORD[.] vstack:2|DWORD 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE vstack:22|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE vstack:10|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH vstack:19|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:10|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1186  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1172  <|@ instruction rsi|DWORD[_] = MOVE vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: vstack:4|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1212  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE vstack:12|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction vstack:23|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: vstack:3|QWORD[.] - vstack:23|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: vstack:3|QWORD[.] vstack:18|DWORD rcx|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] r8|QWORD[.] - - - - vstack:19|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - - - vstack:7|QWORD[.] - vstack:19|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1258  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction vstack:24|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - vstack:24|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:10|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE vstack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction vstack:22|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE vstack:17|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - vstack:1|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction vstack:20|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction vstack:10|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - vstack:7|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: vstack:3|QWORD[.] - - vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE vstack:6|QWORD moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE vstack:23|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: vstack:3|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: vstack:16|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: vstack:3|QWORD[.] - - - - vstack:12|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction vstack:18|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD vstack:16|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE vstack:19|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: vstack:3|QWORD[.] vstack:18|DWORD vstack:5|QWORD[.] vstack:4|QWORD[.] vstack:15|DWORD vstack:12|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [32, 1308[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [128, 608[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [122, 552[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [6, 1344[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [10, 1344[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [8, 1344[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [138, 1280[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [696, 962[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [142, 1218[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [146, 1186[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [54, 1312[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[vstack:12|d]" vstack:12|d -1 [14, 1344[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[vstack:14|q]" vstack:14|q -1 [700, 824[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[vstack:15|d]" vstack:15|d -1 [12, 1344[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[vstack:16|q]" vstack:16|q -1 [112, 1344[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[vstack:17|d]" vstack:17|d -1 [36, 1320[ "NOT_SUPPORTED"
  vstack:18|d DWORD "[vstack:18|d]" vstack:18|d -1 [56, 1344[ "NOT_SUPPORTED"
  vstack:19|d DWORD "[vstack:19|d]" vstack:19|d -1 [698, 944[ "NOT_SUPPORTED"
  vstack:20|q QWORD "[vstack:20|q]" vstack:20|q -1 [604, 658[ "NOT_SUPPORTED"
  vstack:21|q QWORD "[vstack:21|q]" vstack:21|q -1 [298, 308[ "NOT_SUPPORTED"
  vstack:22|d DWORD "[vstack:22|d]" vstack:22|d -1 [244, 314[ "NOT_SUPPORTED"
  vstack:23|q QWORD "[vstack:23|q]" vstack:23|q -1 [1062, 1104[ "NOT_SUPPORTED"
  vstack:24|q QWORD "[vstack:24|q]" vstack:24|q -1 [1296, 1324[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:108|d]" vstack:0|d -1 [32, 1308[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:52|d]" vstack:1|d -1 [128, 608[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:48|d]" vstack:2|d -1 [122, 552[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:88|q]" vstack:3|q -1 [6, 1344[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:104|q]" vstack:4|q -1 [10, 1344[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:96|q]" vstack:5|q -1 [8, 1344[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:64|q]" vstack:6|q -1 [138, 1280[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:136|q]" vstack:7|q -1 [696, 962[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:72|q]" vstack:8|q -1 [142, 1218[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:124|d]" vstack:9|d -1 [146, 1186[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:40|q]" vstack:10|q -1 [54, 1312[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[stack:32|d]" vstack:12|d -1 [14, 1344[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[stack:144|q]" vstack:14|q -1 [700, 824[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[stack:28|d]" vstack:15|d -1 [12, 1344[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[stack:120|q]" vstack:16|q -1 [112, 1344[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[stack:112|d]" vstack:17|d -1 [36, 1320[ "NOT_SUPPORTED"
  vstack:18|d DWORD "[stack:44|d]" vstack:18|d -1 [56, 1344[ "NOT_SUPPORTED"
  vstack:19|d DWORD "[stack:52|d]" vstack:19|d -1 [698, 944[ "NOT_SUPPORTED"
  vstack:20|q QWORD "[stack:136|q]" vstack:20|q -1 [604, 658[ "NOT_SUPPORTED"
  vstack:21|q QWORD "[stack:136|q]" vstack:21|q -1 [298, 308[ "NOT_SUPPORTED"
  vstack:22|d DWORD "[stack:76|d]" vstack:22|d -1 [244, 314[ "NOT_SUPPORTED"
  vstack:23|q QWORD "[stack:136|q]" vstack:23|q -1 [1062, 1104[ "NOT_SUPPORTED"
  vstack:24|q QWORD "[stack:136|q]" vstack:24|q -1 [1296, 1324[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1186  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1172  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1212  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1258  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1186  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1172  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1212  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1272  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1258  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B45" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B45 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B20 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" "B25" "B20" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B64 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B86" 
    xhandlers
    flags 
    probability 4589486160231196028
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B64 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575886488641649949
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" 
    xhandlers
    flags 
    probability 4603566250703674628
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B39 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" 
    xhandlers
    flags 
    probability 4590580504238910564
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B35 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" 
    xhandlers
    flags 
    probability 4589988895881336000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B37 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B88" 
    xhandlers
    flags 
    probability 4588786470889231569
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B41 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    probability 4590314868051572721
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B73 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4576734310559727802
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575673979691779674
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B73" "B75" "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B64" "B84" "B85" "B63" "B53" 
    successors "B87" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" 
    xhandlers
    flags 
    probability 4592414787223764159
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B35" "B87" "B43" "B44" "B41" "B39" "B37" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B92" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B92, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606535456829133029
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559726575447410890
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B104" "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" 
    xhandlers
    flags 
    probability 4587664226873586540
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B120" 
    xhandlers
    flags 
    probability 4572652746823916629
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4551496783361647373
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B109" "B117" "B118" "B115" "B113" "B111" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [rbx:0, r8:0, r13:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:36]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [rcx:0, r11:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [stack:20, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@reference-map: [r8:0, r13:0, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [rdx:0, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [r8:0, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [rbx:0, r13:0, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   20  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   24  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   36  <|@ instruction stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 15904] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 15904] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [rbp|DWORD[_] * 8 + 15904] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 15904] <|@ <|@
      nr   48  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607166733032814946
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B1" 
    successors "B6" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  116  <|@ instruction r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  136  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  138  <|@ instruction stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  142  <|@ instruction stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B12" "B47" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4605493639929933503
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 288] instr: 0 <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605567563368162363
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  218  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B15" 
    successors "B27" "B18" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  330  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  338  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  340  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B46" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B21" 
    xhandlers
    flags 
    probability 4601066724387587968
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605570324014958464
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604830813567990259
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" "B33" "B32" 
    successors "B88" "B36" 
    xhandlers
    flags 
    probability 4605570324014958463
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B88" "B38" 
    xhandlers
    flags 
    probability 4604830813567990258
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B88" "B40" 
    xhandlers
    flags 
    probability 4604165254165718874
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  496  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B34" "B86" "B43" "B44" "B40" "B38" "B36" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  982  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4606532391690773982
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B97" "B93" "B99" 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4606539119835033366
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction r14|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  380  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr  382  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599217948270167456
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602797159838827696
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596563124760217472
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" "B54" 
    xhandlers
    flags 
    probability 4595616399430771200
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4595456863682059731
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4595456798977600000
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590136997523924623
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576321430770479576
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [rbx:0, r8:0, r13:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134] <|@ <|@
      nr  754  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B62" 
    successors "B65" "B58" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595779787039439134
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] r10|DWORD stack:96|QWORD[.] stack:104|QWORD[.] r9|DWORD rdi|DWORD rbx|QWORD[.] r8|QWORD[.] - - - - r14|DWORD 
>@ <|@ instruction rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  686  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4592415377300212653
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD <|@ <|@
      nr  790  <|@ instruction r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rax|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 152]
stack: stack:144|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152] <|@ <|@
      nr  810  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4591640281636507881
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B83" "B74" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  874  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  878  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B83" "B76" 
    xhandlers
    flags 
    probability 4591640281636507882
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    probability 4590942695539173587
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B72" "B74" "B76" "B78" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4592415377300212654
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592415263128516124
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B50" "B55" "B59" "B84" "B85" "B63" "B53" 
    successors "B88" "B100" 
    xhandlers
    flags 
    probability 4595616399430771201
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  968  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B101" "B119" 
    xhandlers
    flags 
    probability 4589810812383037251
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1122  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B108" "B103" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" "B103" "B107" "B106" 
    successors "B120" "B110" 
    xhandlers
    flags 
    probability 4589810789550539488
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD <|@ <|@
      nr 1196  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B120" "B112" 
    xhandlers
    flags 
    probability 4589296152661802032
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B120" "B114" 
    xhandlers
    flags 
    probability 4588497938633341219
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1222  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B108" "B117" "B118" "B114" "B112" "B110" 
    successors 
    xhandlers
    flags 
    probability 4589810812383037250
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD <|@ <|@
      nr 1288  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1290  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:36]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 253]
locals: - - - - - - - - - - - - stack:136|QWORD[.] 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253] <|@ <|@
      nr 1300  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1304  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1308  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD <|@ <|@
      nr 1312  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr 1320  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD <|@ <|@
      nr 1324  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4590580504238910565
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4589988895881336001
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589456448359518894
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B86" "B60" 
    xhandlers
    flags 
    probability 4589491021400246356
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B88" "B42" 
    xhandlers
    flags 
    probability 4589456448359518893
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4574317266467849286
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4573550542036432652
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction r10|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B44 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4577354387090691619
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  832  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4576734310559727801
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  846  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4576176241681860365
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    probability 4576176241681860366
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4575884721827700450
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4575169182502756659
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" "B105" 
    xhandlers
    flags 
    probability 4574884212373482238
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1146  <|@ instruction r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD <|@ <|@
      nr 1148  <|@ instruction r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4574060793351502309
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4573319716231720373
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr 1182  <|@ instruction r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B120" "B116" 
    xhandlers
    flags 
    probability 4573319716231720372
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4571755166112449940
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    probability 4571324160251222102
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B50 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4565673935706602241
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 20]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 23]
stack: Object[null] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   64  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562603435146652494
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4562068325317450432
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4561175415112862536
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  916  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560371795928733428
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4560028842993180587
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:669) [bci: 288]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288] <|@ <|@
      nr  996  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B88" 
    xhandlers
    flags 
    probability 4559273018722904528
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4559067840229826947
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4558474978534001397
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1244  <|@ instruction MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr 1246  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1250  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4557941403007758403
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1264  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4556137459728092295
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4551770936839796224
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: rsi|QWORD[.] - - - - rdi|DWORD - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|DWORD[_] * 8] state [bci:292] <|@ <|@
      nr 1042  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1044  <|@ instruction rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr 1046  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15]
locals: stack:88|QWORD[.] - stack:136|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [rcx:0, r11:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29] <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  614  <|@ instruction rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 91]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] stack:136|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91] <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B86" 
    xhandlers
    flags 
    probability 4555531717423846361
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B53 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4554232890236231407
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rsi|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rsi|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4554289428282615553
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  298  <|@ instruction stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6]
locals: - - - - - 
java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9]
stack: stack:136|QWORD[.] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] Object[null] - 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32, stack:36, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17]
locals: - - - - - stack:136|QWORD[.] 
java.util.HashMap.putVal(HashMap.java:637) [bci: 56]
stack: stack:120|QWORD[.] stack:48|DWORD 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56] <|@ <|@
      nr  308  <|@ instruction rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4546057377862492831
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:647) [bci: 134]
locals: stack:88|QWORD[.] stack:44|DWORD rcx|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - stack:52|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134] <|@ <|@
      nr  720  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  724  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 203]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - - - stack:136|QWORD[.] - stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203] <|@ <|@
      nr  734  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 4544606261496996295
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B120" 
    xhandlers
    flags 
    probability 4543662033181977376
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4524347296189778173
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29] <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - stack:52|DWORD - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:29] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B86" 
    xhandlers
    flags 
    probability 4521087769571093605
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [stack:20, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 123]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123] <|@ <|@
      nr  672  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B55 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4520089182929041672
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:650) [bci: 169]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - stack:136|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169] <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B120" 
    xhandlers
    flags 
    probability 4509585029664025678
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ st <@st|@reference-map: [r8:0, r13:0, stack:32, stack:36, stack:40, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:659) [bci: 222]
locals: stack:88|QWORD[.] - - stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD - - - - r13|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r8|DWORD[_] * 8] state [bci:222] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -90923 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:637) [bci: 59]
stack: stack:120|QWORD[.] r11|DWORD rax|QWORD[.] 
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:59] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1332  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:636) [bci: 29]
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] - r13|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -170003 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 10260 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [rdx:0, stack:56]
live-base-pointers: []
java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18]
stack: rax|DWORD 
locals: stack:88|QWORD[.] - rdx|QWORD[.] - 
java.util.HashMap.putVal(HashMap.java:670) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:18, 295] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  568  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd] <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B47 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction MOV [r15|QWORD + 1156] y: -162067 size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [r8:0, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 94]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD stack:120|QWORD[.] r8|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:94] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [r15|QWORD + 1156] y: -138259 size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:634) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 1156] y: -166675 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [rbx:0, r13:0, stack:40, stack:48, stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:654) [bci: 206]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:44|DWORD stack:96|QWORD[.] stack:104|QWORD[.] stack:28|DWORD stack:32|DWORD rbx|QWORD[.] - - - r13|QWORD[.] - r14|DWORD 
>@ <|@ instruction DEOPT info [bci:206] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -65075 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:670) [bci: 292]
locals: stack:88|QWORD[.] - - - - stack:32|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:292] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #21         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #23         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #35         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #180        // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #180        // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #41         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #40         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #38         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #42         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #35         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #36         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #37         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #34         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #43         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #44         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #44         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #32         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #32         // size:int
   280: aload_0       
   281: getfield      #17         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #23         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #45         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4881ec88000000669041817f20000000000f859e0b00004889ac2480000000488974243848894c24304c8944242844894c2474897c2470448bd20f318bd248c1e220480bd048bbaddeaddeaddeadde8b437c448b5b7044895c24248b6b74896c24208b5b788b5e2485db0f84940600008b04dd0c00000085c00f84bb0a000048c1e303448be848895c24188b430c448b7308458bdd41ffcb4523da44895c2460413bc30f86fb09000044896c245c428b449b10448b6e0849bb0000003f027f00004f8d2c2b4c896c245049bb002099be027f00004c895c2448498bf048c1ee038974241485c00f851e0200004c3b2d000000000f841f0000004c3b2d000000000f849b0700004c3b2d000000000f848e070000e9e1090000498b87b80100004c8d40204d3b87c80100000f87110500004d8987b80100000f18802001000048c70001000000c74008addeaddec7400c0000000048c740100000000048c740180000000089701448c1e9038948104489500c48be0000003f027f00004e8d3436498bb6d00000008b4e14448b400849b90000003f027f00004f8d04014c63c94b3b34080f841200000083f9200f85cb080000493bf00f850301000041807f40000f8573030000448b5c24604889542468488bf048c1ee034289749b104a8d749b104833f048f7c60000c0ff0f84220000004885c00f84190000004c8b5424484a8d749b1048c1ee0942803c16020f859c030000488b742438ff4618ba010000000356148956143b561c0f8f670500004c8b6c24504c3b2d000000000f841f0000004c3b2d000000000f84a90500004c3b2d000000000f849c050000e9330900008b6c2420448b5c24240f318bf248c1e620480bf04a8b04dd203e0000482b7424684803f04a8934dd203e000048ffc0488904ed203e000048c7c000000000488bac24800000004881c488000000493ba7500400000f870f090000c5f877c3498b4828448b0941ba00000000e92800000066660f1f840000000000458bf241c1e603458d76084d63f64e8b3431493bf60f840d00000041ffc2453bca7fdde97b07000049897020e9b0feffff448bc049c1e003443b14c50c0000000f84b7030000813cc508000000addeadde0f84d606000041be00000000e93b0000006666660f1f840000000000666666906666660f1f84000000000066666690443b14cd0c0000000f8411020000498b8f58040000850141ffc64d8bc5418b4818448be949c1e50385c975d44c896c2408448974245c4c8904244c8b6c245048895424684c8b5c2428488b7c2438498bada80200004c8b6d40488bf7418bd2488b4c24304d8bc349c7c100000000488bdd498bc54489542464ffd00f1f84000000000041807f40000f85020200004c8b04244c8b542448488b5c2418488bf048c1ee0341897018498bf04833f048f7c60000c0ff0f84180000004885c00f840f00000049c1e80943803c10020f8501020000837c245c070f8d130600004c8b6c24084d85ed0f84cefdffff8b6c2420448b5c2424448b4c2474488b742438458b45144585c90f850b06000041807f40000f851b0200008b74241441897514498bf5483374242848f7c60000c0ff0f84250000004c8b5424284d85d20f84170000004c8b5c2448498bf548c1ee0942803c1e020f85100200004c8b542450498b9ab0020000488b434049c1e003488b742438498bd54c89442408ffd00f1f8400000000000f318bf248c1e620480bf0448b5c24244a8b04dd203e0000482b7424684803f04a8934dd203e000048ffc08b6c2420488904ed203e0000488b442408488bac24800000004881c488000000493ba7500400000f87a8060000c5f877c3448b5c246048895424684a8d749b108b3685f60f847efcffff4d8b572848c1e6034d85d20f841e0100004d8b47384b897410f8498d72f849897728e957fcffff4c896c2408448974245c4c890424488954246844895424648b34cd10000000448bd649c1e2034c3b5424300f8492feffffe9d7030000f08304240042803c16000f8454fcffff42c60416004d8b5f484903f24d85db0f84e10100004d8b57584b89741af8498d73f849897748e929fcffff4c8b0424488b5c2418498d70188b3685f60f84510100004d8b572848c1e6034d85d20f844a0100004d8b5f384b897413f8498d72f8498977284c8b542448e9c9fdfffff08304240043803c10000f84effdffffe929010000448b5c24604889542468448954246448beaddeaddeaddeaddee8000000000f1f84000000000085008b7424148b6c2420488b4c24304c8b5c2448e9e3faffffe800000000e945fbffff4d8d4d14458b094585c90f84d5fdffff498b4f2849c1e1034885c90f8413010000498b5f384c894c0bf84c8d49f84d894f28e9aefdfffff08304240042803c1e000f84e0fdffffe9f5000000488954246844895424644d8bd38b34c510000000448bde49c1e3034c3b5c24300f85570100004d8be8e937fdffff488954246844895424646690e8000000000f1f8400000000008b700c448bee488bd88b6c2420488b5424688b7c2470448b4c24744c8b442428488b4c2430448b542464488b742438e935f9ffff4c8b542448e99afcffff4c8b542448e800000000e98bfcffff43c6041000498b77484d03c24885f60f84f9010000498b57584c894432f8488d76f849897748e996fcffff4c8bd6e8000000000f1f8400000000004c8b6c2450488b742438e97ffaffffe800000000e954faffff498bf1e800000000e9a4fcffff42c6041e00498b57484903f34885d20f84e8010000498b5f5848897413f8488d72f849897748e9bbfcffff8b7c247085ff0f845dfaffff488b7424388b56348504d5000000008b5e0848b80000003f027f0000488d1c18488b9b68030000488b434048c1e2034c8bd64c8bda4c895c2408ffd00f1f84000000000085c00f8411faffffe97e0200004c89442408488b4c24308b710848ba0000003f027f0000488d3432488b86d00100004c8b4840488bf1498bd3488bd8498bc1ffd00f1f84000000000085c00f847b0200004c8b6c2408e99afbffff448b5c246048895424684489542464498bb7b8010000488d5628493b97c80100000f870a010000498997b80100000f18862801000048c70601000000c74608addeaddec7460c0000000048c746100000000048c746180000000048c746200000000044897424444c8bd68b542464488b4c24304c8b44242849c7c1000000004c89542408666690e8000000000f1f840000000000488b742438488b54240890e8000000000f1f840000000000488b4424084c8b5c24484c8b6c2450448b742444488b5c24188b6c2420488b5424688b7c2470e9f9f7ffff498bf0e800000000e9a6faffff488b4c24308b510848bb0000003f027f0000488d1413488b9ad0010000488b4340488bf1498bd2ffd00f1f84000000000085c00f84a20100004c8b6c2408e973faffffe800000000e9dffaffff4c8b54245044897424448b6c2420448b5c242448beaddeaddeaddeaddee8000000000f1f8400000000008500488bf0e902ffffff4c8944240848895424684489542464488b742408488b542438488b4c2418448b4424644c8b4c2430488b7c242890e8000000000f1f8400000000004c8be8e9f2f9ffff488b742438488b5424188b4c246490e8000000000f1f8400000000004c8b6c2408e9ccf9ffff428504c500000000e935faffff448b5c246041c78784040000d59cfeff49c7879004000000000000e8000000000f1f84000000000049c7c300000000448954246441bae5b8feff458997840400004d899f90040000e8000000000f1f840000000000488b54240841c78784040000ed67fdff49c7879004000014280000e8000000000f1f84000000000049c7c394160000448b6c245c448954246441bacd27ffffeba44c8b44240841c78784040000ed86fdff49c7879004000094020000e8000000000f1f840000000000418bd241c78784040000ede3fdff49c7879004000014000000e8000000000f1f8400000000004c8b6c2408448b74245c488b5c241841c78784040000ed74fdff49c7879004000014050000e8000000000f1f84000000000041c78784040000cd01ffff49c7879004000014230000e8000000000f1f8400000000004889ac2480000000e800000000e950f4fffff4488d0dddf6ffff49898f68040000e9fef3fffff4488d0d44f9ffff49898f68040000e9eaf3fffff441c78784040000f584feff49c7879004000000000000e8000000000f1f84000000000041c787840400008ff4fcff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53afeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f593feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f576feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fc3fcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 48 FRAME_COMPLETE  <||@
  Comment 48 ENTRY_BARRIER_PATCH  <||@
  Comment 62 block B0 null  <||@
  Comment 62 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 62 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 70 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD  <||@
  Comment 70 6 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 75 8 stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 80 10 stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 85 12 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 90 14 stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 94 16 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 97 18 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 99 20 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 101 22 rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD  <||@
  Comment 105 24 rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 108 26 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 108 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 118 28 rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD  <||@
  Comment 121 30 r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD  <||@
  Comment 125 32 stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD  <||@
  Comment 130 34 rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD  <||@
  Comment 133 36 stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD  <||@
  Comment 137 38 rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD  <||@
  Comment 140 40 BLACKHOLE [rax|DWORD[_] * 8 + 15904]  <||@
  Comment 140 42 BLACKHOLE [r11|DWORD[_] * 8 + 15904]  <||@
  Comment 140 44 BLACKHOLE [rbp|DWORD[_] * 8 + 15904]  <||@
  Comment 140 46 BLACKHOLE [rbx|DWORD[_] * 8 + 15904]  <||@
  Comment 140 48 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 143 50 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 151 block B2 null  <||@
  Comment 151 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 88 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 158 90 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 166 block B4 null  <||@
  Comment 166 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 166 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 170 106 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 173 108 JUMP ~[] destination: B4 -> B5  <||@
  Comment 173 block B5 null  <||@
  Comment 173 110 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 173 112 stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 178 114 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 181 116 r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD  <||@
  Comment 185 118 r11|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 191 120 r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 194 122 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 199 124 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD  <||@
  Comment 208 block B6 null  <||@
  Comment 208 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 208 128 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 213 130 rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 218 132 r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 222 134 r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 232 136 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 236 138 stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 241 140 r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 251 142 stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 256 144 rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 263 146 stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD  <||@
  Comment 267 148 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD  <||@
  Comment 275 block B7 null  <||@
  Comment 275 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 275 152 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 275 {DataSection[0x0]}  <||@
  Comment 288 {DataSection[0x8]}  <||@
  Comment 301 {DataSection[0x10]}  <||@
  Comment 319 block B8 null  <||@
  Comment 319 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 156 rax|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 326 158 r8|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 330 160 CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 343 block B10 null  <||@
  Comment 343 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 196 MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD  <||@
  Comment 350 198 AMD64PREFETCH ~[rax|QWORD + 288] instr: 0  <||@
  Comment 357 200 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 364 202 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 364 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 371 204 MOV [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 378 206 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 386 208 MOV [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 394 210 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 394 212 JUMP ~[] destination: B10 -> B11  <||@
  Comment 394 block B11 null  <||@
  Comment 394 214 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 394 216 MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 397 218 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 401 220 MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 404 222 MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 408 224 JUMP ~[] destination: B11 -> B16  <||@
  Comment 408 block B16 null  <||@
  Comment 408 326 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 408 328 rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 418 330 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 422 332 rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD  <||@
  Comment 429 334 rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD  <||@
  Comment 432 336 r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 436 338 r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 446 340 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 450 342 r9|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 453 344 CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 463 block B18 null  <||@
  Comment 463 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 463 352 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null  <||@
  Comment 472 block B19 null  <||@
  Comment 472 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 356 CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 481 block B27 null  <||@
  Comment 481 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 481 408 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 492 block B28 null  <||@
  Comment 492 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 412 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 497 414 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 502 416 JUMP ~[] destination: B28 -> B34  <||@
  Comment 502 block B34 null  <||@
  Comment 502 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 502 462 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 509 464 MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 514 466 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 519 468 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 522 470 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD  <||@
  Comment 535 block B36 null  <||@
  Comment 535 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 480 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD  <||@
  Comment 544 block B38 null  <||@
  Comment 544 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 490 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 549 492 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 554 494 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 558 496 CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null  <||@
  Comment 569 block B88 null  <||@
  Comment 569 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 569 474 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 574 978 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 577 980 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 582 982 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 585 984 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD  <||@
  Comment 588 986 CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD  <||@
  Comment 597 block B90 null  <||@
  Comment 597 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 1004 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 602 1006 JUMP ~[] destination: B90 -> B91  <||@
  Comment 602 block B91 null  <||@
  Comment 602 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 1010 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 602 {DataSection[0x0]}  <||@
  Comment 615 {DataSection[0x8]}  <||@
  Comment 628 {DataSection[0x10]}  <||@
  Comment 646 block B97 null  <||@
  Comment 646 1076 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 646 1014 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 650 1016 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 655 1078 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 657 1080 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 659 1082 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 663 1084 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 666 1086 rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD  <||@
  Comment 674 1088 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 679 1090 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 682 1092 MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD  <||@
  Comment 690 1094 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 693 1096 MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD  <||@
  Comment 701 1098 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 708 1100 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 723 POLL_RETURN_FAR  <||@
  Comment 740 block B21 null  <||@
  Comment 740 362 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 364 rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 744 366 r9|DWORD = MOV [rcx|QWORD] size: DWORD  <||@
  Comment 747 368 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 753 370 JUMP ~[] destination: B21 -> B22  <||@
  Comment 758 block B23 loop 0 depth 1 header:586|LoopBegin  <||@
  Comment 758 376 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 378 r14|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 775 380 r14|DWORD = LEA [r14|DWORD + 8] size: DWORD  <||@
  Comment 779 382 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 782 384 r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD  <||@
  Comment 786 386 CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD  <||@
  Comment 795 block B24 loop 0 depth 1 header:586|LoopBegin  <||@
  Comment 795 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 795 390 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 798 392 JUMP ~[] destination: B24 -> B22  <||@
  Comment 798 block B22 loop 0 depth 1 header:586|LoopBegin  <||@
  Comment 798 372 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 798 374 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD  <||@
  Comment 808 block B25 null  <||@
  Comment 808 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 808 396 MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD  <||@
  Comment 812 398 JUMP ~[] destination: B25 -> B27  <||@
  Comment 817 block B48 null  <||@
  Comment 817 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 817 578 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 824 580 CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD  <||@
  Comment 838 block B54 null  <||@
  Comment 838 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 838 648 CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 838 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 855 block B56 null  <||@
  Comment 855 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 855 678 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 861 680 JUMP ~[] destination: B56 -> B57  <||@
  Comment 866 block B58 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 866 690 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 692 CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD  <||@
  Comment 910 block B62 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 910 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 910 752 SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134]  <||@
  Comment 917 [rbx:0, r8:0, r13:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                   |4         |5          |6             |7            |8  |9  |10  |11  |12        
     locals:  |stack:88|QWORD[.]  |r10|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |r14|DWORD   <||@
  Comment 917 {infopoint: SAFEPOINT}  <||@
  Comment 917 POLL_FAR  <||@
  Comment 919 754 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 922 756 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 925 758 JUMP ~[] destination: B62 -> B57  <||@
  Comment 925 block B57 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 925 682 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 925 684 rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134]  <||@
  Comment 925 [rbx:0, r8:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                   |4         |5          |6             |7            |8  |9  |10  |11  |12        
     locals:  |stack:88|QWORD[.]  |r10|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |r14|DWORD   <||@
  Comment 925 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 929 686 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 936 688 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD  <||@
  Comment 940 block B65 null  <||@
  Comment 940 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 940 774 stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 945 776 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 950 778 stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 954 780 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 959 782 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 964 784 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 969 786 rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 974 788 rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD  <||@
  Comment 981 790 r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD  <||@
  Comment 985 792 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 988 794 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 991 796 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 996 798 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 999 800 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1006 802 rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 1009 804 rax|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 1012 806 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1017 808 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152]  <||@
  Comment 1017 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1017 INLINE_INVOKE  <||@
  Comment 1019 [stack:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:648) [bci: 152, duringCall: true, rethrow: false]
              |0                   |1               |2  |3                   |4               |5               |6                   |7  |8  |9  |10                  |11  |12             
     locals:  |stack:88|QWORD[.]   |stack:44|DWORD  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |-  |-  |stack:136|QWORD[.]  |-   |stack:52|DWORD 
     stack:   |stack:144|QWORD[.]  |                |   |                    |                |                |                    |   |   |   |                    |    |                 <||@
  Comment 1027 810 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1038 block B66 null  <||@
  Comment 1038 812 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 814 r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 1042 816 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1047 818 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 820 JUMP ~[] destination: B66 -> B72  <||@
  Comment 1052 block B72 null  <||@
  Comment 1052 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1052 872 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1059 874 MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1063 876 rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1069 878 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD  <||@
  Comment 1082 block B74 null  <||@
  Comment 1082 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1082 886 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 1091 block B76 null  <||@
  Comment 1091 892 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1091 894 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1095 896 CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1106 block B83 null  <||@
  Comment 1106 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1106 944 CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null  <||@
  Comment 1117 block B84 null  <||@
  Comment 1117 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1117 948 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 1122 950 JUMP ~[] destination: B84 -> B86  <||@
  Comment 1122 block B86 null  <||@
  Comment 1122 966 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1122 968 TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD  <||@
  Comment 1131 block B100 null  <||@
  Comment 1131 1120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1131 1122 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1135 1124 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1140 1126 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1145 1128 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 1130 r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1154 1132 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD  <||@
  Comment 1163 block B101 null  <||@
  Comment 1163 1134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1163 1136 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1174 block B108 null  <||@
  Comment 1174 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1174 1140 rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD  <||@
  Comment 1178 1192 MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1182 1194 rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD  <||@
  Comment 1190 1196 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD  <||@
  Comment 1203 block B110 null  <||@
  Comment 1203 1204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 1206 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 1208 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD  <||@
  Comment 1217 block B112 null  <||@
  Comment 1217 1216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1217 1218 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1222 1220 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1229 1222 CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1240 block B120 null  <||@
  Comment 1240 1284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1240 1280 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1245 1286 rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD  <||@
  Comment 1252 1288 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1256 1290 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1260 1292 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1265 1294 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1268 1296 stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1273 1298 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253]  <||@
  Comment 1273 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1273 INLINE_INVOKE  <||@
  Comment 1275 [stack:8, stack:32, stack:36]at java.util.HashMap.putVal(HashMap.java:663) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:136|QWORD[.]   <||@
  Comment 1283 1300 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 1285 1302 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 1287 1304 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1291 1306 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 1294 1308 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1299 1310 rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD  <||@
  Comment 1307 1312 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 1312 1314 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1315 1316 MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD  <||@
  Comment 1323 1318 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 1326 1320 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1330 1322 MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD  <||@
  Comment 1338 1324 rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 1326 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 1358 POLL_RETURN_FAR  <||@
  Comment 1375 block B29 null  <||@
  Comment 1375 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1375 420 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1380 422 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1385 424 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1390 426 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1392 428 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 1400 block B31 null  <||@
  Comment 1400 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1400 436 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1404 438 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1408 440 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1417 block B33 null  <||@
  Comment 1417 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1417 450 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1421 452 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1426 454 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1430 456 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1434 458 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1439 block B59 null  <||@
  Comment 1439 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1439 696 stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1444 698 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1449 700 stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1453 702 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1458 704 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1463 706 rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1470 708 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1477 710 CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD  <||@
  Comment 1493 block B40 null  <||@
  Comment 1493 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1493 506 MEMBAR barriers: 4  <||@
  Comment 1498 508 CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1509 block B42 null  <||@
  Comment 1509 516 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1509 518 MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1514 520 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1518 522 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 1521 524 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 1530 block B44 null  <||@
  Comment 1530 536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1530 538 r10|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1534 540 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1539 542 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1543 544 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1547 548 JUMP ~[] destination: B44 -> B88  <||@
  Comment 1552 block B67 null  <||@
  Comment 1552 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1552 824 r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 826 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 828 rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD  <||@
  Comment 1565 830 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1567 832 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 1575 block B69 null  <||@
  Comment 1575 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1575 842 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1579 844 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1583 846 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD  <||@
  Comment 1592 block B71 null  <||@
  Comment 1592 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1592 858 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1596 860 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1601 862 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1605 864 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1609 866 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1614 868 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1619 block B78 null  <||@
  Comment 1619 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1619 904 MEMBAR barriers: 4  <||@
  Comment 1624 906 CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1640 block B9 null  <||@
  Comment 1640 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 164 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1645 166 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1650 168 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1655 170 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 1655 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 1665 172 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 1665 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1670 [rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 1678 174 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 1678 [rax:0, rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 1678 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1680 176 rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD  <||@
  Comment 1684 180 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1688 186 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 190 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1698 192 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1703 block B32 null  <||@
  Comment 1703 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1703 444 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1703 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1708 446 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1713 block B103 null  <||@
  Comment 1713 1144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1713 1146 r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD  <||@
  Comment 1717 1148 r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD  <||@
  Comment 1720 1150 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD  <||@
  Comment 1729 block B105 null  <||@
  Comment 1729 1158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1729 1160 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1733 1162 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1737 1164 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD  <||@
  Comment 1746 block B107 null  <||@
  Comment 1746 1176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1746 1178 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1750 1180 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 1755 1182 r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 1759 1184 MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD  <||@
  Comment 1763 1188 JUMP ~[] destination: B107 -> B108  <||@
  Comment 1768 block B114 null  <||@
  Comment 1768 1230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1768 1232 MEMBAR barriers: 4  <||@
  Comment 1773 1234 CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1789 block B49 null  <||@
  Comment 1789 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1789 584 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1794 586 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1799 588 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1802 590 rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1809 592 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1816 594 CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1827 block B50 null  <||@
  Comment 1827 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1827 598 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1830 600 JUMP ~[] destination: B50 -> B86  <||@
  Comment 1835 block B1 null  <||@
  Comment 1835 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1835 54 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1840 56 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1845 60 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20]  <||@
  Comment 1847 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1847 INVOKESPECIAL  <||@
  Comment 1852 [stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1860 62 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23]  <||@
  Comment 1860 [rax:0, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                    |                |                |   |   |   |   |    |    |     <||@
  Comment 1860 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1863 64 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1866 66 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1869 68 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1873 70 rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1878 72 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1882 74 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1887 76 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1892 78 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1897 80 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1902 82 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1907 84 JUMP ~[] destination: B1 -> B5  <||@
  Comment 1912 block B68 null  <||@
  Comment 1912 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1912 836 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1917 838 JUMP ~[] destination: B68 -> B72  <||@
  Comment 1922 block B70 null  <||@
  Comment 1922 848 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1922 850 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1927 852 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1927 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1932 854 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1937 block B80 null  <||@
  Comment 1937 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1937 914 MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1942 916 rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1946 918 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 1949 920 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1958 block B82 null  <||@
  Comment 1958 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1958 932 rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1962 934 MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD  <||@
  Comment 1967 936 rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1971 938 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1975 940 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1980 block B89 null  <||@
  Comment 1980 988 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1980 990 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1983 994 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288]  <||@
  Comment 1983 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1983 INVOKESPECIAL  <||@
  Comment 1988 [stack:32, stack:36, stack:56]at java.util.HashMap.putVal(HashMap.java:669) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1996 996 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2001 998 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 1000 JUMP ~[] destination: B89 -> B91  <||@
  Comment 2011 block B43 null  <||@
  Comment 2011 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2011 528 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2011 530 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2011 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2016 534 JUMP ~[] destination: B43 -> B88  <||@
  Comment 2021 block B106 null  <||@
  Comment 2021 1166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2021 1168 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2024 1170 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 2024 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 2029 1174 JUMP ~[] destination: B106 -> B108  <||@
  Comment 2034 block B116 null  <||@
  Comment 2034 1242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2034 1244 MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 2039 1246 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 2043 1248 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 2046 1250 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD  <||@
  Comment 2055 block B118 null  <||@
  Comment 2055 1262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2055 1264 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 2059 1266 MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 2064 1268 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 2068 1270 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 2072 1274 JUMP ~[] destination: B118 -> B120  <||@
  Comment 2077 block B93 null  <||@
  Comment 2077 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2077 1022 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 2081 1024 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD  <||@
  Comment 2089 block B95 null  <||@
  Comment 2089 1034 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2089 1036 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2094 1038 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 2097 1040 NULLCHECK [rdx|DWORD[_] * 8] state [bci:292]  <||@
  Comment 2097 [rdx:0, rsi:0, stack:32, stack:36, stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2097 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2104 1042 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 2107 1044 rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 2117 1046 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 2121 1048 rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD  <||@
  Comment 2128 1050 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2132 1052 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 2136 1054 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1058 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2142 1062 stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2147 1064 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295]  <||@
  Comment 2147 {HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>}  <||@
  Comment 2147 INLINE_INVOKE  <||@
  Comment 2149 [stack:8, stack:32, stack:36, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2                   |3 
     locals:  |stack:88|QWORD[.]  |-  |stack:136|QWORD[.]  |- 
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2157 1066 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD  <||@
  Comment 2170 block B51 null  <||@
  Comment 2170 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2170 604 stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2175 606 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2180 608 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29]  <||@
  Comment 2180 [rcx:0, r11:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 2180 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2183 610 rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 2193 612 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 2197 614 rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD  <||@
  Comment 2204 616 r9|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 2208 618 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2211 620 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 622 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2217 624 rax|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2220 626 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91]  <||@
  Comment 2220 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2220 INLINE_INVOKE  <||@
  Comment 2222 [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7                   |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |stack:136|QWORD[.]  |-  |-  |-   |-   |-    <||@
  Comment 2230 628 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD  <||@
  Comment 2238 block B53 null  <||@
  Comment 2238 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2238 642 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 644 JUMP ~[] destination: B53 -> B86  <||@
  Comment 2248 block B12 null  <||@
  Comment 2248 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2248 228 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2253 230 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2258 232 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2263 234 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 2270 236 rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 2274 238 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 2287 block B14 null  <||@
  Comment 2287 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2287 262 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 2294 264 AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0  <||@
  Comment 2301 266 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2308 268 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}  <||@
  Comment 2308 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}}  <||@
  Comment 2315 270 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 2322 272 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 2330 274 MOV [rsi|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 2338 276 MOV [rsi|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 2346 278 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2346 280 stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2351 282 JUMP ~[] destination: B14 -> B15  <||@
  Comment 2351 block B15 null  <||@
  Comment 2351 284 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2351 286 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2354 290 rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2358 292 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2363 294 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2368 296 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2375 298 stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 300 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56]  <||@
  Comment 2383 {HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>}  <||@
  Comment 2383 INVOKESPECIAL  <||@
  Comment 2388 [stack:8, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9, duringCall: true, rethrow: false]
              |0                   |1               |2                  |3                   |4             |5 
     locals:  |stack:88|QWORD[.]   |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |Object[null]  |- 
     stack:   |stack:136|QWORD[.]  |                |                   |                    |              |  
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                   |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]   |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:120|QWORD[.]  |stack:48|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2396 302 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2401 304 rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2406 306 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56]  <||@
  Comment 2407 {HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>}  <||@
  Comment 2407 INVOKESPECIAL  <||@
  Comment 2412 [stack:8, stack:24, stack:32, stack:36, stack:56]at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  
     locals:  |-  |-  |-  |-  |-  |stack:136|QWORD[.] 
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                   |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]   |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:120|QWORD[.]  |stack:48|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2420 308 rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2425 310 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 2430 312 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2435 314 r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2440 316 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2445 318 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 2449 320 rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 2454 322 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 2458 324 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2463 block B81 null  <||@
  Comment 2463 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2463 924 rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 2466 926 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2466 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2471 928 JUMP ~[] destination: B81 -> B83  <||@
  Comment 2476 block B60 null  <||@
  Comment 2476 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2476 716 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2481 718 rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134]  <||@
  Comment 2481 [rcx:0, r8:0, r10:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7            |8  |9  |10  |11  |12             
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |stack:52|DWORD   <||@
  Comment 2481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2484 720 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 2494 722 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 2498 724 rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD  <||@
  Comment 2505 726 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2509 728 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2512 730 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2515 732 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203]  <||@
  Comment 2515 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2515 INLINE_INVOKE  <||@
  Comment 2517 [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8  |9  |10                  |11  |12             
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |-  |-  |stack:136|QWORD[.]  |-   |stack:52|DWORD   <||@
  Comment 2525 734 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD  <||@
  Comment 2533 block B63 null  <||@
  Comment 2533 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2533 762 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2538 764 JUMP ~[] destination: B63 -> B86  <||@
  Comment 2543 block B117 null  <||@
  Comment 2543 1252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2543 1254 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2543 1256 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2543 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2548 1260 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2553 block B13 null  <||@
  Comment 2553 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2553 242 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2558 244 stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2563 246 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 2567 248 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 2572 250 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}  <||@
  Comment 2572 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}}  <||@
  Comment 2582 252 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 2582 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2587 [stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 2595 254 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 2595 [rax:0, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 2595 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2597 256 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2600 258 JUMP ~[] destination: B13 -> B15  <||@
  Comment 2605 block B55 null  <||@
  Comment 2605 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2605 652 stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2610 654 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2615 656 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2620 658 rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2625 660 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2630 662 rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2635 664 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2640 666 r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2645 668 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2650 670 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123]  <||@
  Comment 2651 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 2651 INVOKESPECIAL  <||@
  Comment 2656 [stack:20, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:644) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2664 672 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 674 JUMP ~[] destination: B55 -> B86  <||@
  Comment 2672 block B85 null  <||@
  Comment 2672 952 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2672 954 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2677 956 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2682 958 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2686 960 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169]  <||@
  Comment 2687 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 2687 INVOKESPECIAL  <||@
  Comment 2692 [stack:8, stack:20, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:650) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                   |4               |5               |6  |7  |8  |9  |10                  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |stack:136|QWORD[.]  |-   |-    <||@
  Comment 2700 962 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2705 964 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2710 block B119 null  <||@
  Comment 2710 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2710 1278 NULLCHECK [r8|DWORD[_] * 8] state [bci:222]  <||@
  Comment 2710 [r8:0, r13:0, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:659) [bci: 222, duringCall: false, rethrow: false]
              |0                  |1  |2  |3                   |4               |5               |6  |7  |8  |9  |10            |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |r13|QWORD[.]  |-   |-    <||@
  Comment 2710 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2718 1282 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2723 block B46 null  <||@
  Comment 2723 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2723 552 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2728 558 MOV [r15|QWORD + 1156] y: -90923 size: DWORD  <||@
  Comment 2739 560 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2750 562 DEOPT info [bci:59]  <||@
  Comment 2750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2755 [rax:0, stack:24, stack:56]at java.util.HashMap.putVal(HashMap.java:637) [bci: 59, duringCall: false, rethrow: false]
              |0                   |1          |2             |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]   |-          |-             |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:120|QWORD[.]  |r11|DWORD  |rax|QWORD[.]  |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2763 block B121 null  <||@
  Comment 2763 1328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2763 1330 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2770 1332 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2775 1334 r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5]  <||@
  Comment 2781 1336 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2781 block B122 null  <||@
  Comment 2781 1338 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2781 1340 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2788 1342 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2795 1344 DEOPT info [bci:29]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2800 [stack:24, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8          |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-    <||@
  Comment 2808 block B98 null  <||@
  Comment 2808 1102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2808 1104 rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2813 1106 MOV [r15|QWORD + 1156] y: -170003 size: DWORD  <||@
  Comment 2824 1108 MOV [r15|QWORD + 1168] y: 10260 size: QWORD  <||@
  Comment 2835 1110 DEOPT info [bci:18, 295]  <||@
  Comment 2835 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2840 [rdx:0, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18, duringCall: false, rethrow: false]
              |0                  |1  |2             |3 
     locals:  |stack:88|QWORD[.]  |-  |rdx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |              |  
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2848 block B47 null  <||@
  Comment 2848 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2848 566 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2855 568 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2860 570 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2865 572 r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd]  <||@
  Comment 2871 574 JUMP ~[] destination: B47 -> B122  <||@
  Comment 2873 block B52 null  <||@
  Comment 2873 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2873 632 r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2878 634 MOV [r15|QWORD + 1156] y: -162067 size: DWORD  <||@
  Comment 2889 636 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2900 638 DEOPT info [bci:94]  <||@
  Comment 2900 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2905 [r8:0, stack:24, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 94, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7            |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |-  
     stack:   |int[0|0x0]         |                |                   |                    |                |                |                    |             |   |   |    |    |     <||@
  Comment 2913 block B3 null  <||@
  Comment 2913 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2913 94 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2916 96 MOV [r15|QWORD + 1156] y: -138259 size: DWORD  <||@
  Comment 2927 98 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2938 100 DEOPT info [bci:0]  <||@
  Comment 2938 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2943 [rcx:0, rsi:0, r8:0]at java.util.HashMap.putVal(HashMap.java:634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2951 block B61 null  <||@
  Comment 2951 736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2951 738 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2956 740 r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2961 742 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2966 744 MOV [r15|QWORD + 1156] y: -166675 size: DWORD  <||@
  Comment 2977 746 MOV [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2988 748 DEOPT info [bci:206]  <||@
  Comment 2988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2993 [rbx:0, r13:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 206, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8  |9  |10            |11  |12        
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |-  |-  |r13|QWORD[.]  |-   |r14|DWORD 
     stack:   |int[0|0x0]         |                |                   |                    |                |                |              |   |   |   |              |    |            <||@
  Comment 3001 block B99 null  <||@
  Comment 3001 1112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3001 1114 MOV [r15|QWORD + 1156] y: -65075 size: DWORD  <||@
  Comment 3012 1116 MOV [r15|QWORD + 1168] y: 8980 size: QWORD  <||@
  Comment 3023 1118 DEOPT info [bci:292]  <||@
  Comment 3023 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3028 [stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 3044 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 3069 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 3089 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 3117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3122 [rbx:0, r8:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                   |4         |5          |6             |7            |8  |9  |10  |11  |12        
     locals:  |stack:88|QWORD[.]  |r10|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |r14|DWORD   <||@
  Comment 3152 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3157 [rax:0, rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 3187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3192 [rax:0, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                    |                |                |   |   |   |   |    |    |     <||@
  Comment 3222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3227 [rcx:0, r11:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 3257 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3262 [rcx:0, r8:0, r10:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7            |8  |9  |10  |11  |12             
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |stack:52|DWORD   <||@
  Comment 3292 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3297 [rax:0, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 3305 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3305 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3311 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 3311 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1986[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  method "HotSpotCompilation-1986[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  date 1714038095858
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02aba3a860 448b560849bc0000003f027f00004d03d44d33e4493bc20f8503a814ff66669089842400c0feff4881ec88000000669041817f20030000000f859e0b00004889ac2480000000488974243848894c24304c8944242844894c2474897c2470448bd20f318bd248c1e220480bd048bbd88c5e2e060000008b437c448b5b7044895c24248b6b74896c24208b5b788b5e2485db0f84940600008b04dd0c00000085c00f84bb0a000048c1e303448be848895c24188b430c448b7308458bdd41ffcb4523da44895c2460413bc30f86fb09000044896c245c428b449b10448b6e0849bb0000003f027f00004f8d2c2b4c896c245049bb002099be027f00004c895c2448498bf048c1ee038974241485c00f851e0200004c3b2dc6feffff0f841f0000004c3b2dc1feffff0f849b0700004c3b2dbcfeffff0f848e070000e9e1090000498b87b80100004c8d40204d3b87c80100000f87110500004d8987b80100000f18802001000048c70001000000c7400888791a00c7400c0000000048c740100000000048c740180000000089701448c1e9038948104489500c48be0000003f027f00004e8d3436498bb6d00000008b4e14448b400849b90000003f027f00004f8d04014c63c94b3b34080f841200000083f9200f85cb080000493bf00f850301000041807f40000f8573030000448b5c24604889542468488bf048c1ee034289749b104a8d749b104833f048f7c60000c0ff0f84220000004885c00f84190000004c8b5424484a8d749b1048c1ee0942803c16020f859c030000488b742438ff4618ba010000000356148956143b561c0f8f670500004c8b6c24504c3b2d7ffdffff0f841f0000004c3b2d7afdffff0f84a90500004c3b2d75fdffff0f849c050000e9330900008b6c2420448b5c24240f318bf248c1e620480bf04a8b04dd203e0000482b7424684803f04a8934dd203e000048ffc0488904ed203e000048c7c000000000488bac24800000004881c488000000493ba7500400000f870f090000c5f877c3498b4828448b0941ba00000000e92800000066660f1f840000000000458bf241c1e603458d76084d63f64e8b3431493bf60f840d00000041ffc2453bca7fdde97b07000049897020e9b0feffff448bc049c1e003443b14c50c0000000f84b7030000813cc508000000487e1a000f84d606000041be00000000e93b0000006666660f1f840000000000666666906666660f1f84000000000066666690443b14cd0c0000000f8411020000498b8f58040000850141ffc64d8bc5418b4818448be949c1e50385c975d44c896c2408448974245c4c8904244c8b6c245048895424684c8b5c2428488b7c2438498bada80200004c8b6d40488bf7418bd2488b4c24304d8bc349c7c100000000488bdd498bc54489542464ffd00f1f84000000000041807f40000f85020200004c8b04244c8b542448488b5c2418488bf048c1ee0341897018498bf04833f048f7c60000c0ff0f84180000004885c00f840f00000049c1e80943803c10020f8501020000837c245c070f8d130600004c8b6c24084d85ed0f84cefdffff8b6c2420448b5c2424448b4c2474488b742438458b45144585c90f850b06000041807f40000f851b0200008b74241441897514498bf5483374242848f7c60000c0ff0f84250000004c8b5424284d85d20f84170000004c8b5c2448498bf548c1ee0942803c1e020f85100200004c8b542450498b9ab0020000488b434049c1e003488b742438498bd54c89442408ffd00f1f8400000000000f318bf248c1e620480bf0448b5c24244a8b04dd203e0000482b7424684803f04a8934dd203e000048ffc08b6c2420488904ed203e0000488b442408488bac24800000004881c488000000493ba7500400000f87a8060000c5f877c3448b5c246048895424684a8d749b108b3685f60f847efcffff4d8b572848c1e6034d85d20f841e0100004d8b47384b897410f8498d72f849897728e957fcffff4c896c2408448974245c4c890424488954246844895424648b34cd10000000448bd649c1e2034c3b5424300f8492feffffe9d7030000f08304240042803c16000f8454fcffff42c60416004d8b5f484903f24d85db0f84e10100004d8b57584b89741af8498d73f849897748e929fcffff4c8b0424488b5c2418498d70188b3685f60f84510100004d8b572848c1e6034d85d20f844a0100004d8b5f384b897413f8498d72f8498977284c8b542448e9c9fdfffff08304240043803c10000f84effdffffe929010000448b5c24604889542468448954246448be88791a3f027f0000e89a4629ff0f1f84000000000085008b7424148b6c2420488b4c24304c8b5c2448e9e3faffffe8f4ca28ffe945fbffff4d8d4d14458b094585c90f84d5fdffff498b4f2849c1e1034885c90f8413010000498b5f384c894c0bf84c8d49f84d894f28e9aefdfffff08304240042803c1e000f84e0fdffffe9f5000000488954246844895424644d8bd38b34c510000000448bde49c1e3034c3b5c24300f85570100004d8be8e937fdffff488954246844895424646690e8649cbef70f1f84008c0900068b700c448bee488bd88b6c2420488b5424688b7c2470448b4c24744c8b442428488b4c2430448b542464488b742438e935f9ffff4c8b542448e99afcffff4c8b542448e814ca28ffe98bfcffff43c6041000498b77484d03c24885f60f84f9010000498b57584c894432f8488d76f849897748e996fcffff4c8bd6e85ca314ff0f1f8400140a00084c8b6c2450488b742438e97ffaffffe8c0f428ffe954faffff498bf1e8b3c928ffe9a4fcffff42c6041e00498b57484903f34885d20f84e8010000498b5f5848897413f8488d72f849897748e9bbfcffff8b7c247085ff0f845dfaffff488b7424388b56348504d5000000008b5e0848b80000003f027f0000488d1c18488b9b68030000488b434048c1e2034c8bd64c8bda4c895c2408ffd00f1f84000000000085c00f8411faffffe97e0200004c89442408488b4c24308b710848ba0000003f027f0000488d3432488b86d00100004c8b4840488bf1498bd3488bd8498bc1ffd00f1f84000000000085c00f847b0200004c8b6c2408e99afbffff448b5c246048895424684489542464498bb7b8010000488d5628493b97c80100000f870a010000498997b80100000f18862801000048c70601000000c7460898801a00c7460c0000000048c746100000000048c746180000000048c746200000000044897424444c8bd68b542464488b4c24304c8b44242849c7c1000000004c89542408666690e8cca114ff0f1f8400a40b000d488b742438488b54240890e8b4a114ff0f1f8400bc0b000e488b4424084c8b5c24484c8b6c2450448b742444488b5c24188b6c2420488b5424688b7c2470e9f9f7ffff498bf0e8f9f228ffe9a6faffff488b4c24308b510848bb0000003f027f0000488d1413488b9ad0010000488b4340488bf1498bd2ffd00f1f84000000000085c00f84a20100004c8b6c2408e973faffffe8acf228ffe9dffaffff4c8b54245044897424448b6c2420448b5c242448be98801a3f027f0000e8054329ff0f1f8400000000008500488bf0e902ffffff4c8944240848895424684489542464488b742408488b542438488b4c2418448b4424644c8b4c2430488b7c242890e8c0a014ff0f1f8400b00c00134c8be8e9f2f9ffff488b742438488b5424188b4c246490e89ca014ff0f1f8400d40c00144c8b6c2408e9ccf9ffff428504c500000000e935faffff448b5c246041c78784040000d59cfeff49c7879004000000000000e857fe14ff0f1f84000000000049c7c300000000448954246441bae5b8feff458997840400004d899f90040000e82afe14ff0f1f840000000000488b54240841c78784040000ed67fdff49c7879004000014280000e802fe14ff0f1f84000000000049c7c394160000448b6c245c448954246441bacd27ffffeba44c8b44240841c78784040000ed86fdff49c7879004000094020000e8c1fd14ff0f1f840000000000418bd241c78784040000ede3fdff49c7879004000014000000e89bfd14ff0f1f8400000000004c8b6c2408448b74245c488b5c241841c78784040000ed74fdff49c7879004000014050000e869fd14ff0f1f84000000000041c78784040000cd01ffff49c7879004000014230000e846fd14ff0f1f8400000000004889ac2480000000e8d7fd12ffe950f4fffff4488d0dddf6ffff49898f68040000e99e0b15fff4488d0d44f9ffff49898f68040000e98a0b15fff441c78784040000f584feff49c7879004000000000000e8e8fc14ff0f1f84000000000041c787840400008ff4fcff49c7879004000000000000e8c5fc14ff0f1f84000000000041c78784040000f53afeff49c7879004000000000000e8a2fc14ff0f1f84000000000041c78784040000f593feff49c7879004000000000000e87ffc14ff0f1f84000000000041c78784040000f576feff49c7879004000000000000e85cfc14ff0f1f84000000000041c787840400008fc3fcff49c7879004000000000000e839fc14ff0f1f840000000000e8b2c128fff4e8ccf914fff4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 48 FRAME_COMPLETE  <||@
  Comment 48 ENTRY_BARRIER_PATCH  <||@
  Comment 62 block B0 null  <||@
  Comment 62 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 62 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 70 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1513ed38 slotKind: QWORD  <||@
  Comment 70 6 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 75 8 stack:96|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 80 10 stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 85 12 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 90 14 stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 94 16 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 97 18 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 99 20 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 101 22 rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD  <||@
  Comment 105 24 rdx|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 108 26 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 108 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 118 28 rax|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD  <||@
  Comment 121 30 r11|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD  <||@
  Comment 125 32 stack:108|DWORD[_] = MOVE r11|DWORD[_] moveKind: DWORD  <||@
  Comment 130 34 rbp|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD  <||@
  Comment 133 36 stack:112|DWORD[_] = MOVE rbp|DWORD[_] moveKind: DWORD  <||@
  Comment 137 38 rbx|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD  <||@
  Comment 140 40 BLACKHOLE [rax|DWORD[_] * 8 + 15904]  <||@
  Comment 140 42 BLACKHOLE [r11|DWORD[_] * 8 + 15904]  <||@
  Comment 140 44 BLACKHOLE [rbp|DWORD[_] * 8 + 15904]  <||@
  Comment 140 46 BLACKHOLE [rbx|DWORD[_] * 8 + 15904]  <||@
  Comment 140 48 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 143 50 TESTBRANCH (x: rbx|DWORD[_], y: rbx|DWORD[_]) trueDestinationProbability: 0.0017414699907082889 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 151 block B2 null  <||@
  Comment 151 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 88 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 158 90 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 166 block B4 null  <||@
  Comment 166 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 166 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 170 106 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 173 108 JUMP ~[] destination: B4 -> B5  <||@
  Comment 173 block B5 null  <||@
  Comment 173 110 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 173 112 stack:120|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 178 114 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 181 116 r14|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD  <||@
  Comment 185 118 r11|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 191 120 r11|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 194 122 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 199 124 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B121 size: DWORD  <||@
  Comment 208 block B6 null  <||@
  Comment 208 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 208 128 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 213 130 rax|DWORD[_] = MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 218 132 r13|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 222 134 r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 232 136 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 236 138 stack:64|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 241 140 r11|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 251 142 stack:72|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 256 144 rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 263 146 stack:124|DWORD[_] = MOVE rsi|DWORD[_] moveKind: DWORD  <||@
  Comment 267 148 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.8210215251749418 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B48 size: DWORD  <||@
  Comment 275 block B7 null  <||@
  Comment 275 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 275 152 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B7 -> B8, B7 -> B12, B7 -> B12] defaultTarget: B7 -> B47 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 275 {DataSection[0x0]}  <||@
  Comment 288 {DataSection[0x8]}  <||@
  Comment 301 {DataSection[0x10]}  <||@
  Comment 319 block B8 null  <||@
  Comment 319 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 156 rax|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 326 158 r8|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 330 160 CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 343 block B10 null  <||@
  Comment 343 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 196 MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD  <||@
  Comment 350 198 AMD64PREFETCH ~[rax|QWORD + 288] instr: 0  <||@
  Comment 357 200 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 364 202 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 364 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 371 204 MOV [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 378 206 MOV [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 386 208 MOV [rax|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 394 210 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 394 212 JUMP ~[] destination: B10 -> B11  <||@
  Comment 394 block B11 null  <||@
  Comment 394 214 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 394 216 MOV (x: [rax|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 397 218 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 401 220 MOV (x: [rax|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 404 222 MOV (x: [rax|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 408 224 JUMP ~[] destination: B11 -> B16  <||@
  Comment 408 block B16 null  <||@
  Comment 408 326 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 408 328 rsi|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 418 330 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 422 332 rsi|QWORD = MOV [r14|QWORD + 208] size: QWORD  <||@
  Comment 429 334 rcx|DWORD = MOV [rsi|QWORD + 20] size: DWORD  <||@
  Comment 432 336 r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 436 338 r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 446 340 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 450 342 r9|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 453 344 CMPBRANCH (x: rsi|QWORD, y: [r8|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B16 -> B27 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 463 block B18 null  <||@
  Comment 463 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 463 352 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B46 y: 32 size: DWORD inlinedY: null  <||@
  Comment 472 block B19 null  <||@
  Comment 472 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 356 CMPBRANCH (x: rsi|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B19 -> B27 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 481 block B27 null  <||@
  Comment 481 406 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 481 408 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 492 block B28 null  <||@
  Comment 492 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 412 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 497 414 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 502 416 JUMP ~[] destination: B28 -> B34  <||@
  Comment 502 block B34 null  <||@
  Comment 502 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 502 462 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 509 464 MOV (x: [rbx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 514 466 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 519 468 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 522 470 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B88 falseDestination: B34 -> B36 y: -4194304 size: QWORD  <||@
  Comment 535 block B36 null  <||@
  Comment 535 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 480 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B88 falseDestination: B36 -> B38 size: QWORD  <||@
  Comment 544 block B38 null  <||@
  Comment 544 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 490 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 549 492 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 554 494 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 558 496 CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B88 falseDestination: B38 -> B40 y: 2 size: BYTE inlinedY: null  <||@
  Comment 569 block B88 null  <||@
  Comment 569 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 569 474 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 574 978 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 577 980 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 582 982 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 585 984 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD) size: DWORD  <||@
  Comment 588 986 CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 8.044266462171601E-4 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 size: DWORD  <||@
  Comment 597 block B90 null  <||@
  Comment 597 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 1004 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 602 1006 JUMP ~[] destination: B90 -> B91  <||@
  Comment 602 block B91 null  <||@
  Comment 602 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 1010 AMD64HOTSPOTSTRATEGYSWITCH ~r13|QWORD - keyConstants: [meta{HotSpotType<Ljava/util/HashMap;, resolved>}, meta{HotSpotType<Ljava/util/LinkedHashMap;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/replacements/SnippetTemplate$LRUCache;, resolved>}] keyTargets: [B91 -> B97, B91 -> B93, B91 -> B93] defaultTarget: B91 -> B99 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 602 {DataSection[0x0]}  <||@
  Comment 615 {DataSection[0x8]}  <||@
  Comment 628 {DataSection[0x10]}  <||@
  Comment 646 block B97 null  <||@
  Comment 646 1076 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 646 1014 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 650 1016 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 655 1078 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 657 1080 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 659 1082 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 663 1084 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 666 1086 rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD  <||@
  Comment 674 1088 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 679 1090 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 682 1092 MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD  <||@
  Comment 690 1094 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 693 1096 MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD  <||@
  Comment 701 1098 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 708 1100 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 723 POLL_RETURN_FAR  <||@
  Comment 740 block B21 null  <||@
  Comment 740 362 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 364 rcx|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 744 366 r9|DWORD = MOV [rcx|QWORD] size: DWORD  <||@
  Comment 747 368 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 753 370 JUMP ~[] destination: B21 -> B22  <||@
  Comment 758 block B23 loop 0 depth 1 header:586|LoopBegin  <||@
  Comment 758 376 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 378 r14|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 775 380 r14|DWORD = LEA [r14|DWORD + 8] size: DWORD  <||@
  Comment 779 382 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 782 384 r14|QWORD = MOV [rcx|QWORD + r14|QWORD * 1] size: QWORD  <||@
  Comment 786 386 CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B23 -> B25 falseDestination: B23 -> B24 size: QWORD  <||@
  Comment 795 block B24 loop 0 depth 1 header:586|LoopBegin  <||@
  Comment 795 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 795 390 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 798 392 JUMP ~[] destination: B24 -> B22  <||@
  Comment 798 block B22 loop 0 depth 1 header:586|LoopBegin  <||@
  Comment 798 372 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 798 374 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B46 size: DWORD  <||@
  Comment 808 block B25 null  <||@
  Comment 808 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 808 396 MOV (x: [r8|QWORD + 32], y: rsi|QWORD) size: QWORD  <||@
  Comment 812 398 JUMP ~[] destination: B25 -> B27  <||@
  Comment 817 block B48 null  <||@
  Comment 817 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 817 578 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 824 580 CMPBRANCH (x: r10|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.024740441782651668 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B54 size: DWORD  <||@
  Comment 838 block B54 null  <||@
  Comment 838 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 838 648 CMPCONSTBRANCH [rax|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0288769444977142E-5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 838 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 855 block B56 null  <||@
  Comment 855 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 855 678 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 861 680 JUMP ~[] destination: B56 -> B57  <||@
  Comment 866 block B58 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 866 690 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 692 CMPBRANCH (x: r10|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.8819612515065538 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B62 size: DWORD  <||@
  Comment 910 block B62 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 910 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 910 752 SAFEPOINT rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:134]  <||@
  Comment 917 [rbx:0, r8:0, r13:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                   |4         |5          |6             |7            |8  |9  |10  |11  |12        
     locals:  |stack:88|QWORD[.]  |r10|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |r14|DWORD   <||@
  Comment 917 {infopoint: SAFEPOINT}  <||@
  Comment 917 POLL_FAR  <||@
  Comment 919 754 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 922 756 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 925 758 JUMP ~[] destination: B62 -> B57  <||@
  Comment 925 block B57 loop 1 depth 1 header:82|LoopBegin  <||@
  Comment 925 682 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 925 684 rcx|DWORD[_] = MOV [r8|QWORD[.] + 24] size: DWORD state [bci:134]  <||@
  Comment 925 [rbx:0, r8:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                   |4         |5          |6             |7            |8  |9  |10  |11  |12        
     locals:  |stack:88|QWORD[.]  |r10|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |r14|DWORD   <||@
  Comment 925 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 929 686 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 936 688 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.5861486748857938 condition: = trueDestination: B57 -> B65 falseDestination: B57 -> B58 size: DWORD  <||@
  Comment 940 block B65 null  <||@
  Comment 940 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 940 774 stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 945 776 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 950 778 stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 954 780 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 959 782 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 964 784 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 969 786 rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 974 788 rbp|QWORD = MOV [r13|QWORD + 680] size: QWORD  <||@
  Comment 981 790 r13|QWORD = MOV [rbp|QWORD + 64] size: QWORD  <||@
  Comment 985 792 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 988 794 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 991 796 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 996 798 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 999 800 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1006 802 rbx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 1009 804 rax|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 1012 806 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1017 808 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> state [bci:152]  <||@
  Comment 1017 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1017 INLINE_INVOKE  <||@
  Comment 1019 [stack:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:648) [bci: 152, duringCall: true, rethrow: false]
              |0                   |1               |2  |3                   |4               |5               |6                   |7  |8  |9  |10                  |11  |12             
     locals:  |stack:88|QWORD[.]   |stack:44|DWORD  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |-  |-  |stack:136|QWORD[.]  |-   |stack:52|DWORD 
     stack:   |stack:144|QWORD[.]  |                |   |                    |                |                |                    |   |   |   |                    |    |                 <||@
  Comment 1027 810 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1038 block B66 null  <||@
  Comment 1038 812 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 814 r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 1042 816 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1047 818 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 820 JUMP ~[] destination: B66 -> B72  <||@
  Comment 1052 block B72 null  <||@
  Comment 1052 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1052 872 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1059 874 MOV (x: [r8|QWORD[.] + 24], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1063 876 rsi|QWORD[*] = XOR (x: r8|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1069 878 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B83 falseDestination: B72 -> B74 y: -4194304 size: QWORD  <||@
  Comment 1082 block B74 null  <||@
  Comment 1082 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1082 886 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B83 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 1091 block B76 null  <||@
  Comment 1091 892 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1091 894 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1095 896 CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1106 block B83 null  <||@
  Comment 1106 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1106 944 CMPCONSTBRANCH stack:52|DWORD trueDestinationProbability: 0.9999852699864189 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 7 size: DWORD inlinedY: null  <||@
  Comment 1117 block B84 null  <||@
  Comment 1117 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1117 948 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 1122 950 JUMP ~[] destination: B84 -> B86  <||@
  Comment 1122 block B86 null  <||@
  Comment 1122 966 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1122 968 TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.6009546268952672 condition: = trueDestination: B86 -> B88 falseDestination: B86 -> B100 size: QWORD  <||@
  Comment 1131 block B100 null  <||@
  Comment 1131 1120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1131 1122 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1135 1124 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1140 1126 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1145 1128 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 1130 r8|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1154 1132 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9999955633968408 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B119 size: DWORD  <||@
  Comment 1163 block B101 null  <||@
  Comment 1163 1134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1163 1136 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B101 -> B108 falseDestination: B101 -> B103 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1174 block B108 null  <||@
  Comment 1174 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1174 1140 rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD  <||@
  Comment 1178 1192 MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1182 1194 rsi|QWORD[*] = XOR (x: r13|QWORD[.], y: stack:104|QWORD[.]) size: QWORD  <||@
  Comment 1190 1196 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B120 falseDestination: B108 -> B110 y: -4194304 size: QWORD  <||@
  Comment 1203 block B110 null  <||@
  Comment 1203 1204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 1206 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 1208 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B110 -> B120 falseDestination: B110 -> B112 size: QWORD  <||@
  Comment 1217 block B112 null  <||@
  Comment 1217 1216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1217 1218 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1222 1220 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1229 1222 CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B112 -> B120 falseDestination: B112 -> B114 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1240 block B120 null  <||@
  Comment 1240 1284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1240 1280 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1245 1286 rbx|QWORD = MOV [r10|QWORD + 688] size: QWORD  <||@
  Comment 1252 1288 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1256 1290 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1260 1292 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1265 1294 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1268 1296 stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1273 1298 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> state [bci:253]  <||@
  Comment 1273 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1273 INLINE_INVOKE  <||@
  Comment 1275 [stack:8, stack:32, stack:36]at java.util.HashMap.putVal(HashMap.java:663) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:136|QWORD[.]   <||@
  Comment 1283 1300 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 1285 1302 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 1287 1304 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1291 1306 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 1294 1308 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1299 1310 rax|QWORD = MOV [r11|DWORD[_] * 8 + 15904] size: QWORD  <||@
  Comment 1307 1312 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 1312 1314 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1315 1316 MOV (x: [r11|DWORD[_] * 8 + 15904], y: rsi|QWORD) size: QWORD  <||@
  Comment 1323 1318 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 1326 1320 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1330 1322 MOV (x: [rbp|DWORD[_] * 8 + 15904], y: rax|QWORD) size: QWORD  <||@
  Comment 1338 1324 rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 1326 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 1358 POLL_RETURN_FAR  <||@
  Comment 1375 block B29 null  <||@
  Comment 1375 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1375 420 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1380 422 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1385 424 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1390 426 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1392 428 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 1400 block B31 null  <||@
  Comment 1400 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1400 436 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1404 438 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1408 440 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1417 block B33 null  <||@
  Comment 1417 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1417 450 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1421 452 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1426 454 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1430 456 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1434 458 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1439 block B59 null  <||@
  Comment 1439 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1439 696 stack:136|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1444 698 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1449 700 stack:144|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1453 702 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1458 704 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1463 706 rsi|DWORD[_] = MOV [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1470 708 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1477 710 CMPBRANCH (x: r10|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9989928379588182 condition: = trueDestination: B59 -> B86 falseDestination: B59 -> B60 size: QWORD  <||@
  Comment 1493 block B40 null  <||@
  Comment 1493 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1493 506 MEMBAR barriers: 4  <||@
  Comment 1498 508 CMPCONSTBRANCH [rsi|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B88 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1509 block B42 null  <||@
  Comment 1509 516 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1509 518 MOVB [rsi|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1514 520 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1518 522 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 1521 524 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 1530 block B44 null  <||@
  Comment 1530 536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1530 538 r10|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1534 540 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1539 542 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1543 544 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1547 548 JUMP ~[] destination: B44 -> B88  <||@
  Comment 1552 block B67 null  <||@
  Comment 1552 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1552 824 r8|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 826 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 828 rsi|QWORD[.+] = LEA [r8|QWORD[.] + 24] size: QWORD  <||@
  Comment 1565 830 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1567 832 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 1575 block B69 null  <||@
  Comment 1575 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1575 842 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1579 844 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1583 846 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 size: QWORD  <||@
  Comment 1592 block B71 null  <||@
  Comment 1592 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1592 858 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1596 860 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1601 862 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1605 864 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1609 866 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1614 868 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1619 block B78 null  <||@
  Comment 1619 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1619 904 MEMBAR barriers: 4  <||@
  Comment 1624 906 CMPCONSTBRANCH [r8|QWORD[*] + r10|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1640 block B9 null  <||@
  Comment 1640 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 164 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1645 166 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1650 168 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1655 170 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 1655 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 1665 172 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 1665 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1670 [rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 1678 174 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 1678 [rax:0, rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 1678 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1680 176 rsi|DWORD[_] = MOVE stack:124|DWORD[_] moveKind: DWORD  <||@
  Comment 1684 180 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1688 186 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 190 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1698 192 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1703 block B32 null  <||@
  Comment 1703 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1703 444 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1703 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1708 446 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1713 block B103 null  <||@
  Comment 1713 1144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1713 1146 r9|QWORD[.+] = LEA [r13|QWORD[.] + 20] size: QWORD  <||@
  Comment 1717 1148 r9|DWORD[_] = MOV [r9|QWORD[.+]] size: DWORD  <||@
  Comment 1720 1150 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B103 -> B108 falseDestination: B103 -> B105 size: DWORD  <||@
  Comment 1729 block B105 null  <||@
  Comment 1729 1158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1729 1160 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1733 1162 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1737 1164 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 size: QWORD  <||@
  Comment 1746 block B107 null  <||@
  Comment 1746 1176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1746 1178 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1750 1180 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 1755 1182 r9|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 1759 1184 MOV (x: [r15|QWORD + 40], y: r9|QWORD) size: QWORD  <||@
  Comment 1763 1188 JUMP ~[] destination: B107 -> B108  <||@
  Comment 1768 block B114 null  <||@
  Comment 1768 1230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1768 1232 MEMBAR barriers: 4  <||@
  Comment 1773 1234 CMPCONSTBRANCH [rsi|QWORD[*] + r11|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B114 -> B120 falseDestination: B114 -> B116 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1789 block B49 null  <||@
  Comment 1789 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1789 584 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1794 586 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1799 588 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1802 590 rsi|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1809 592 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 1816 594 CMPBRANCH (x: r11|QWORD[.], y: stack:96|QWORD[.]) trueDestinationProbability: 0.9155742003146303 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 1827 block B50 null  <||@
  Comment 1827 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1827 598 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1830 600 JUMP ~[] destination: B50 -> B86  <||@
  Comment 1835 block B1 null  <||@
  Comment 1835 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1835 54 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1840 56 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1845 60 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:20]  <||@
  Comment 1847 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1847 INVOKESPECIAL  <||@
  Comment 1852 [stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1860 62 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23]  <||@
  Comment 1860 [rax:0, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                    |                |                |   |   |   |   |    |    |     <||@
  Comment 1860 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1863 64 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1866 66 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1869 68 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 1873 70 rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1878 72 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1882 74 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1887 76 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1892 78 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1897 80 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1902 82 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1907 84 JUMP ~[] destination: B1 -> B5  <||@
  Comment 1912 block B68 null  <||@
  Comment 1912 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1912 836 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1917 838 JUMP ~[] destination: B68 -> B72  <||@
  Comment 1922 block B70 null  <||@
  Comment 1922 848 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1922 850 r10|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1927 852 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1927 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1932 854 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1937 block B80 null  <||@
  Comment 1937 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1937 914 MOVB [r8|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1942 916 rsi|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1946 918 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 1949 920 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1958 block B82 null  <||@
  Comment 1958 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1958 932 rdx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1962 934 MOV (x: [rdx|QWORD + rsi|QWORD * 1 - 8], y: r8|QWORD[*]) size: QWORD  <||@
  Comment 1967 936 rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1971 938 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1975 940 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1980 block B89 null  <||@
  Comment 1980 988 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1980 990 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1983 994 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:288]  <||@
  Comment 1983 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1983 INVOKESPECIAL  <||@
  Comment 1988 [stack:32, stack:36, stack:56]at java.util.HashMap.putVal(HashMap.java:669) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1996 996 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2001 998 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 1000 JUMP ~[] destination: B89 -> B91  <||@
  Comment 2011 block B43 null  <||@
  Comment 2011 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2011 528 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2011 530 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2011 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2016 534 JUMP ~[] destination: B43 -> B88  <||@
  Comment 2021 block B106 null  <||@
  Comment 2021 1166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2021 1168 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2024 1170 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 2024 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 2029 1174 JUMP ~[] destination: B106 -> B108  <||@
  Comment 2034 block B116 null  <||@
  Comment 2034 1242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2034 1244 MOVB [rsi|QWORD[*] + r11|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 2039 1246 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 2043 1248 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 2046 1250 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 size: QWORD  <||@
  Comment 2055 block B118 null  <||@
  Comment 2055 1262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2055 1264 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 2059 1266 MOV (x: [rbx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 2064 1268 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 2068 1270 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 2072 1274 JUMP ~[] destination: B118 -> B120  <||@
  Comment 2077 block B93 null  <||@
  Comment 2077 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2077 1022 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 2081 1024 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.4908637873754153 condition: = trueDestination: B93 -> B97 falseDestination: B93 -> B95 size: DWORD  <||@
  Comment 2089 block B95 null  <||@
  Comment 2089 1034 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2089 1036 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2094 1038 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 2097 1040 NULLCHECK [rdx|DWORD[_] * 8] state [bci:292]  <||@
  Comment 2097 [rdx:0, rsi:0, stack:32, stack:36, stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2097 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2104 1042 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 2107 1044 rax|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 2117 1046 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 2121 1048 rbx|QWORD = MOV [rbx|QWORD + 872] size: QWORD  <||@
  Comment 2128 1050 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2132 1052 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 0 shift: 3  <||@
  Comment 2136 1054 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1058 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2142 1062 stack:136|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2147 1064 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)> state [bci:15, 295]  <||@
  Comment 2147 {HotSpotMethod<LinkedHashMap.removeEldestEntry(Map$Entry)>}  <||@
  Comment 2147 INLINE_INVOKE  <||@
  Comment 2149 [stack:8, stack:32, stack:36, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2                   |3 
     locals:  |stack:88|QWORD[.]  |-  |stack:136|QWORD[.]  |- 
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2157 1066 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B97 falseDestination: B95 -> B98 size: DWORD  <||@
  Comment 2170 block B51 null  <||@
  Comment 2170 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2170 604 stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2175 606 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2180 608 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:29]  <||@
  Comment 2180 [rcx:0, r11:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 2180 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2183 610 rdx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 2193 612 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 2197 614 rax|QWORD = MOV [rsi|QWORD + 464] size: QWORD  <||@
  Comment 2204 616 r9|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 2208 618 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2211 620 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2214 622 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2217 624 rax|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2220 626 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:91]  <||@
  Comment 2220 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2220 INLINE_INVOKE  <||@
  Comment 2222 [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7                   |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |stack:136|QWORD[.]  |-  |-  |-   |-   |-    <||@
  Comment 2230 628 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: DWORD  <||@
  Comment 2238 block B53 null  <||@
  Comment 2238 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2238 642 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 644 JUMP ~[] destination: B53 -> B86  <||@
  Comment 2248 block B12 null  <||@
  Comment 2248 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2248 228 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2253 230 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2258 232 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2263 234 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 2270 236 rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 2274 238 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 2287 block B14 null  <||@
  Comment 2287 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2287 262 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 2294 264 AMD64PREFETCH ~[rsi|QWORD + 296] instr: 0  <||@
  Comment 2301 266 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2308 268 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}  <||@
  Comment 2308 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}}  <||@
  Comment 2315 270 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 2322 272 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 2330 274 MOV [rsi|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 2338 276 MOV [rsi|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 2346 278 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2346 280 stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2351 282 JUMP ~[] destination: B14 -> B15  <||@
  Comment 2351 block B15 null  <||@
  Comment 2351 284 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2351 286 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2354 290 rdx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2358 292 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2363 294 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2368 296 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2375 298 stack:136|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 300 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:6, 9, 56]  <||@
  Comment 2383 {HotSpotMethod<HashMap$Node.<init>(int, Object, Object, HashMap$Node)>}  <||@
  Comment 2383 INVOKESPECIAL  <||@
  Comment 2388 [stack:8, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.LinkedHashMap$Entry.<init>(LinkedHashMap.java:208) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.LinkedHashMap.newNode(LinkedHashMap.java:281) [bci: 9, duringCall: true, rethrow: false]
              |0                   |1               |2                  |3                   |4             |5 
     locals:  |stack:88|QWORD[.]   |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |Object[null]  |- 
     stack:   |stack:136|QWORD[.]  |                |                   |                    |              |  
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                   |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]   |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:120|QWORD[.]  |stack:48|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2396 302 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2401 304 rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2406 306 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:17, 56]  <||@
  Comment 2407 {HotSpotMethod<LinkedHashMap.linkNodeAtEnd(LinkedHashMap$Entry)>}  <||@
  Comment 2407 INVOKESPECIAL  <||@
  Comment 2412 [stack:8, stack:24, stack:32, stack:36, stack:56]at java.util.LinkedHashMap.newNode(LinkedHashMap.java:283) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  
     locals:  |-  |-  |-  |-  |-  |stack:136|QWORD[.] 
  at java.util.HashMap.putVal(HashMap.java:637) [bci: 56, duringCall: true, rethrow: false]
              |0                   |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]   |-               |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:120|QWORD[.]  |stack:48|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2420 308 rax|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2425 310 r11|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 2430 312 r13|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2435 314 r14|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2440 316 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2445 318 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 2449 320 rdx|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 2454 322 rdi|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 2458 324 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2463 block B81 null  <||@
  Comment 2463 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2463 924 rsi|QWORD = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 2466 926 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2466 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2471 928 JUMP ~[] destination: B81 -> B83  <||@
  Comment 2476 block B60 null  <||@
  Comment 2476 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2476 716 rcx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2481 718 rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:134]  <||@
  Comment 2481 [rcx:0, r8:0, r10:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7            |8  |9  |10  |11  |12             
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |stack:52|DWORD   <||@
  Comment 2481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2484 720 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 2494 722 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18588799 encoding: base: 139647623626752 shift: 0  <||@
  Comment 2498 724 rbx|QWORD = MOV [rdx|QWORD + 464] size: QWORD  <||@
  Comment 2505 726 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 2509 728 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2512 730 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2515 732 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:203]  <||@
  Comment 2515 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2515 INLINE_INVOKE  <||@
  Comment 2517 [stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8  |9  |10                  |11  |12             
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |-  |-  |stack:136|QWORD[.]  |-   |stack:52|DWORD   <||@
  Comment 2525 734 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD  <||@
  Comment 2533 block B63 null  <||@
  Comment 2533 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2533 762 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2538 764 JUMP ~[] destination: B63 -> B86  <||@
  Comment 2543 block B117 null  <||@
  Comment 2543 1252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2543 1254 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2543 1256 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2543 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2548 1260 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2553 block B13 null  <||@
  Comment 2553 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2553 242 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2558 244 stack:76|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2563 246 rbp|DWORD[_] = MOVE stack:112|DWORD[_] moveKind: DWORD  <||@
  Comment 2567 248 r11|DWORD[_] = MOVE stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 2572 250 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}  <||@
  Comment 2572 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}}  <||@
  Comment 2582 252 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:29]  <||@
  Comment 2582 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2587 [stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 2595 254 NULLCHECK [rax|QWORD[.]] state [bci:29]  <||@
  Comment 2595 [rax:0, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 2595 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2597 256 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2600 258 JUMP ~[] destination: B13 -> B15  <||@
  Comment 2605 block B55 null  <||@
  Comment 2605 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2605 652 stack:136|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2610 654 stack:40|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2615 656 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2620 658 rsi|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2625 660 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2630 662 rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2635 664 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2640 666 r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2645 668 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2650 670 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:123]  <||@
  Comment 2651 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 2651 INVOKESPECIAL  <||@
  Comment 2656 [stack:20, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:644) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2664 672 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 674 JUMP ~[] destination: B55 -> B86  <||@
  Comment 2672 block B85 null  <||@
  Comment 2672 952 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2672 954 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2677 956 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2682 958 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2686 960 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:169]  <||@
  Comment 2687 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 2687 INVOKESPECIAL  <||@
  Comment 2692 [stack:8, stack:20, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:650) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                   |4               |5               |6  |7  |8  |9  |10                  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |stack:136|QWORD[.]  |-   |-    <||@
  Comment 2700 962 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2705 964 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2710 block B119 null  <||@
  Comment 2710 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2710 1278 NULLCHECK [r8|DWORD[_] * 8] state [bci:222]  <||@
  Comment 2710 [r8:0, r13:0, stack:32, stack:36, stack:40, stack:56]at java.util.HashMap.putVal(HashMap.java:659) [bci: 222, duringCall: false, rethrow: false]
              |0                  |1  |2  |3                   |4               |5               |6  |7  |8  |9  |10            |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |r13|QWORD[.]  |-   |-    <||@
  Comment 2710 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2718 1282 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2723 block B46 null  <||@
  Comment 2723 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2723 552 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2728 558 MOV [r15|QWORD + 1156] y: -90923 size: DWORD  <||@
  Comment 2739 560 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2750 562 DEOPT info [bci:59]  <||@
  Comment 2750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2755 [rax:0, stack:24, stack:56]at java.util.HashMap.putVal(HashMap.java:637) [bci: 59, duringCall: false, rethrow: false]
              |0                   |1          |2             |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]   |-          |-             |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:120|QWORD[.]  |r11|DWORD  |rax|QWORD[.]  |   |   |                |   |   |   |   |    |    |     <||@
  Comment 2763 block B121 null  <||@
  Comment 2763 1328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2763 1330 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2770 1332 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2775 1334 r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5]  <||@
  Comment 2781 1336 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2781 block B122 null  <||@
  Comment 2781 1338 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2781 1340 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2788 1342 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2795 1344 DEOPT info [bci:29]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2800 [stack:24, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8          |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-    <||@
  Comment 2808 block B98 null  <||@
  Comment 2808 1102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2808 1104 rdx|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2813 1106 MOV [r15|QWORD + 1156] y: -170003 size: DWORD  <||@
  Comment 2824 1108 MOV [r15|QWORD + 1168] y: 10260 size: QWORD  <||@
  Comment 2835 1110 DEOPT info [bci:18, 295]  <||@
  Comment 2835 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2840 [rdx:0, stack:56]at java.util.LinkedHashMap.afterNodeInsertion(LinkedHashMap.java:324) [bci: 18, duringCall: false, rethrow: false]
              |0                  |1  |2             |3 
     locals:  |stack:88|QWORD[.]  |-  |rdx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |              |  
  at java.util.HashMap.putVal(HashMap.java:670) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2848 block B47 null  <||@
  Comment 2848 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2848 566 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2855 568 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2860 570 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2865 572 r10|DWORD = MOVE input: int[-55347|0xffffffffffff27cd]  <||@
  Comment 2871 574 JUMP ~[] destination: B47 -> B122  <||@
  Comment 2873 block B52 null  <||@
  Comment 2873 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2873 632 r8|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2878 634 MOV [r15|QWORD + 1156] y: -162067 size: DWORD  <||@
  Comment 2889 636 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2900 638 DEOPT info [bci:94]  <||@
  Comment 2900 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2905 [r8:0, stack:24, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:641) [bci: 94, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7            |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |-  
     stack:   |int[0|0x0]         |                |                   |                    |                |                |                    |             |   |   |    |    |     <||@
  Comment 2913 block B3 null  <||@
  Comment 2913 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2913 94 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2916 96 MOV [r15|QWORD + 1156] y: -138259 size: DWORD  <||@
  Comment 2927 98 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2938 100 DEOPT info [bci:0]  <||@
  Comment 2938 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2943 [rcx:0, rsi:0, r8:0]at java.util.HashMap.putVal(HashMap.java:634) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6  |7  |8  |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2951 block B61 null  <||@
  Comment 2951 736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2951 738 r13|QWORD[.] = MOVE stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2956 740 r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2961 742 rbx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2966 744 MOV [r15|QWORD + 1156] y: -166675 size: DWORD  <||@
  Comment 2977 746 MOV [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2988 748 DEOPT info [bci:206]  <||@
  Comment 2988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2993 [rbx:0, r13:0, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:654) [bci: 206, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8  |9  |10            |11  |12        
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |-  |-  |r13|QWORD[.]  |-   |r14|DWORD 
     stack:   |int[0|0x0]         |                |                   |                    |                |                |              |   |   |   |              |    |            <||@
  Comment 3001 block B99 null  <||@
  Comment 3001 1112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3001 1114 MOV [r15|QWORD + 1156] y: -65075 size: DWORD  <||@
  Comment 3012 1116 MOV [r15|QWORD + 1168] y: 8980 size: QWORD  <||@
  Comment 3023 1118 DEOPT info [bci:292]  <||@
  Comment 3023 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3028 [stack:56]at java.util.HashMap.putVal(HashMap.java:670) [bci: 292, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |-  |-  |-  |-  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 3044 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 3069 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 3089 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 3117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3122 [rbx:0, r8:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                   |4         |5          |6             |7            |8  |9  |10  |11  |12        
     locals:  |stack:88|QWORD[.]  |r10|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |r9|DWORD  |rdi|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |r14|DWORD   <||@
  Comment 3152 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3157 [rax:0, rbx:0, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |rbx|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 3187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3192 [rax:0, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:635) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |Object[null]       |                |                   |                    |                |                |   |   |   |   |    |    |     <||@
  Comment 3222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3227 [rcx:0, r11:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 3257 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3262 [rcx:0, r8:0, r10:0, stack:8, stack:20, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:647) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2             |3                   |4               |5               |6                   |7            |8  |9  |10  |11  |12             
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |rcx|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |r8|QWORD[.]  |-  |-  |-   |-   |stack:52|DWORD   <||@
  Comment 3292 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3297 [rax:0, stack:24, stack:32, stack:36, stack:40, stack:48, stack:56]at java.util.HashMap.putVal(HashMap.java:636) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                   |4               |5               |6                   |7  |8               |9  |10  |11  |12 
     locals:  |stack:88|QWORD[.]  |stack:44|DWORD  |stack:96|QWORD[.]  |stack:104|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:120|QWORD[.]  |-  |stack:52|DWORD  |-  |-   |-   |-    <||@
  Comment 3305 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3305 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3311 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 3311 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
