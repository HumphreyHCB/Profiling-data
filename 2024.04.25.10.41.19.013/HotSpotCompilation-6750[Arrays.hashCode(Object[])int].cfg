begin_compilation
  name " HotSpotCompilation-6750[java.util.Arrays.hashCode(Object[])]"
  method "HotSpotCompilation-6750[java.util.Arrays.hashCode(Object[])]"
  date 1714038139130
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a225 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a225  <|@  <|@
f <@~|@floating>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 v240 v241 v242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
lastLocationAccess: - 
=== Succesors ===
next: a226 
=== Usages ===
v238 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v242 lastLocationAccess: - #next: a226  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
lastLocationAccess: - 
=== Succesors ===
next: a227 
=== Usages ===
v237 
=== Predecessor ===
a225 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v241 lastLocationAccess: - #next: a227  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a227 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
lastLocationAccess: - 
=== Succesors ===
next: a228 
=== Usages ===
v235 
=== Predecessor ===
a226 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 lastLocationAccess: - #next: a228  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
=== Succesors ===
next: j221 
=== Usages ===
v236 
=== Predecessor ===
a227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - #next: j221  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a225 
=== Succesors ===
=== Usages ===
v52 j221 v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
j215 j219 
=== Predecessor ===
a228 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 25
stableDimension: 0
stamp: i32
stampKind: i32
value: int[25|0x19]
=== Inputs ===
=== Succesors ===
=== Usages ===
j215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j221 
y: i214 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j221 y: i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
value: j215 
stateAfter: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
j221 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - value: j215 stateAfter: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a226 
=== Succesors ===
=== Usages ===
v52 v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a226  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j221 
y: i218 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j221 y: i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
lastLocationAccess: - 
value: j219 
stateAfter: - 
=== Succesors ===
next: i229 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 lastLocationAccess: - value: j219 stateAfter: - #next: i229  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v244 v247 ?14 ?179 ?180 v243 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v231 i229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i229 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-25355|0xffffffffffff9cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v243 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
?14 v15 ?179 v127 ?180 v105 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v243 lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a227 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a227  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a228 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v235 v236 v237 v238 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
i229 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v235 v236 v237 v238 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?179 v105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i229 
y: i8 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i229 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4596) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 i32 i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.3293060330341624
stamp: void
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v55 #falseSuccessor: v56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v55 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a230 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a230  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a230 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
a114 v250 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a230 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-29707|0xffffffffffff8bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v250 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
v208 
=== Predecessor ===
a230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v250 lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v231 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v208 
index: - 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v208 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: j124 
=== Usages ===
v246 v125 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: j124  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v121 
index: - 
=== Succesors ===
=== Usages ===
j124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j124 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
lastLocationAccess: - 
=== Succesors ===
next: i62 
=== Usages ===
v125 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v246 lastLocationAccess: - #next: i62  <|@  <|@
f <@~|@floating>@ <|@
tid a114 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a230 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a230  <|@  <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j124 
metaspaceMethod: v121 
arguments: a114 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j124 metaspaceMethod: v121 arguments: a114  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
?179 i64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i81 - - a1 i229 i8 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i81 - - a1 i229 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v125 
stateDuring: ?179 
=== Succesors ===
next: v10 
=== Usages ===
i64 
=== Predecessor ===
j124 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v125 stateDuring: ?179 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i62 
y: i81 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i62 y: i81  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i6 i32 
=== Succesors ===
=== Usages ===
?14 v15 v247 ?180 i32 v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i6 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i64 i31 
=== Succesors ===
=== Usages ===
?14 i75 i37 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i64 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v10 
=== Succesors ===
next: v21 
=== Usages ===
i77 i76 v17 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v10 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i229 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i77 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.5090070147433787
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v20 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: iload
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4598
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i76 a1 i229 i77 
=== Succesors ===
=== Usages ===
v252 v233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i76 a1 i229 i77  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i229 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i77 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v169 #falseSuccessor: v171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a232 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a232  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: i77 
=== Succesors ===
=== Usages ===
a232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a232 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
a135 v251 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a232 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-35083|0xffffffffffff76f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: v141 
=== Usages ===
v211 
=== Predecessor ===
a232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v251 lastLocationAccess: - #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v233 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v211 
index: - 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: j143 
=== Usages ===
v249 v144 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: j143  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v141 
index: - 
=== Succesors ===
=== Usages ===
j143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
lastLocationAccess: - 
=== Succesors ===
next: i28 
=== Usages ===
v144 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v249 lastLocationAccess: - #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a232 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a232  <|@  <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j143 
metaspaceMethod: v141 
arguments: a135 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j143 metaspaceMethod: v141 arguments: a135  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i76 
y: i35 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i76 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32
=== Inputs ===
x: i36 
y: i76 
=== Succesors ===
=== Usages ===
?180 i31 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i36 y: i76  <|@  <|@
tid ?180 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i37 - - a1 i229 i77 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i37 - - a1 i229 i77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v144 
stateDuring: ?180 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
j143 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v144 stateDuring: ?180 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i28 
y: i37 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 48]
stamp: i32
=== Inputs ===
x: i77 
y: i6 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i77 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v70 
values: i76 i6 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v70 values: i76 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v72 
=== Succesors ===
next: v34 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v72 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i75 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 128
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a225 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a225  <|@  <|@
f <@~|@floating>@ <|@
tid a82 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 v240 v241 v242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result [v1|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
lastLocationAccess: - 
=== Succesors ===
next: a226 
=== Usages ===
v238 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v242 lastLocationAccess: - #next: a226  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result [v1|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
lastLocationAccess: - 
=== Succesors ===
next: a227 
=== Usages ===
v237 
=== Predecessor ===
a225 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v241 lastLocationAccess: - #next: a227  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [v1|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a227 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
lastLocationAccess: - 
=== Succesors ===
next: a228 
=== Usages ===
v235 
=== Predecessor ===
a226 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 lastLocationAccess: - #next: a228  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result [v1|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a228 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
=== Succesors ===
next: j221 
=== Usages ===
v236 
=== Predecessor ===
a227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - #next: j221  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result [v2|DWORD[_] * 8 + 54016] <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a225 
=== Succesors ===
=== Usages ===
v52 j221 v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j221 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
j215 j219 
=== Predecessor ===
a228 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result int[25|0x19] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 25
stableDimension: 0
stamp: i32
stampKind: i32
value: int[25|0x19]
=== Inputs ===
=== Succesors ===
=== Usages ===
j215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j221 
y: i214 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j221 y: i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
value: j215 
stateAfter: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
j221 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - value: j215 stateAfter: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
result [v3|DWORD[_] * 8 + 54016] <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a226 
=== Succesors ===
=== Usages ===
v52 v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a226  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j221 
y: i218 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j221 y: i218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
lastLocationAccess: - 
value: j219 
stateAfter: - 
=== Succesors ===
next: i229 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 lastLocationAccess: - value: j219 stateAfter: - #next: i229  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v244 v247 ?14 ?179 ?180 v243 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v231 i229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i229 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-25355|0xffffffffffff9cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v243 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
?14 v15 ?179 v127 ?180 v105 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v243 lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
result [v4|DWORD[_] * 8 + 54016] <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a227 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a227  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
result [v5|DWORD[_] * 8 + 54016] <|@
d <@d|@=== Debug Properties ===
displacement: 54016
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a228 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v235 v236 v237 v238 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
i229 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v235 v236 v237 v238 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?179 v105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i229 
y: i8 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i229 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4596) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 i32 i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.3293060330341624
stamp: void
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v55 #falseSuccessor: v56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v55 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a230 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a230  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a230 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
a114 v250 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
result [v10|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a230 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-29707|0xffffffffffff8bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v250 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
v208 
=== Predecessor ===
a230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v250 lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v231 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v12|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v208 
index: - 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v208 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: j124 
=== Usages ===
v246 v125 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: j124  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result [v14|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v121 
index: - 
=== Succesors ===
=== Usages ===
j124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v121 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j124 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
lastLocationAccess: - 
=== Succesors ===
next: i62 
=== Usages ===
v125 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v246 lastLocationAccess: - #next: i62  <|@  <|@
f <@~|@floating>@ <|@
tid a114 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a230 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a230  <|@  <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j124 
metaspaceMethod: v121 
arguments: a114 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j124 metaspaceMethod: v121 arguments: a114  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
?179 i64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i81 - - a1 i229 i8 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i81 - - a1 i229 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i62 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v125 
stateDuring: ?179 
=== Succesors ===
next: v10 
=== Usages ===
i64 
=== Predecessor ===
j124 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v125 stateDuring: ?179 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i62 
y: i81 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i62 y: i81  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i77 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i6 i32 
=== Succesors ===
=== Usages ===
?14 v15 v247 ?180 i32 v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i6 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i64 i31 
=== Succesors ===
=== Usages ===
?14 i75 i37 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i64 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v10 
=== Succesors ===
next: v21 
=== Usages ===
i77 i76 v17 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v10 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i229 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i77 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.5090070147433787
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v20 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: iload
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4598
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i76 a1 i229 i77 
=== Succesors ===
=== Usages ===
v252 v233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i76 a1 i229 i77  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i229 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i77 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v169 #falseSuccessor: v171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a232 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a232  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result [v0|QWORD[.] + v19|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: i77 
=== Succesors ===
=== Usages ===
a232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a232 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
a135 v251 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
result [v21|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a232 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-35083|0xffffffffffff76f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: v141 
=== Usages ===
v211 
=== Predecessor ===
a232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v251 lastLocationAccess: - #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v233 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [v23|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v211 
index: - 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: j143 
=== Usages ===
v249 v144 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: j143  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [v25|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v141 
index: - 
=== Succesors ===
=== Usages ===
j143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v141 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j143 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
lastLocationAccess: - 
=== Succesors ===
next: i28 
=== Usages ===
v144 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v249 lastLocationAccess: - #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a232 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a232  <|@  <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j143 
metaspaceMethod: v141 
arguments: a135 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j143 metaspaceMethod: v141 arguments: a135  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i76 
y: i35 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i76 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32
=== Inputs ===
x: i36 
y: i76 
=== Succesors ===
=== Usages ===
?180 i31 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i36 y: i76  <|@  <|@
tid ?180 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i37 - - a1 i229 i77 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i37 - - a1 i229 i77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v144 
stateDuring: ?180 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
j143 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v144 stateDuring: ?180 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i28 
y: i37 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 48]
stamp: i32
=== Inputs ===
x: i77 
y: i6 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i77 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v70 
values: i76 i6 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v70 values: i76 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v72 
=== Succesors ===
next: v34 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v72 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i75 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 128
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   64  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  106  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   64  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  106  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v15|q [0, 1[[60, 64[[102, 106[[124, 126[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v14|q [0, 1[[58, 63[[100, 105[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[62, 63[[104, 105[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v16|q [0, 6[[56, 63[[98, 105[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 114[[128, 135[6 MustHaveRegister 28 MustHaveRegister 42 MustHaveRegister 80 MustHaveRegister 113 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [8, 16[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 36[10 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 34[12 MustHaveRegister 26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [14, 30[14 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [16, 32[16 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v6|q [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [28, 114[[128, 135[28 MustHaveRegister 38 MustHaveRegister 72 MustHaveRegister 76 MustHaveRegister 113 LiveAtLoopEnd  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [42, 54[42 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|d [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [50, 58[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [52, 60[52 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v10|d [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v32|d [70, 110[[128, 135[72 ShouldHaveRegister 76 ShouldHaveRegister 80 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v31|d [70, 97[[114, 117[[128, 135[94 MustHaveRegister 96 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [80, 92[80 MustHaveRegister 82 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [82, 86[82 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [88, 100[88 MustHaveRegister 90 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [90, 102[90 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v21|d [92, 98[92 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v20|d [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v28|d [96, 108[96 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d rax|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v30|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v19|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v20|d [122, 124[124 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v15|q [0, 1[[60, 64[[102, 106[[124, 126[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v14|q [0, 1[[58, 63[[100, 105[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[62, 63[[104, 105[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v16|q [0, 6[[56, 63[[98, 105[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 55[6 MustHaveRegister 28 MustHaveRegister 42 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rbx|q]" v1|q -1 [8, 16[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 36[10 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 34[12 MustHaveRegister 26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [14, 30[14 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [16, 32[16 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v6|q [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [28, 40[28 MustHaveRegister 38 MustHaveRegister  "SpillInDominator"
  v10|d DWORD "[rbx|d]" v10|d -1 [42, 54[42 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|d [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r10|q]" v13|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [50, 58[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [52, 60[52 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v10|d [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d -1 [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v32|d [70, 103[72 ShouldHaveRegister 76 ShouldHaveRegister 80 MustHaveRegister  "OneSpillStore"
  v20|d DWORD "[r11|d]" v20|d v31|d [70, 97[[114, 117[[128, 135[94 MustHaveRegister 96 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rbx|d]" v21|d -1 [80, 92[80 MustHaveRegister 82 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [82, 86[82 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q v22|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r9|q]" v24|q -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q -1 [88, 100[88 MustHaveRegister 90 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q -1 [90, 102[90 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v21|d [92, 98[92 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v20|d [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d v28|d [96, 103[96 MustHaveRegister  "OneSpillStore"
  v30|d DWORD "[rax|d]" v30|d rax|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v30|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v19|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d v20|d [122, 124[124 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [55, 61[ "SpillInDominator"
  v35|d DWORD "[vstack:0|d]" v9|d v9|d [40, 61[ "SpillInDominator"
  v36|d DWORD "[vstack:0|d]" v9|d v9|d [61, 70[ "SpillInDominator"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [61, 70[ "SpillInDominator"
  v38|d DWORD "[r8|d]" v9|d v9|d [70, 78[72 MustHaveRegister 76 MustHaveRegister  "SpillInDominator"
  v39|q QWORD "[rsi|q]" v0|q v0|q [70, 97[80 MustHaveRegister  "SpillInDominator"
  v40|d DWORD "[vstack:0|d]" v9|d v9|d [78, 103[ "SpillInDominator"
  v41|d DWORD "[vstack:5|d]" v19|d v19|d [103, 110[110 ShouldHaveRegister  "OneSpillStore"
  v42|q QWORD "[vstack:1|q]" v0|q v0|q [97, 103[ "SpillInDominator"
  v43|d DWORD "[vstack:0|d]" v9|d v9|d [103, 114[113 LiveAtLoopEnd  "SpillInDominator"
  v44|d DWORD "[vstack:4|d]" v29|d v29|d [103, 108[108 ShouldHaveRegister  "OneSpillStore"
  v45|q QWORD "[vstack:1|q]" v0|q v0|q [103, 114[113 LiveAtLoopEnd  "SpillInDominator"
  v46|d DWORD "[r10|d]" v19|d v19|d [128, 135[ "OneSpillStore"
  v47|q QWORD "[rsi|q]" v0|q v0|q [128, 135[ "SpillInDominator"
  v48|d DWORD "[r8|d]" v9|d v9|d [128, 135[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = STACKMOVE (input: v35|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   64  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = STACKMOVE (input: v40|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v42|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  106  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v15|q [0, 1[[60, 64[[102, 106[[124, 126[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v14|q [0, 1[[58, 63[[100, 105[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[62, 63[[104, 105[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v16|q [0, 6[[56, 63[[98, 105[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 55[6 MustHaveRegister 28 MustHaveRegister 42 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rbx|q]" v1|q -1 [8, 16[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 36[10 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 34[12 MustHaveRegister 26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [14, 30[14 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [16, 32[16 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v6|q [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [28, 40[28 MustHaveRegister 38 MustHaveRegister  "StoreAtDefinition"
  v10|d DWORD "[rbx|d]" v10|d -1 [42, 54[42 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|d [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r10|q]" v13|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [50, 58[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [52, 60[52 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v10|d [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d -1 [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v32|d [70, 103[72 ShouldHaveRegister 76 ShouldHaveRegister 80 MustHaveRegister  "OneSpillStore"
  v20|d DWORD "[r11|d]" v20|d v31|d [70, 97[[114, 117[[128, 135[94 MustHaveRegister 96 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rbx|d]" v21|d -1 [80, 92[80 MustHaveRegister 82 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [82, 86[82 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q v22|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r9|q]" v24|q -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q -1 [88, 100[88 MustHaveRegister 90 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q -1 [90, 102[90 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v21|d [92, 98[92 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v20|d [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d v28|d [96, 103[96 MustHaveRegister  "OneSpillStore"
  v30|d DWORD "[rax|d]" v30|d rax|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v30|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v19|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d v20|d [122, 124[124 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [55, 61[ "StoreAtDefinition"
  v35|d DWORD "[vstack:0|d]" v9|d v9|d [40, 61[ "StoreAtDefinition"
  v36|d DWORD "[vstack:0|d]" v9|d v9|d [61, 70[ "StoreAtDefinition"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [61, 70[ "StoreAtDefinition"
  v38|d DWORD "[r8|d]" v9|d v9|d [70, 78[72 MustHaveRegister 76 MustHaveRegister  "StoreAtDefinition"
  v39|q QWORD "[rsi|q]" v0|q v0|q [70, 97[80 MustHaveRegister  "StoreAtDefinition"
  v40|d DWORD "[vstack:0|d]" v9|d v9|d [78, 103[ "StoreAtDefinition"
  v41|d DWORD "[vstack:5|d]" v19|d v19|d [103, 110[110 ShouldHaveRegister  "OneSpillStore"
  v42|q QWORD "[vstack:1|q]" v0|q v0|q [97, 103[ "StoreAtDefinition"
  v43|d DWORD "[vstack:0|d]" v9|d v9|d [103, 114[113 LiveAtLoopEnd  "StoreAtDefinition"
  v44|d DWORD "[vstack:4|d]" v29|d v29|d [103, 108[108 ShouldHaveRegister  "OneSpillStore"
  v45|q QWORD "[vstack:1|q]" v0|q v0|q [103, 114[113 LiveAtLoopEnd  "StoreAtDefinition"
  v46|d DWORD "[r10|d]" v19|d v19|d [128, 135[ "OneSpillStore"
  v47|q QWORD "[rsi|q]" v0|q v0|q [128, 135[ "StoreAtDefinition"
  v48|d DWORD "[r8|d]" v9|d v9|d [128, 135[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = STACKMOVE (input: v35|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   64  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[int[1|0x1], v18|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = STACKMOVE (input: v40|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v42|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  106  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v32|DWORD, v31|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v20|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v15|q [0, 1[[60, 64[[102, 106[[124, 126[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v14|q [0, 1[[58, 63[[100, 105[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[62, 63[[104, 105[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v16|q [0, 6[[56, 63[[98, 105[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[62, 63[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 55[6 MustHaveRegister 28 MustHaveRegister 42 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rbx|q]" v1|q -1 [8, 16[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 36[10 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 34[12 MustHaveRegister 26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [14, 30[14 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [16, 32[16 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r9|q]" v7|q -1 [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q v6|q [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [28, 40[28 MustHaveRegister 38 MustHaveRegister  "StoreAtDefinition"
  v10|d DWORD "[rbx|d]" v10|d -1 [42, 54[42 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|d [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r10|q]" v13|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [50, 58[50 MustHaveRegister 52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [52, 60[52 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v10|d [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d -1 [66, 69[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v32|d [70, 103[72 ShouldHaveRegister 76 ShouldHaveRegister 80 MustHaveRegister  "OneSpillStore"
  v20|d DWORD "[r11|d]" v20|d v31|d [70, 97[[114, 117[[128, 135[94 MustHaveRegister 96 ShouldHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rbx|d]" v21|d -1 [80, 92[80 MustHaveRegister 82 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [82, 86[82 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q v22|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r9|q]" v24|q -1 [84, 87[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q -1 [88, 100[88 MustHaveRegister 90 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q -1 [90, 102[90 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v21|d [92, 98[92 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v20|d [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d v28|d [96, 103[96 MustHaveRegister  "OneSpillStore"
  v30|d DWORD "[rax|d]" v30|d rax|d [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v30|d [108, 113[108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v19|d [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d v20|d [122, 124[124 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [55, 61[ "StoreAtDefinition"
  v35|d DWORD "[vstack:0|d]" v9|d v9|d [40, 61[ "StoreAtDefinition"
  v36|d DWORD "[vstack:0|d]" v9|d v9|d [61, 70[ "StoreAtDefinition"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [61, 70[ "StoreAtDefinition"
  v38|d DWORD "[r8|d]" v9|d v9|d [70, 78[72 MustHaveRegister 76 MustHaveRegister  "StoreAtDefinition"
  v39|q QWORD "[rsi|q]" v0|q v0|q [70, 97[80 MustHaveRegister  "StoreAtDefinition"
  v40|d DWORD "[vstack:0|d]" v9|d v9|d [78, 103[ "StoreAtDefinition"
  v41|d DWORD "[vstack:5|d]" v19|d v19|d [103, 110[110 ShouldHaveRegister  "OneSpillStore"
  v42|q QWORD "[vstack:1|q]" v0|q v0|q [97, 103[ "StoreAtDefinition"
  v43|d DWORD "[vstack:0|d]" v9|d v9|d [103, 114[113 LiveAtLoopEnd  "StoreAtDefinition"
  v44|d DWORD "[vstack:4|d]" v29|d v29|d [103, 108[108 ShouldHaveRegister  "OneSpillStore"
  v45|q QWORD "[vstack:1|q]" v0|q v0|q [103, 114[113 LiveAtLoopEnd  "StoreAtDefinition"
  v46|d DWORD "[r10|d]" v19|d v19|d [128, 135[ "OneSpillStore"
  v47|q QWORD "[rsi|q]" v0|q v0|q [128, 135[ "StoreAtDefinition"
  v48|d DWORD "[r8|d]" v9|d v9|d [128, 135[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = STACKMOVE (input: v35|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   64  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [v19|DWORD, v20|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = STACKMOVE (input: v40|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = STACKMOVE (input: v42|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  106  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|QWORD = MOV [v2|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction v7|QWORD = LEA [v6|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 54016], y: v7|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD = INC v6|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 54016], y: v8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|DWORD, y: v9|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   42  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v13|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v12|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: v13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction v14|QWORD = MOV [v12|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction v15|QWORD = MOV [v14|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v9|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   64  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v18|DWORD = LEA [v17|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   80  <|@ instruction v21|DWORD[_] = MOV [v0|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction v24|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction v23|QWORD = UNCOMPRESSPOINTER (input: v22|DWORD, ~baseRegister: v24|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction v25|QWORD = MOV [v23|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction v26|QWORD = MOV [v25|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v28|DWORD = SHL v20|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v29|DWORD 
locals: - - v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  106  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v32|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v20|DWORD v0|QWORD[.] v9|DWORD v19|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   66  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] vstack:0|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  108  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction r10|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   52  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   66  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] vstack:0|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   84  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   86  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   90  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   92  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  108  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction r10|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction vstack:0|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] vstack:0|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction vstack:5|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction vstack:4|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction r8|DWORD = MOVE vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [30, 135[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [6, 135[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [120, 124[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [118, 126[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [30, 135[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [6, 135[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:36|d]" vstack:4|d -1 [120, 124[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [118, 126[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   16  <|@ instruction rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = LEA [r8|QWORD + 25] size: QWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rax:0, rbx:0, rsi:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 54016] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 54016] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 54016] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 54016] <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604216293744690388
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   56  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   72  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604437934566509982
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] stack:28|DWORD r10|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   98  <|@ instruction r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr  124  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction r10|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608830713782970681
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   78  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599603870028559960
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction MOV [r15|QWORD + 1156] y: -32795 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r11|DWORD rsi|QWORD[.] r8|DWORD r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec289041817f20000000000f855f01000048896c24204889342448bbaddeaddeaddeadde8b4378448b5374448b5b7c8b5b704c8b04c500d300004d8d48194c890cc500d3000049ffc04e8904d500d30000448b460c44894424144585c00f84e20000008b5e108b04dd0800000049ba0000003f027f0000498d0402488b80e00100004c8b504048c1e303488bf3488bd8498bc2ffd00f1f8400000000008d701f448bde41ba01000000e96f000000660f1f840000000000453bc20f868d000000428b5c96108b04dd0800000049b90000003f027f0000498d0401488b80e00100004c8b484048c1e303418bcbc1e105412bcb488bf3488bd8498bc14489542410894c240cffd00f1f8400000000000344240c448b54241041ffc2448bd8448b442414488b3424453bc27f8c418bc3488b6c24204883c428493ba7500400000f873c000000c341bb01000000ebde41c78784040000e57fffff49c7879004000000000000e8000000000f1f84000000000048896c2420e800000000e992fefffff4488d0db0ffffff49898f68040000e964fefffff441c78784040000f59cffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f58bffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f576ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD  <||@
  Comment 31 6 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 35 8 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 35 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 45 10 rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD  <||@
  Comment 48 12 r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD  <||@
  Comment 52 14 r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD  <||@
  Comment 56 16 rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD  <||@
  Comment 59 18 r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD  <||@
  Comment 67 20 r9|QWORD = LEA [r8|QWORD + 25] size: QWORD  <||@
  Comment 71 22 MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD  <||@
  Comment 79 24 r8|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 82 26 MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD  <||@
  Comment 90 28 r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 90 [rax:0, rbx:0, rsi:0, r10:0, r11:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 30 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 99 32 BLACKHOLE [r11|DWORD[_] * 8 + 54016]  <||@
  Comment 99 34 BLACKHOLE [rbx|DWORD[_] * 8 + 54016]  <||@
  Comment 99 36 BLACKHOLE [r10|DWORD[_] * 8 + 54016]  <||@
  Comment 99 38 BLACKHOLE [rax|DWORD[_] * 8 + 54016]  <||@
  Comment 99 40 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 108 block B2 null  <||@
  Comment 108 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 108 50 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 52 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 111 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 54 r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 128 56 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0  <||@
  Comment 132 58 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 139 60 r10|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 143 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3  <||@
  Comment 147 64 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 150 66 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 153 68 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 156 70 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 156 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 156 INLINE_INVOKE  <||@
  Comment 158 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0             |1  |2                  |3               |4           |5 
     locals:  |-             |-  |stack:48|QWORD[.]  |stack:28|DWORD  |int[0|0x0]  |- 
     stack:   |int[31|0x1f]  |   |                   |                |            |    <||@
  Comment 166 72 rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD  <||@
  Comment 169 74 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 172 76 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 178 82 JUMP ~[] destination: B2 -> B3  <||@
  Comment 183 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 183 88 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 90 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD  <||@
  Comment 201 block B5 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 201 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 201 94 rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 206 96 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16]  <||@
  Comment 206 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1          |2             |3               |4          |5 
     locals:  |-  |r11|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r10|DWORD  |-   <||@
  Comment 206 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 213 98 r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 223 100 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0  <||@
  Comment 227 102 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 234 104 r9|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 238 106 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3  <||@
  Comment 242 108 rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD  <||@
  Comment 248 110 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 251 112 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 254 114 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 257 116 rax|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 260 118 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 265 120 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 269 122 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 269 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 269 INLINE_INVOKE  <||@
  Comment 271 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0               |1  |2                  |3               |4               |5 
     locals:  |-               |-  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |- 
     stack:   |stack:36|DWORD  |   |                   |                |                |    <||@
  Comment 279 124 rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 283 126 r10|DWORD = INC stack:32|DWORD size: DWORD  <||@
  Comment 291 128 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 294 134 JUMP ~[] destination: B5 -> B3  <||@
  Comment 294 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 294 84 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 294 78 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 299 80 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 303 86 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD  <||@
  Comment 308 block B7 null  <||@
  Comment 308 140 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 308 142 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 311 144 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 320 POLL_RETURN_FAR  <||@
  Comment 334 block B1 null  <||@
  Comment 334 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 334 44 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 340 46 JUMP ~[] destination: B1 -> B7  <||@
  Comment 342 block B8 null  <||@
  Comment 342 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 342 148 MOV [r15|QWORD + 1156] y: -32795 size: DWORD  <||@
  Comment 353 150 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 364 152 DEOPT info [bci:16]  <||@
  Comment 364 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 369 [rsi:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1          |2             |3         |4          |5 
     locals:  |-  |r11|DWORD  |rsi|QWORD[.]  |r8|DWORD  |r10|DWORD  |-   <||@
  Comment 382 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 407 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 435 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 440 [rax:0, rbx:0, rsi:0, r10:0, r11:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 470 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 475 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 505 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 510 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1          |2             |3               |4          |5 
     locals:  |-  |r11|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r10|DWORD  |-   <||@
  Comment 518 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 518 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 524 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 524 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6750[java.util.Arrays.hashCode(Object[])]"
  method "HotSpotCompilation-6750[java.util.Arrays.hashCode(Object[])]"
  date 1714038139454
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02abd45f00 89842400c0feff4883ec289041817f20000000000f855f01000048896c24204889342448bbd88c5e2e060000008b4378448b5374448b5b7c8b5b704c8b04c500d300004d8d48194c890cc500d3000049ffc04e8904d500d30000448b460c44894424144585c00f84e20000008b5e108b04dd0800000049ba0000003f027f0000498d0402488b80e00100004c8b504048c1e303488bf3488bd8498bc2ffd00f1f8400000000008d701f448bde41ba01000000e96f000000660f1f840000000000453bc20f868d000000428b5c96108b04dd0800000049b90000003f027f0000498d0401488b80e00100004c8b484048c1e303418bcbc1e105412bcb488bf3488bd8498bc14489542410894c240cffd00f1f8400000000000344240c448b54241041ffc2448bd8448b442414488b3424453bc27f8c418bc3488b6c24204883c428493ba7500400000f873c000000c341bb01000000ebde41c78784040000e57fffff49c7879004000000000000e80951e4fe0f1f84000000000048896c2420e89d51e2fee992fefffff4488d0db0ffffff49898f68040000e9645fe4fef441c78784040000f59cffff49c7879004000000000000e8c250e4fe0f1f84000000000041c78784040000f58bffff49c7879004000000000000e89f50e4fe0f1f84000000000041c78784040000f576ffff49c7879004000000000000e87c50e4fe0f1f840000000000e8f515f8fef4e80f4ee4fef4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6f41873c slotKind: QWORD  <||@
  Comment 31 6 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 35 8 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 35 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 45 10 rax|DWORD[_] = MOV [rbx|QWORD[.] + 120] size: DWORD  <||@
  Comment 48 12 r10|DWORD[_] = MOV [rbx|QWORD[.] + 116] size: DWORD  <||@
  Comment 52 14 r11|DWORD[_] = MOV [rbx|QWORD[.] + 124] size: DWORD  <||@
  Comment 56 16 rbx|DWORD[_] = MOV [rbx|QWORD[.] + 112] size: DWORD  <||@
  Comment 59 18 r8|QWORD = MOV [rax|DWORD[_] * 8 + 54016] size: QWORD  <||@
  Comment 67 20 r9|QWORD = LEA [r8|QWORD + 25] size: QWORD  <||@
  Comment 71 22 MOV (x: [rax|DWORD[_] * 8 + 54016], y: r9|QWORD) size: QWORD  <||@
  Comment 79 24 r8|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 82 26 MOV (x: [r10|DWORD[_] * 8 + 54016], y: r8|QWORD) size: QWORD  <||@
  Comment 90 28 r8|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 90 [rax:0, rbx:0, rsi:0, r10:0, r11:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 30 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 99 32 BLACKHOLE [r11|DWORD[_] * 8 + 54016]  <||@
  Comment 99 34 BLACKHOLE [rbx|DWORD[_] * 8 + 54016]  <||@
  Comment 99 36 BLACKHOLE [r10|DWORD[_] * 8 + 54016]  <||@
  Comment 99 38 BLACKHOLE [rax|DWORD[_] * 8 + 54016]  <||@
  Comment 99 40 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.3293060330341624 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 108 block B2 null  <||@
  Comment 108 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 108 50 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 52 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 111 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 54 r10|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 128 56 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0  <||@
  Comment 132 58 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 139 60 r10|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 143 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3  <||@
  Comment 147 64 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 150 66 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 153 68 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 156 70 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 156 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 156 INLINE_INVOKE  <||@
  Comment 158 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0             |1  |2                  |3               |4           |5 
     locals:  |-             |-  |stack:48|QWORD[.]  |stack:28|DWORD  |int[0|0x0]  |- 
     stack:   |int[31|0x1f]  |   |                   |                |            |    <||@
  Comment 166 72 rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD  <||@
  Comment 169 74 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 172 76 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 178 82 JUMP ~[] destination: B2 -> B3  <||@
  Comment 183 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 183 88 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 90 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD  <||@
  Comment 201 block B5 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 201 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 201 94 rbx|DWORD[_] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 206 96 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16]  <||@
  Comment 206 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1          |2             |3               |4          |5 
     locals:  |-  |r11|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r10|DWORD  |-   <||@
  Comment 206 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 213 98 r9|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 223 100 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 139647623626752 shift: 0  <||@
  Comment 227 102 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 234 104 r9|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 238 106 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@44999752 encoding: base: 0 shift: 3  <||@
  Comment 242 108 rcx|DWORD = SHL r11|DWORD y: 5 size: DWORD  <||@
  Comment 248 110 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 251 112 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 254 114 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 257 116 rax|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 260 118 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 265 120 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 269 122 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 269 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 269 INLINE_INVOKE  <||@
  Comment 271 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0               |1  |2                  |3               |4               |5 
     locals:  |-               |-  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |- 
     stack:   |stack:36|DWORD  |   |                   |                |                |    <||@
  Comment 279 124 rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 283 126 r10|DWORD = INC stack:32|DWORD size: DWORD  <||@
  Comment 291 128 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 294 134 JUMP ~[] destination: B5 -> B3  <||@
  Comment 294 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 294 84 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 294 78 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 299 80 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 303 86 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5090070147433787 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD  <||@
  Comment 308 block B7 null  <||@
  Comment 308 140 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 308 142 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 311 144 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 320 POLL_RETURN_FAR  <||@
  Comment 334 block B1 null  <||@
  Comment 334 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 334 44 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 340 46 JUMP ~[] destination: B1 -> B7  <||@
  Comment 342 block B8 null  <||@
  Comment 342 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 342 148 MOV [r15|QWORD + 1156] y: -32795 size: DWORD  <||@
  Comment 353 150 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 364 152 DEOPT info [bci:16]  <||@
  Comment 364 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 369 [rsi:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1          |2             |3         |4          |5 
     locals:  |-  |r11|DWORD  |rsi|QWORD[.]  |r8|DWORD  |r10|DWORD  |-   <||@
  Comment 382 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 407 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 435 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 440 [rax:0, rbx:0, rsi:0, r10:0, r11:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 470 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 475 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 505 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 510 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1          |2             |3               |4          |5 
     locals:  |-  |r11|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r10|DWORD  |-   <||@
  Comment 518 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 518 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 524 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 524 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
