begin_compilation
  name " HotSpotCompilation-2056[java.util.HashMap.clear()]"
  method "HotSpotCompilation-2056[java.util.HashMap.clear()]"
  date 1714038082774
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1194 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1208 
=== Usages ===
j1196 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a1208  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1258 ?17 ?7 v1259 v1260 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1208 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: i1209 
=== Usages ===
a92 v1261 v1262 
=== Predecessor ===
j1194 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - #next: i1209  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 866
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1208 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1209 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-25099|0xffffffffffff9df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 35]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: a1210 
=== Usages ===
i219 v151 v104 j141 i160 i394 v198 v218 
=== Predecessor ===
a1208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1261 lastLocationAccess: - #next: a1210  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1254 v1255 v1256 v1257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1210 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: a1211 
=== Usages ===
v1250 
=== Predecessor ===
i1209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1211 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: a1212 
=== Usages ===
v1251 
=== Predecessor ===
a1210 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - #next: a1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1212 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: a1213 
=== Usages ===
v1252 
=== Predecessor ===
a1211 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - #next: a1213  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1213 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
v1253 
=== Predecessor ===
a1212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1210 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
v49 j1204 v1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1212 
=== Succesors ===
=== Usages ===
v49 v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1213 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v1250 v1251 v1252 v1253 
=== Succesors ===
next: i1214 
=== Usages ===
=== Predecessor ===
a1213 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v1250 v1251 v1252 v1253 #next: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1214 v88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
=== Succesors ===
next: v88 
=== Usages ===
i5 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 v14 i32 i65 i202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 6]
stamp: i32
=== Inputs ===
x: i1214 
y: i4 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1214 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
i1214 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: i5 stateAfter: - #next: i1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1215 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 20]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: v174 
=== Usages ===
v14 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1215 
y: i4 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1215 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
sourceFile: HashMap.java
sourceLine: 867
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x446598ee]: UnreachedCode@5[HotSpotMethod<HashMap.clear()>, 49]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 v104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
value: i13 
stateAfter: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - value: i13 stateAfter: - #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1209 
y: i13 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1209 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.016780530542158334
stamp: void
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1193 
=== Usages ===
v113 
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1209 
y: i159 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1209 y: i159  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1209 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1209  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j149 
y: j141 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j149 y: j141  <|@  <|@
f <@~|@floating>@ <|@
tid a92 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1208 
=== Succesors ===
=== Usages ===
v1280 ?17 v1279 v1278 v1263 v1264 v1265 v1266 v1267 v1268 v1269 v1270 v1271 v1272 v1273 v1274 v1275 v1276 v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1208  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i219 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v1189 #falseSuccessor: v1192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1191 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1191  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1209 
y: i108 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1209 y: i108  <|@  <|@
f <@*|@fixed>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v1190 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v1190 #falseSuccessor: v168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1188  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1187 v1188 
=== Succesors ===
next: v462 
=== Usages ===
v156 v212 v192 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1187 v1188 #next: v462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j417 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j418 
=== Usages ===
v1281 v1283 v1284 
=== Predecessor ===
v462 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j418  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1208 
=== Succesors ===
=== Usages ===
v113 j418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1262 
=== Succesors ===
next: i448 
=== Usages ===
v1282 
=== Predecessor ===
j417 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1262 #next: i448  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: - 
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: v422 
=== Usages ===
v456 
=== Predecessor ===
j418 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v456 v496 v537 v577 v617 v657 v697 v737 v777 v817 v857 v897 v937 v977 v1017 v1057 v1097 v1137 v1178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i448 
y: i455 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i448 y: i455  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j447 j488 j529 j569 j609 j649 j689 j729 j769 j809 j849 j889 j929 j969 j1009 j1049 j1089 j1129 j1170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 v431 v798 v477 v1118 v518 v958 v558 v1078 v598 v838 v638 v1038 v678 v918 v718 v998 v758 v878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v421 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a449 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a449  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j418 
index: - 
=== Succesors ===
=== Usages ===
a449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a449 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
=== Succesors ===
next: v429 
=== Usages ===
a450 v457 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a449 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
a449 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v428 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j451 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j451  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: - 
=== Succesors ===
=== Usages ===
j451 v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: v434 
=== Usages ===
v431 j447 v1285 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j451 
y: j443 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j451 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a450 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a449 
=== Succesors ===
=== Usages ===
j436 v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
j451 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v433 #falseSuccessor: v432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a450 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a450 #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j452 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j452  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: - 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
=== Succesors ===
next: j436 
=== Usages ===
v1285 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a450 
=== Succesors ===
next: v453 
=== Usages ===
v453 
=== Predecessor ===
j452 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a450 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j452 
index: j451 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: j451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
value: j436 
stateAfter: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
j436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - value: j436 stateAfter: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j451 
y: j446 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j451 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
value: j447 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - value: j447 stateAfter: - #next: v438  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v425 v427 v438 v440 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v425 v427 v438 v440 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 v122 v189 v209 v232 v254 v261 v279 v286 v293 v299 v323 v330 v337 v343 v351 v357 v363 v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v53 
address: v1262 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v53 address: v1262 lastLocationAccess: - value: a126 stateAfter: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1209 
y: i38 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1209 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v218 
trueValue: i1209 
falseValue: i108 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v218 trueValue: i1209 falseValue: i108  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v113 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i4 i32 
=== Succesors ===
=== Usages ===
i32 v24 v1263 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v20 values: i4 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.592871482082536
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v19 
=== Succesors ===
next: v29 
=== Usages ===
i65 v26 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v19 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i65 
y: i219 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i65 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v28 #falseSuccessor: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
v156 
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j464 
=== Usages ===
v1286 v1288 v1289 
=== Predecessor ===
v502 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j464  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: i65 
=== Succesors ===
=== Usages ===
v122 j464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: i65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1263 
=== Succesors ===
next: i489 
=== Usages ===
v1287 
=== Predecessor ===
j463 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1263 #next: i489  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
i489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
v496 
=== Predecessor ===
j464 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i489 
y: i455 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i489 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
i489 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v467 #falseSuccessor: v466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a490 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a490  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
a491 v497 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a490 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a490  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
a490 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v474 #falseSuccessor: v470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j492 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j492  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j492 v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v480 
=== Usages ===
v477 j488 v1290 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j492 
y: j443 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j492 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a491 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a490 
=== Succesors ===
=== Usages ===
j482 v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a490  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
j492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v479 #falseSuccessor: v478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a491 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a491 #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j493 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
lastLocationAccess: - 
=== Succesors ===
next: j482 
=== Usages ===
v1290 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 lastLocationAccess: - #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a491 
=== Succesors ===
next: v494 
=== Usages ===
v494 
=== Predecessor ===
j493 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a491 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j493 
index: j492 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
value: j482 
stateAfter: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
j482 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - value: j482 stateAfter: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j492 
y: j446 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j492 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
value: j488 
stateAfter: - 
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - value: j488 stateAfter: - #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v471 v473 v484 v486 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v471 v473 v484 v486 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1186 v28 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1186 v28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v156 
address: v1263 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v156 address: v1263 lastLocationAccess: - value: a126 stateAfter: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i65 
y: i4 
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i65 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i1209 
y: i393 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1209 y: i393  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v177 
values: i65 i390 
=== Succesors ===
=== Usages ===
v178 j1221 v1264 i204 i390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v177 values: i65 i390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.592871482082536
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v193 
=== Succesors ===
next: v181 
=== Usages ===
v179 v183 i184 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v193 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i394 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i394  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.7269292390817075
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v180 #falseSuccessor: v179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
v192 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j504 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j504 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j505 
=== Usages ===
v1291 v1293 v1294 
=== Predecessor ===
v543 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j505  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: i184 
=== Succesors ===
=== Usages ===
v189 j505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: i184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1264 
=== Succesors ===
next: i530 
=== Usages ===
v1292 
=== Predecessor ===
j504 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1264 #next: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j504 
index: - 
=== Succesors ===
=== Usages ===
i530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1291 
lastLocationAccess: - 
=== Succesors ===
next: v509 
=== Usages ===
v537 
=== Predecessor ===
j505 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1291 lastLocationAccess: - #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i530 
y: i455 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i530 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v508 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
i530 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v508 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a531 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a531  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j505 
index: - 
=== Succesors ===
=== Usages ===
a531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a531 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
a532 v538 
=== Predecessor ===
v507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1292 lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a531 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a531  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
a531 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v515 #falseSuccessor: v511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j533 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j533  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j504 
index: - 
=== Succesors ===
=== Usages ===
j533 v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j533 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
v518 j529 v1295 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j533 
y: j443 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j533 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a532 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a531 
=== Succesors ===
=== Usages ===
j523 v526 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a531  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
j533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v520 #falseSuccessor: v519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a532 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a532 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j534 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j534  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j504 
index: - 
=== Succesors ===
=== Usages ===
j534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
lastLocationAccess: - 
=== Succesors ===
next: j523 
=== Usages ===
v1295 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 lastLocationAccess: - #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a532 
=== Succesors ===
next: v535 
=== Usages ===
v535 
=== Predecessor ===
j534 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a532 #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j534 
index: j533 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j534 index: j533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
value: j523 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - value: j523 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j533 
y: j446 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j533 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
value: j529 
stateAfter: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - value: j529 stateAfter: - #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v512 v514 v525 v527 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v512 v514 v525 v527 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1186 v180 
=== Succesors ===
=== Usages ===
v369 v189 v343 v232 v363 v254 v323 v261 v357 v279 v337 v286 v351 v293 v330 v299 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1186 v180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1264 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1264 lastLocationAccess: - value: a126 stateAfter: - #next: v583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j544 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j544 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j545 
=== Usages ===
v1296 v1298 v1299 
=== Predecessor ===
v583 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j545  <|@  <|@
f <@~|@floating>@ <|@
tid j1221 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i184 
=== Succesors ===
=== Usages ===
v1266 v1267 v1268 v1269 v1270 v1271 v1272 v1273 v1274 v1275 v1276 v1277 v1278 v1279 v1280 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i184  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v232 j545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1266 
=== Succesors ===
next: i570 
=== Usages ===
v1297 
=== Predecessor ===
j544 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1266 #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j544 
index: - 
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j544 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
lastLocationAccess: - 
=== Succesors ===
next: v549 
=== Usages ===
v577 
=== Predecessor ===
j545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 lastLocationAccess: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i570 
y: i455 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i570 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
i570 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v548 #falseSuccessor: v547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a571 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a571  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j545 
index: - 
=== Succesors ===
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j545 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a571 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1297 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
a572 v578 
=== Predecessor ===
v547 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1297 lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a571  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
a571 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v555 #falseSuccessor: v551  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j573 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j573  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j544 
index: - 
=== Succesors ===
=== Usages ===
j573 v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j544 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j573 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
=== Succesors ===
next: v561 
=== Usages ===
v558 j569 v1300 
=== Predecessor ===
v551 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j573 
y: j443 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j573 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a572 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
j563 v566 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a571  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
j573 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v560 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a572 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a572 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j574 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j544 
index: - 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j544 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: j563 
=== Usages ===
v1300 
=== Predecessor ===
v559 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: j563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a572 
=== Succesors ===
next: v575 
=== Usages ===
v575 
=== Predecessor ===
j574 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a572 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: j573 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: j573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
value: j563 
stateAfter: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
j563 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - value: j563 stateAfter: - #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j573 
y: j446 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j573 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
value: j569 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - value: j569 stateAfter: - #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v552 v554 v565 v567 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v552 v554 v565 v567 #next: v232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1266 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1266 lastLocationAccess: - value: a126 stateAfter: - #next: v623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j584 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j584 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j585 
=== Usages ===
v1301 v1303 v1304 
=== Predecessor ===
v623 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j585  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v254 j585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1267 
=== Succesors ===
next: i610 
=== Usages ===
v1302 
=== Predecessor ===
j584 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1267 #next: i610  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i610 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
lastLocationAccess: - 
=== Succesors ===
next: v589 
=== Usages ===
v617 
=== Predecessor ===
j585 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 lastLocationAccess: - #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i610 
y: i455 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i610 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v617 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
i610 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v617 #trueSuccessor: v588 #falseSuccessor: v587  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a611 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a611  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j585 
index: - 
=== Succesors ===
=== Usages ===
a611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
lastLocationAccess: - 
=== Succesors ===
next: v596 
=== Usages ===
a612 v618 
=== Predecessor ===
v587 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1302 lastLocationAccess: - #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
a611 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v595 #falseSuccessor: v591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j613 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j613  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
j613 v616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j613 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
v598 j609 v1305 
=== Predecessor ===
v591 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j613 
y: j443 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j613 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a612 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
j603 v606 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
j613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v600 #falseSuccessor: v599  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a612 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a612 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j614 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j614  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j614 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1304 
lastLocationAccess: - 
=== Succesors ===
next: j603 
=== Usages ===
v1305 
=== Predecessor ===
v599 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1304 lastLocationAccess: - #next: j603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a612 
=== Succesors ===
next: v615 
=== Usages ===
v615 
=== Predecessor ===
j614 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a612 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j614 
index: j613 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
value: j603 
stateAfter: - 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
j603 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - value: j603 stateAfter: - #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid j609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j613 
y: j446 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j613 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
value: j609 
stateAfter: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - value: j609 stateAfter: - #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v592 v594 v605 v607 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v592 v594 v605 v607 #next: v254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1267 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1267 lastLocationAccess: - value: a126 stateAfter: - #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j624 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j624 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j625 
=== Usages ===
v1306 v1308 v1309 
=== Predecessor ===
v663 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j625  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v261 j625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1268 
=== Succesors ===
next: i650 
=== Usages ===
v1307 
=== Predecessor ===
j624 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1268 #next: i650  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j624 
index: - 
=== Succesors ===
=== Usages ===
i650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i650 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1306 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
v657 
=== Predecessor ===
j625 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1306 lastLocationAccess: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i650 
y: i455 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i650 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v657 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v627 
=== Usages ===
=== Predecessor ===
i650 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v657 #trueSuccessor: v628 #falseSuccessor: v627  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a651 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a651  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j625 
index: - 
=== Succesors ===
=== Usages ===
a651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j625 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a651 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1307 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
a652 v658 
=== Predecessor ===
v627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1307 lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a651  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
a651 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v635 #falseSuccessor: v631  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j653 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j624 
index: - 
=== Succesors ===
=== Usages ===
j653 v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
=== Succesors ===
next: v641 
=== Usages ===
v638 j649 v1310 
=== Predecessor ===
v631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j653 
y: j443 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j653 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
j643 v646 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a651  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v638 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
j653 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v638 #trueSuccessor: v640 #falseSuccessor: v639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a652 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a652 #next: v647  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j654 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j654  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j624 
index: - 
=== Succesors ===
=== Usages ===
j654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j654 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
lastLocationAccess: - 
=== Succesors ===
next: j643 
=== Usages ===
v1310 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 lastLocationAccess: - #next: j643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a652 
=== Succesors ===
next: v655 
=== Usages ===
v655 
=== Predecessor ===
j654 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a652 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j654 
index: j653 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j654 index: j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
value: j643 
stateAfter: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
j643 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - value: j643 stateAfter: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j653 
y: j446 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j653 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
value: j649 
stateAfter: - 
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - value: j649 stateAfter: - #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v656 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v634 v645 v647 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v634 v645 v647 #next: v261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1268 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1268 lastLocationAccess: - value: a126 stateAfter: - #next: v703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j664 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j664 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j665 
=== Usages ===
v1311 v1313 v1314 
=== Predecessor ===
v703 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j665  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v279 j665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1269 
=== Succesors ===
next: i690 
=== Usages ===
v1312 
=== Predecessor ===
j664 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1269 #next: i690  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
i690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
lastLocationAccess: - 
=== Succesors ===
next: v669 
=== Usages ===
v697 
=== Predecessor ===
j665 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1311 lastLocationAccess: - #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i690 
y: i455 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i690 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v697 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v667 
=== Usages ===
=== Predecessor ===
i690 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v697 #trueSuccessor: v668 #falseSuccessor: v667  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a691 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a691  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j665 
index: - 
=== Succesors ===
=== Usages ===
a691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j665 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a691 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1312 
lastLocationAccess: - 
=== Succesors ===
next: v676 
=== Usages ===
a692 v698 
=== Predecessor ===
v667 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1312 lastLocationAccess: - #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a691 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a691  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
a691 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v675 #falseSuccessor: v671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j693 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j693  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j693 v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j693 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1313 
lastLocationAccess: - 
=== Succesors ===
next: v681 
=== Usages ===
v678 j689 v1315 
=== Predecessor ===
v671 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1313 lastLocationAccess: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j693 
y: j443 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j693 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a692 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a691 
=== Succesors ===
=== Usages ===
j683 v686 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a691  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
j693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a692 
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a692 #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v686 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j694 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1314 
lastLocationAccess: - 
=== Succesors ===
next: j683 
=== Usages ===
v1315 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1314 lastLocationAccess: - #next: j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a692 
=== Succesors ===
next: v695 
=== Usages ===
v695 
=== Predecessor ===
j694 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a692 #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j694 
index: j693 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j694 index: j693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1315 
lastLocationAccess: - 
value: j683 
stateAfter: - 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
j683 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1315 lastLocationAccess: - value: j683 stateAfter: - #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j693 
y: j446 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j693 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1313 
lastLocationAccess: - 
value: j689 
stateAfter: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1313 lastLocationAccess: - value: j689 stateAfter: - #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v672 v674 v685 v687 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v672 v674 v685 v687 #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1269 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1269 lastLocationAccess: - value: a126 stateAfter: - #next: v743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j704 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j705 
=== Usages ===
v1316 v1318 v1319 
=== Predecessor ===
v743 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j705  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v286 j705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1270 
=== Succesors ===
next: i730 
=== Usages ===
v1317 
=== Predecessor ===
j704 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1270 #next: i730  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1316 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
v737 
=== Predecessor ===
j705 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1316 lastLocationAccess: - #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i730 
y: i455 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i730 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v737 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
i730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v737 #trueSuccessor: v708 #falseSuccessor: v707  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a731 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a731  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j705 
index: - 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1317 
lastLocationAccess: - 
=== Succesors ===
next: v716 
=== Usages ===
a732 v738 
=== Predecessor ===
v707 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1317 lastLocationAccess: - #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a731  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v738 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
a731 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v738 #trueSuccessor: v715 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j733 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j733  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j733 v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j733 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
lastLocationAccess: - 
=== Succesors ===
next: v721 
=== Usages ===
v718 j729 v1320 
=== Predecessor ===
v711 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 lastLocationAccess: - #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j733 
y: j443 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j733 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a732 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
j723 v726 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a731  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
j733 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v720 #falseSuccessor: v719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a732 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a732 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j734 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j734  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j734 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1319 
lastLocationAccess: - 
=== Succesors ===
next: j723 
=== Usages ===
v1320 
=== Predecessor ===
v719 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1319 lastLocationAccess: - #next: j723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a732 
=== Succesors ===
next: v735 
=== Usages ===
v735 
=== Predecessor ===
j734 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a732 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j734 
index: j733 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1320 
lastLocationAccess: - 
value: j723 
stateAfter: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
j723 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1320 lastLocationAccess: - value: j723 stateAfter: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j733 
y: j446 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j733 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
lastLocationAccess: - 
value: j729 
stateAfter: - 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1318 lastLocationAccess: - value: j729 stateAfter: - #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v714 v725 v727 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v714 v725 v727 #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1270 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1270 lastLocationAccess: - value: a126 stateAfter: - #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j744 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j745 
=== Usages ===
v1321 v1323 v1324 
=== Predecessor ===
v783 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v293 j745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1271 
=== Succesors ===
next: i770 
=== Usages ===
v1322 
=== Predecessor ===
j744 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1271 #next: i770  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j744 
index: - 
=== Succesors ===
=== Usages ===
i770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j744 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
v777 
=== Predecessor ===
j745 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1321 lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i770 
y: i455 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i770 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v777 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v747 
=== Usages ===
=== Predecessor ===
i770 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v777 #trueSuccessor: v748 #falseSuccessor: v747  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a771 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a771  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
a771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a771 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1322 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
a772 v778 
=== Predecessor ===
v747 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1322 lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a771 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a771  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
a771 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v755 #falseSuccessor: v751  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j773 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j773  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j744 
index: - 
=== Succesors ===
=== Usages ===
j773 v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j744 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j773 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
lastLocationAccess: - 
=== Succesors ===
next: v761 
=== Usages ===
v758 j769 v1325 
=== Predecessor ===
v751 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1323 lastLocationAccess: - #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j773 
y: j443 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j773 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a772 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a771 
=== Succesors ===
=== Usages ===
j763 v766 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a771  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v759 
=== Usages ===
=== Predecessor ===
j773 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v760 #falseSuccessor: v759  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a772 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a772 #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v766 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j774 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j774  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j744 
index: - 
=== Succesors ===
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j744 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
lastLocationAccess: - 
=== Succesors ===
next: j763 
=== Usages ===
v1325 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 lastLocationAccess: - #next: j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a772 
=== Succesors ===
next: v775 
=== Usages ===
v775 
=== Predecessor ===
j774 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a772 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j774 
index: j773 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1325 
lastLocationAccess: - 
value: j763 
stateAfter: - 
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
j763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1325 lastLocationAccess: - value: j763 stateAfter: - #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j773 
y: j446 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j773 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
lastLocationAccess: - 
value: j769 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1323 lastLocationAccess: - value: j769 stateAfter: - #next: v765  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v754 v765 v767 
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v754 v765 v767 #next: v293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1271 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1271 lastLocationAccess: - value: a126 stateAfter: - #next: v823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j784 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j785 
=== Usages ===
v1326 v1328 v1329 
=== Predecessor ===
v823 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j785  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v299 j785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1272 
=== Succesors ===
next: i810 
=== Usages ===
v1327 
=== Predecessor ===
j784 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1272 #next: i810  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
i810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1326 
lastLocationAccess: - 
=== Succesors ===
next: v789 
=== Usages ===
v817 
=== Predecessor ===
j785 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1326 lastLocationAccess: - #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i455 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i810 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v788 
falseSuccessor: v787 
=== Usages ===
=== Predecessor ===
i810 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v788 #falseSuccessor: v787  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a811 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a811  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
a811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a811 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
a812 v818 
=== Predecessor ===
v787 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a811 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a811  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v818 
=== Succesors ===
trueSuccessor: v795 
falseSuccessor: v791 
=== Usages ===
=== Predecessor ===
a811 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v818 #trueSuccessor: v795 #falseSuccessor: v791  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v794  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v795 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j813 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j813  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
j813 v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1328 
lastLocationAccess: - 
=== Succesors ===
next: v801 
=== Usages ===
v798 j809 v1330 
=== Predecessor ===
v791 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1328 lastLocationAccess: - #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j813 
y: j443 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j813 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a812 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a811 
=== Succesors ===
=== Usages ===
j803 v806 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a811  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v799 
=== Usages ===
=== Predecessor ===
j813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v800 #falseSuccessor: v799  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a812 
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a812 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j814 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
j814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1329 
lastLocationAccess: - 
=== Succesors ===
next: j803 
=== Usages ===
v1330 
=== Predecessor ===
v799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1329 lastLocationAccess: - #next: j803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a812 
=== Succesors ===
next: v815 
=== Usages ===
v815 
=== Predecessor ===
j814 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a812 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j814 
index: j813 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j814 index: j813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1330 
lastLocationAccess: - 
value: j803 
stateAfter: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
j803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1330 lastLocationAccess: - value: j803 stateAfter: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j813 
y: j446 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j813 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1328 
lastLocationAccess: - 
value: j809 
stateAfter: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1328 lastLocationAccess: - value: j809 stateAfter: - #next: v805  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v792 v794 v805 v807 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v792 v794 v805 v807 #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1272 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1272 lastLocationAccess: - value: a126 stateAfter: - #next: v863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j824 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j824 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j825 
=== Usages ===
v1331 v1333 v1334 
=== Predecessor ===
v863 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j825  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v323 j825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1273 
=== Succesors ===
next: i850 
=== Usages ===
v1332 
=== Predecessor ===
j824 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1273 #next: i850  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j824 
index: - 
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j824 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1331 
lastLocationAccess: - 
=== Succesors ===
next: v829 
=== Usages ===
v857 
=== Predecessor ===
j825 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1331 lastLocationAccess: - #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i850 
y: i455 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i850 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v857 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v827 
=== Usages ===
=== Predecessor ===
i850 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v857 #trueSuccessor: v828 #falseSuccessor: v827  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v828 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a851  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
a851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
a852 v858 
=== Predecessor ===
v827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1332 lastLocationAccess: - #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v835 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
a851 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v835 #falseSuccessor: v831  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v835 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j853 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j853  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j824 
index: - 
=== Succesors ===
=== Usages ===
j853 v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j824 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1333 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
v838 j849 v1335 
=== Predecessor ===
v831 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1333 lastLocationAccess: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j853 
y: j443 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j853 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a852 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
j843 v846 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v840 
falseSuccessor: v839 
=== Usages ===
=== Predecessor ===
j853 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v840 #falseSuccessor: v839  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a852 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a852 #next: v847  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j854 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j854  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j824 
index: - 
=== Succesors ===
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j824 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j854 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1334 
lastLocationAccess: - 
=== Succesors ===
next: j843 
=== Usages ===
v1335 
=== Predecessor ===
v839 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1334 lastLocationAccess: - #next: j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a852 
=== Succesors ===
next: v855 
=== Usages ===
v855 
=== Predecessor ===
j854 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a852 #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j854 
index: j853 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j854 index: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1335 
lastLocationAccess: - 
value: j843 
stateAfter: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
j843 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1335 lastLocationAccess: - value: j843 stateAfter: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j853 
y: j446 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j853 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1333 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1333 lastLocationAccess: - value: j849 stateAfter: - #next: v845  <|@  <|@
f <@*|@fixed>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v832 v834 v845 v847 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v832 v834 v845 v847 #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1273 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1273 lastLocationAccess: - value: a126 stateAfter: - #next: v903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j864 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j865 
=== Usages ===
v1336 v1338 v1339 
=== Predecessor ===
v903 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j865  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v330 j865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1274 
=== Succesors ===
next: i890 
=== Usages ===
v1337 
=== Predecessor ===
j864 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1274 #next: i890  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
i890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i890 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1336 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
v897 
=== Predecessor ===
j865 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1336 lastLocationAccess: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i890 
y: i455 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i890 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v897 
=== Succesors ===
trueSuccessor: v868 
falseSuccessor: v867 
=== Usages ===
=== Predecessor ===
i890 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v897 #trueSuccessor: v868 #falseSuccessor: v867  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v872 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v872  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a891 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a891  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j865 
index: - 
=== Succesors ===
=== Usages ===
a891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1337 
lastLocationAccess: - 
=== Succesors ===
next: v876 
=== Usages ===
a892 v898 
=== Predecessor ===
v867 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1337 lastLocationAccess: - #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v898 
=== Succesors ===
trueSuccessor: v875 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
a891 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v898 #trueSuccessor: v875 #falseSuccessor: v871  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v875 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j893 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j893  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j893 v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j893 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
=== Succesors ===
next: v881 
=== Usages ===
v878 j889 v1340 
=== Predecessor ===
v871 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j443 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j893 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a892 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
j883 v886 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v880 
falseSuccessor: v879 
=== Usages ===
=== Predecessor ===
j893 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v880 #falseSuccessor: v879  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a892 
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a892 #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j894 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j894  <|@  <|@
f <@~|@floating>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j894 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1339 
lastLocationAccess: - 
=== Succesors ===
next: j883 
=== Usages ===
v1340 
=== Predecessor ===
v879 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1339 lastLocationAccess: - #next: j883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a892 
=== Succesors ===
next: v895 
=== Usages ===
v895 
=== Predecessor ===
j894 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a892 #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j894 
index: j893 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j894 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1340 
lastLocationAccess: - 
value: j883 
stateAfter: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
j883 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1340 lastLocationAccess: - value: j883 stateAfter: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j893 
y: j446 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j893 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
value: j889 
stateAfter: - 
=== Succesors ===
next: v885 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - value: j889 stateAfter: - #next: v885  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v896 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v872 v874 v885 v887 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v872 v874 v885 v887 #next: v330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1274 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1274 lastLocationAccess: - value: a126 stateAfter: - #next: v943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j904 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j905 
=== Usages ===
v1341 v1343 v1344 
=== Predecessor ===
v943 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v337 j905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1275 
=== Succesors ===
next: i930 
=== Usages ===
v1342 
=== Predecessor ===
j904 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1275 #next: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
i930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i930 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1341 
lastLocationAccess: - 
=== Succesors ===
next: v909 
=== Usages ===
v937 
=== Predecessor ===
j905 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1341 lastLocationAccess: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i455 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i930 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v908 
falseSuccessor: v907 
=== Usages ===
=== Predecessor ===
i930 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v908 #falseSuccessor: v907  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a931 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a931  <|@  <|@
f <@~|@floating>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
a931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a931 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1342 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
a932 v938 
=== Predecessor ===
v907 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1342 lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a931 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a931  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v938 
=== Succesors ===
trueSuccessor: v915 
falseSuccessor: v911 
=== Usages ===
=== Predecessor ===
a931 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v938 #trueSuccessor: v915 #falseSuccessor: v911  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j933 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j933  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
j933 v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j933 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1343 
lastLocationAccess: - 
=== Succesors ===
next: v921 
=== Usages ===
v918 j929 v1345 
=== Predecessor ===
v911 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1343 lastLocationAccess: - #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j933 
y: j443 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j933 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a932 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a931 
=== Succesors ===
=== Usages ===
j923 v926 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a931  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v918 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v919 
=== Usages ===
=== Predecessor ===
j933 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v918 #trueSuccessor: v920 #falseSuccessor: v919  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a932 
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a932 #next: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j934 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j934  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
j934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j934 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1344 
lastLocationAccess: - 
=== Succesors ===
next: j923 
=== Usages ===
v1345 
=== Predecessor ===
v919 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1344 lastLocationAccess: - #next: j923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a932 
=== Succesors ===
next: v935 
=== Usages ===
v935 
=== Predecessor ===
j934 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a932 #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j934 
index: j933 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j934 index: j933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1345 
lastLocationAccess: - 
value: j923 
stateAfter: - 
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
j923 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1345 lastLocationAccess: - value: j923 stateAfter: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j933 
y: j446 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j933 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1343 
lastLocationAccess: - 
value: j929 
stateAfter: - 
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1343 lastLocationAccess: - value: j929 stateAfter: - #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v912 v914 v925 v927 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v912 v914 v925 v927 #next: v337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1275 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1275 lastLocationAccess: - value: a126 stateAfter: - #next: v983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j944 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j944 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j945 
=== Usages ===
v1346 v1348 v1349 
=== Predecessor ===
v983 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j945  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v343 j945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1276 
=== Succesors ===
next: i970 
=== Usages ===
v1347 
=== Predecessor ===
j944 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1276 #next: i970  <|@  <|@
f <@~|@floating>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j944 
index: - 
=== Succesors ===
=== Usages ===
i970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j944 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i970 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
lastLocationAccess: - 
=== Succesors ===
next: v949 
=== Usages ===
v977 
=== Predecessor ===
j945 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1346 lastLocationAccess: - #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i970 
y: i455 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i970 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v977 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
i970 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v977 #trueSuccessor: v948 #falseSuccessor: v947  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a971 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a971  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j945 
index: - 
=== Succesors ===
=== Usages ===
a971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j945 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a971 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
a972 v978 
=== Predecessor ===
v947 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a971 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a971  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v978 
=== Succesors ===
trueSuccessor: v955 
falseSuccessor: v951 
=== Usages ===
=== Predecessor ===
a971 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v978 #trueSuccessor: v955 #falseSuccessor: v951  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v955 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j973 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j973  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j944 
index: - 
=== Succesors ===
=== Usages ===
j973 v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j944 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j973 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1348 
lastLocationAccess: - 
=== Succesors ===
next: v961 
=== Usages ===
v958 j969 v1350 
=== Predecessor ===
v951 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1348 lastLocationAccess: - #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j973 
y: j443 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j973 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a972 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a971 
=== Succesors ===
=== Usages ===
j963 v966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a971  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v958 
=== Succesors ===
trueSuccessor: v960 
falseSuccessor: v959 
=== Usages ===
=== Predecessor ===
j973 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v958 #trueSuccessor: v960 #falseSuccessor: v959  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a972 
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a972 #next: v967  <|@  <|@
f <@*|@fixed>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v966 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j974 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j974  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j944 
index: - 
=== Succesors ===
=== Usages ===
j974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j944 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j974 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1349 
lastLocationAccess: - 
=== Succesors ===
next: j963 
=== Usages ===
v1350 
=== Predecessor ===
v959 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1349 lastLocationAccess: - #next: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a972 
=== Succesors ===
next: v975 
=== Usages ===
v975 
=== Predecessor ===
j974 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a972 #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j974 
index: j973 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j974 index: j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1350 
lastLocationAccess: - 
value: j963 
stateAfter: - 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
j963 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1350 lastLocationAccess: - value: j963 stateAfter: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j973 
y: j446 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j973 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1348 
lastLocationAccess: - 
value: j969 
stateAfter: - 
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1348 lastLocationAccess: - value: j969 stateAfter: - #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v952 v954 v965 v967 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v952 v954 v965 v967 #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1276 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1276 lastLocationAccess: - value: a126 stateAfter: - #next: v1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j984 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j984 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j985 
=== Usages ===
v1351 v1353 v1354 
=== Predecessor ===
v1023 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j985  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v351 j985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1277 
=== Succesors ===
next: i1010 
=== Usages ===
v1352 
=== Predecessor ===
j984 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1277 #next: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j984 
index: - 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1351 
lastLocationAccess: - 
=== Succesors ===
next: v989 
=== Usages ===
v1017 
=== Predecessor ===
j985 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1351 lastLocationAccess: - #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1010 
y: i455 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1010 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1017 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v987 
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1017 #trueSuccessor: v988 #falseSuccessor: v987  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1011 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j985 
index: - 
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j985 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1352 
lastLocationAccess: - 
=== Succesors ===
next: v996 
=== Usages ===
a1012 v1018 
=== Predecessor ===
v987 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1352 lastLocationAccess: - #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1011 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1018 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
a1011 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1018 #trueSuccessor: v995 #falseSuccessor: v991  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1013 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j984 
index: - 
=== Succesors ===
=== Usages ===
j1013 v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1353 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
v998 j1009 v1355 
=== Predecessor ===
v991 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1353 lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1013 
y: j443 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1013 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1011 
=== Succesors ===
=== Usages ===
j1003 v1006 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v1000 
falseSuccessor: v999 
=== Usages ===
=== Predecessor ===
j1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v1000 #falseSuccessor: v999  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1012 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1012 #next: v1007  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v1006 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1014 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j984 
index: - 
=== Succesors ===
=== Usages ===
j1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1014 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1354 
lastLocationAccess: - 
=== Succesors ===
next: j1003 
=== Usages ===
v1355 
=== Predecessor ===
v999 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1354 lastLocationAccess: - #next: j1003  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1012 
=== Succesors ===
next: v1015 
=== Usages ===
v1015 
=== Predecessor ===
j1014 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1012 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1014 
index: j1013 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1014 index: j1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1355 
lastLocationAccess: - 
value: j1003 
stateAfter: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
j1003 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1355 lastLocationAccess: - value: j1003 stateAfter: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1013 
y: j446 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1013 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1353 
lastLocationAccess: - 
value: j1009 
stateAfter: - 
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1353 lastLocationAccess: - value: j1009 stateAfter: - #next: v1005  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v1016 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v992 v994 v1005 v1007 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v992 v994 v1005 v1007 #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1277 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1277 lastLocationAccess: - value: a126 stateAfter: - #next: v1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1024 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1024 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1025 
=== Usages ===
v1356 v1358 v1359 
=== Predecessor ===
v1063 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v357 j1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1278 
=== Succesors ===
next: i1050 
=== Usages ===
v1357 
=== Predecessor ===
j1024 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1278 #next: i1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
i1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1356 
lastLocationAccess: - 
=== Succesors ===
next: v1029 
=== Usages ===
v1057 
=== Predecessor ===
j1025 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1356 lastLocationAccess: - #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1050 
y: i455 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1050 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1028 
falseSuccessor: v1027 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1028 #falseSuccessor: v1027  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1051 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1025 
index: - 
=== Succesors ===
=== Usages ===
a1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1025 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1051 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1357 
lastLocationAccess: - 
=== Succesors ===
next: v1036 
=== Usages ===
a1052 v1058 
=== Predecessor ===
v1027 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1357 lastLocationAccess: - #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1051 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v1035 
falseSuccessor: v1031 
=== Usages ===
=== Predecessor ===
a1051 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v1035 #falseSuccessor: v1031  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1053 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1053 v1056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1053 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1358 
lastLocationAccess: - 
=== Succesors ===
next: v1041 
=== Usages ===
v1038 j1049 v1360 
=== Predecessor ===
v1031 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1358 lastLocationAccess: - #next: v1041  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1053 
y: j443 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1053 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1052 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1051 
=== Succesors ===
=== Usages ===
j1043 v1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1038 
=== Succesors ===
trueSuccessor: v1040 
falseSuccessor: v1039 
=== Usages ===
=== Predecessor ===
j1053 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1038 #trueSuccessor: v1040 #falseSuccessor: v1039  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1052 
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1052 #next: v1047  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1046 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1054 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1054 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1359 
lastLocationAccess: - 
=== Succesors ===
next: j1043 
=== Usages ===
v1360 
=== Predecessor ===
v1039 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1359 lastLocationAccess: - #next: j1043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1052 
=== Succesors ===
next: v1055 
=== Usages ===
v1055 
=== Predecessor ===
j1054 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1052 #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1054 
index: j1053 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1054 index: j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1360 
lastLocationAccess: - 
value: j1043 
stateAfter: - 
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
j1043 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1360 lastLocationAccess: - value: j1043 stateAfter: - #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid j1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1053 
y: j446 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1053 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1358 
lastLocationAccess: - 
value: j1049 
stateAfter: - 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1358 lastLocationAccess: - value: j1049 stateAfter: - #next: v1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1032 v1034 v1045 v1047 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1032 v1034 v1045 v1047 #next: v357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1278 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1278 lastLocationAccess: - value: a126 stateAfter: - #next: v1103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1064 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1064 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1065 
=== Usages ===
v1361 v1363 v1364 
=== Predecessor ===
v1103 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v363 j1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1279 
=== Succesors ===
next: i1090 
=== Usages ===
v1362 
=== Predecessor ===
j1064 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1279 #next: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
i1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1361 
lastLocationAccess: - 
=== Succesors ===
next: v1069 
=== Usages ===
v1097 
=== Predecessor ===
j1065 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1361 lastLocationAccess: - #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1090 
y: i455 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1090 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
i1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v1068 #falseSuccessor: v1067  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1091 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1065 
index: - 
=== Succesors ===
=== Usages ===
a1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1065 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1091 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1362 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
a1092 v1098 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1362 lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1098 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
a1091 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1098 #trueSuccessor: v1075 #falseSuccessor: v1071  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1093 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1093 v1096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1093 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1363 
lastLocationAccess: - 
=== Succesors ===
next: v1081 
=== Usages ===
v1078 j1089 v1365 
=== Predecessor ===
v1071 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1363 lastLocationAccess: - #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1093 
y: j443 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1093 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1092 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
j1083 v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1079 
=== Usages ===
=== Predecessor ===
j1093 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v1080 #falseSuccessor: v1079  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1092 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1092 #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1094 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1094  <|@  <|@
f <@~|@floating>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1094 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1364 
lastLocationAccess: - 
=== Succesors ===
next: j1083 
=== Usages ===
v1365 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1364 lastLocationAccess: - #next: j1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1092 
=== Succesors ===
next: v1095 
=== Usages ===
v1095 
=== Predecessor ===
j1094 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1092 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1094 
index: j1093 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1094 index: j1093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1365 
lastLocationAccess: - 
value: j1083 
stateAfter: - 
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
j1083 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1365 lastLocationAccess: - value: j1083 stateAfter: - #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1093 
y: j446 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1093 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1363 
lastLocationAccess: - 
value: j1089 
stateAfter: - 
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1363 lastLocationAccess: - value: j1089 stateAfter: - #next: v1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1072 v1074 v1085 v1087 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1072 v1074 v1085 v1087 #next: v363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1279 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1279 lastLocationAccess: - value: a126 stateAfter: - #next: v1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1104 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1104 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1105 
=== Usages ===
v1366 v1368 v1369 
=== Predecessor ===
v1143 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1105  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v369 j1105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1280 
=== Succesors ===
next: i1130 
=== Usages ===
v1367 
=== Predecessor ===
j1104 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1280 #next: i1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1104 
index: - 
=== Succesors ===
=== Usages ===
i1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1130 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1366 
lastLocationAccess: - 
=== Succesors ===
next: v1109 
=== Usages ===
v1137 
=== Predecessor ===
j1105 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1366 lastLocationAccess: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1130 
y: i455 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1130 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1137 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1107 
=== Usages ===
=== Predecessor ===
i1130 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1137 #trueSuccessor: v1108 #falseSuccessor: v1107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1131 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1131  <|@  <|@
f <@~|@floating>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1105 
index: - 
=== Succesors ===
=== Usages ===
a1131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1131 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1367 
lastLocationAccess: - 
=== Succesors ===
next: v1116 
=== Usages ===
a1132 v1138 
=== Predecessor ===
v1107 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1367 lastLocationAccess: - #next: v1116  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1131 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1138 
=== Succesors ===
trueSuccessor: v1115 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
a1131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1138 #trueSuccessor: v1115 #falseSuccessor: v1111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1115 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1133 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1104 
index: - 
=== Succesors ===
=== Usages ===
j1133 v1136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1133 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1368 
lastLocationAccess: - 
=== Succesors ===
next: v1121 
=== Usages ===
v1118 j1129 v1370 
=== Predecessor ===
v1111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1368 lastLocationAccess: - #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j443 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1133 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1132 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1131 
=== Succesors ===
=== Usages ===
j1123 v1126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1118 
=== Succesors ===
trueSuccessor: v1120 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
j1133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1118 #trueSuccessor: v1120 #falseSuccessor: v1119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1132 
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1132 #next: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1126 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1134 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1104 
index: - 
=== Succesors ===
=== Usages ===
j1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1134 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1369 
lastLocationAccess: - 
=== Succesors ===
next: j1123 
=== Usages ===
v1370 
=== Predecessor ===
v1119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1369 lastLocationAccess: - #next: j1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1132 
=== Succesors ===
next: v1135 
=== Usages ===
v1135 
=== Predecessor ===
j1134 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1132 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1134 
index: j1133 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1134 index: j1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1370 
lastLocationAccess: - 
value: j1123 
stateAfter: - 
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
j1123 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1370 lastLocationAccess: - value: j1123 stateAfter: - #next: v1136  <|@  <|@
f <@~|@floating>@ <|@
tid j1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1133 
y: j446 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1133 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1368 
lastLocationAccess: - 
value: j1129 
stateAfter: - 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1368 lastLocationAccess: - value: j1129 stateAfter: - #next: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1136 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1112 v1114 v1125 v1127 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1112 v1114 v1125 v1127 #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1280 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1280 lastLocationAccess: - value: a126 stateAfter: - #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i184 
y: i375 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i184 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v177 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v177 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v177 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i184 i202 
=== Succesors ===
=== Usages ===
v198 i202 v1265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v197 values: i184 i202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.592871482082536
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v213 
=== Succesors ===
next: v201 
=== Usages ===
v199 v203 i204 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v213 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i1209 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i204 y: i1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v200 #falseSuccessor: v199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1184 
=== Usages ===
v212 
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1145 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1145 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1146 
=== Usages ===
v1371 v1373 v1374 
=== Predecessor ===
v1184 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: i204 
=== Succesors ===
=== Usages ===
v209 j1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1265 
=== Succesors ===
next: i1171 
=== Usages ===
v1372 
=== Predecessor ===
j1145 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1265 #next: i1171  <|@  <|@
f <@~|@floating>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1145 
index: - 
=== Succesors ===
=== Usages ===
i1171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1171 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1371 
lastLocationAccess: - 
=== Succesors ===
next: v1150 
=== Usages ===
v1178 
=== Predecessor ===
j1146 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1371 lastLocationAccess: - #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1171 
y: i455 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1171 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1178 
=== Succesors ===
trueSuccessor: v1149 
falseSuccessor: v1148 
=== Usages ===
=== Predecessor ===
i1171 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1178 #trueSuccessor: v1149 #falseSuccessor: v1148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1172 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1146 
index: - 
=== Succesors ===
=== Usages ===
a1172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1172 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1372 
lastLocationAccess: - 
=== Succesors ===
next: v1157 
=== Usages ===
a1173 v1179 
=== Predecessor ===
v1148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1372 lastLocationAccess: - #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1172 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1179 
=== Succesors ===
trueSuccessor: v1156 
falseSuccessor: v1152 
=== Usages ===
=== Predecessor ===
a1172 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1179 #trueSuccessor: v1156 #falseSuccessor: v1152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1156 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1174 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1145 
index: - 
=== Succesors ===
=== Usages ===
j1174 v1177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1174 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1373 
lastLocationAccess: - 
=== Succesors ===
next: v1162 
=== Usages ===
v1159 j1170 v1375 
=== Predecessor ===
v1152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1373 lastLocationAccess: - #next: v1162  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1174 
y: j443 
=== Succesors ===
=== Usages ===
v1162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1174 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1173 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1172 
=== Succesors ===
=== Usages ===
j1164 v1167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1160 
=== Usages ===
=== Predecessor ===
j1174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1161 #falseSuccessor: v1160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1173 
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1173 #next: v1168  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1167 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1175 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1145 
index: - 
=== Succesors ===
=== Usages ===
j1175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1175 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1374 
lastLocationAccess: - 
=== Succesors ===
next: j1164 
=== Usages ===
v1375 
=== Predecessor ===
v1160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1374 lastLocationAccess: - #next: j1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1173 
=== Succesors ===
next: v1176 
=== Usages ===
v1176 
=== Predecessor ===
j1175 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1173 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1175 
index: j1174 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1175 index: j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1375 
lastLocationAccess: - 
value: j1164 
stateAfter: - 
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
j1164 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1375 lastLocationAccess: - value: j1164 stateAfter: - #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid j1170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1174 
y: j446 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1174 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1373 
lastLocationAccess: - 
value: j1170 
stateAfter: - 
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1373 lastLocationAccess: - value: j1170 stateAfter: - #next: v1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1153 v1155 v1166 v1168 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1153 v1155 v1166 v1168 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1186 v200 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1186 v200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v212 
address: v1265 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v212 address: v1265 lastLocationAccess: - value: a126 stateAfter: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i204 
y: i4 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i204 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v197 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v197 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v197 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v61 v62 
=== Succesors ===
next: j1195 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v61 v62 #next: j1195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1204 
=== Usages ===
j1196 
=== Predecessor ===
v60 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1204 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v1206 
=== Usages ===
j1198 j1202 
=== Predecessor ===
j1195 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid j1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
x: j1195 
y: j1194 
=== Succesors ===
=== Usages ===
j1198 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1195 y: j1194  <|@  <|@
f <@~|@floating>@ <|@
tid j1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
x: j1196 
y: j1204 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1196 y: j1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
value: j1198 
stateAfter: - 
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
j1204 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - value: j1198 stateAfter: - #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i1201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
x: j1204 
y: i1201 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1204 y: i1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: j1202 
stateAfter: - 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: j1202 stateAfter: - #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
sourceFile: HashMap.java
sourceLine: 869
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a92 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a92  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 116
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
reason: BoundsCheckException
speculation: {0x0000000000000298[index: 20, len: 24, hash: 0x62046db4]: GuardMovement@2[HotSpotMethod<HashMap.clear()>, 33, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1194 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1208 
=== Usages ===
j1196 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a1208  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1258 ?17 ?7 v1259 v1260 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1208 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: i1209 
=== Usages ===
a92 v1261 v1262 
=== Predecessor ===
j1194 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - #next: i1209  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 866
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1208 
=== Succesors ===
=== Usages ===
i1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1209 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-25099|0xffffffffffff9df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 35]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: a1210 
=== Usages ===
i219 v151 v104 j141 i160 i394 v198 v218 
=== Predecessor ===
a1208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1261 lastLocationAccess: - #next: a1210  <|@  <|@
f <@~|@floating>@ <|@
tid a68 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1254 v1255 v1256 v1257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
result [v6|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1210 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: a1211 
=== Usages ===
v1250 
=== Predecessor ===
i1209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
result [v6|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1211 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: a1212 
=== Usages ===
v1251 
=== Predecessor ===
a1210 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - #next: a1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [v6|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1212 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: a1213 
=== Usages ===
v1252 
=== Predecessor ===
a1211 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - #next: a1213  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [v6|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a68 
index: - 
=== Succesors ===
=== Usages ===
a1213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a68 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1213 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
v1253 
=== Predecessor ===
a1212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
result [v7|DWORD[_] * 8 + 16464] <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1210 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
result [v8|DWORD[_] * 8 + 16464] <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
v49 j1204 v1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result [v9|DWORD[_] * 8 + 16464] <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1212 
=== Succesors ===
=== Usages ===
v49 v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result [v10|DWORD[_] * 8 + 16464] <|@
d <@d|@=== Debug Properties ===
displacement: 16464
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1213 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v1250 v1251 v1252 v1253 
=== Succesors ===
next: i1214 
=== Usages ===
=== Predecessor ===
a1213 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v1250 v1251 v1252 v1253 #next: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1214 v88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
=== Succesors ===
next: v88 
=== Usages ===
i5 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 v14 i32 i65 i202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 6]
stamp: i32
=== Inputs ===
x: i1214 
y: i4 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1214 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
i1214 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - value: i5 stateAfter: - #next: i1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1215 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 20]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: v174 
=== Usages ===
v14 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1215 
y: i4 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1215 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
sourceFile: HashMap.java
sourceLine: 867
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x446598ee]: UnreachedCode@5[HotSpotMethod<HashMap.clear()>, 49]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 v104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
value: i13 
stateAfter: - 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - value: i13 stateAfter: - #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1209 
y: i13 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1209 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.016780530542158334
stamp: void
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1193 
=== Usages ===
v113 
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1209 
y: i159 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1209 y: i159  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1209 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1209  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j149 
y: j141 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j149 y: j141  <|@  <|@
f <@~|@floating>@ <|@
tid a92 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1208 
=== Succesors ===
=== Usages ===
v1280 ?17 v1279 v1278 v1263 v1264 v1265 v1266 v1267 v1268 v1269 v1270 v1271 v1272 v1273 v1274 v1275 v1276 v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1208  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i219 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v1189 #falseSuccessor: v1192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1191 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1191  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1209 
y: i108 
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1209 y: i108  <|@  <|@
f <@*|@fixed>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v1190 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v1190 #falseSuccessor: v168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1188  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1190 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1187 v1188 
=== Succesors ===
next: v462 
=== Usages ===
v156 v212 v192 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1187 v1188 #next: v462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j417 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j418 
=== Usages ===
v1281 v1283 v1284 
=== Predecessor ===
v462 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j418  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1208 
=== Succesors ===
=== Usages ===
v113 j418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j418 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1262 
=== Succesors ===
next: i448 
=== Usages ===
v1282 
=== Predecessor ===
j417 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1262 #next: i448  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: - 
=== Succesors ===
=== Usages ===
i448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: v422 
=== Usages ===
v456 
=== Predecessor ===
j418 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v456 v496 v537 v577 v617 v657 v697 v737 v777 v817 v857 v897 v937 v977 v1017 v1057 v1097 v1137 v1178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i448 
y: i455 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i448 y: i455  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j447 j488 j529 j569 j609 j649 j689 j729 j769 j809 j849 j889 j929 j969 j1009 j1049 j1089 j1129 j1170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 v431 v798 v477 v1118 v518 v958 v558 v1078 v598 v838 v638 v1038 v678 v918 v718 v998 v758 v878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v421 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a449 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a449  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
result [v15|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j418 
index: - 
=== Succesors ===
=== Usages ===
a449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a449 <|@
result v16|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
=== Succesors ===
next: v429 
=== Usages ===
a450 v457 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a449 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
a449 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v428 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j451 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j451  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: - 
=== Succesors ===
=== Usages ===
j451 v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j451 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: v434 
=== Usages ===
v431 j447 v1285 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j451 
y: j443 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j451 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a450 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a449 
=== Succesors ===
=== Usages ===
j436 v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
j451 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v433 #falseSuccessor: v432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a450 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a450 #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j452 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j452  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: - 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
=== Succesors ===
next: j436 
=== Usages ===
v1285 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a450 
=== Succesors ===
next: v453 
=== Usages ===
v453 
=== Predecessor ===
j452 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a450 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result [v19|QWORD + v17|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j452 
index: j451 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j452 index: j451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
value: j436 
stateAfter: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
j436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - value: j436 stateAfter: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j451 
y: j446 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j451 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
value: j447 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - value: j447 stateAfter: - #next: v438  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v425 v427 v438 v440 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v425 v427 v438 v440 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 v122 v189 v209 v232 v254 v261 v279 v286 v293 v299 v323 v330 v337 v343 v351 v357 v363 v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v53 
address: v1262 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v53 address: v1262 lastLocationAccess: - value: a126 stateAfter: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1209 
y: i38 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1209 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v218 
trueValue: i1209 
falseValue: i108 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v218 trueValue: i1209 falseValue: i108  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v113 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i65 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i4 i32 
=== Succesors ===
=== Usages ===
i32 v24 v1263 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v20 values: i4 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.592871482082536
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v19 
=== Succesors ===
next: v29 
=== Usages ===
i65 v26 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v19 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i65 
y: i219 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i65 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v28 #falseSuccessor: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
v156 
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j464 
=== Usages ===
v1286 v1288 v1289 
=== Predecessor ===
v502 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j464  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
result [v14|QWORD[.] + v22|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: i65 
=== Succesors ===
=== Usages ===
v122 j464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: i65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
result [v14|QWORD[.] + v22|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1263 
=== Succesors ===
next: i489 
=== Usages ===
v1287 
=== Predecessor ===
j463 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1263 #next: i489  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
i489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
v496 
=== Predecessor ===
j464 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i489 
y: i455 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i489 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
i489 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v467 #falseSuccessor: v466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a490 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a490  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
result [v23|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
result v24|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
a491 v497 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a490 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a490  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
a490 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v474 #falseSuccessor: v470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j492 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j492  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j492 v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j492 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v480 
=== Usages ===
v477 j488 v1290 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j492 
y: j443 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j492 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a491 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a490 
=== Succesors ===
=== Usages ===
j482 v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a490  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
j492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v479 #falseSuccessor: v478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a491 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a491 #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j493 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j493 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
lastLocationAccess: - 
=== Succesors ===
next: j482 
=== Usages ===
v1290 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 lastLocationAccess: - #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a491 
=== Succesors ===
next: v494 
=== Usages ===
v494 
=== Predecessor ===
j493 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a491 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
result [v27|QWORD + v25|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j493 
index: j492 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
value: j482 
stateAfter: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
j482 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - value: j482 stateAfter: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j492 
y: j446 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j492 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
value: j488 
stateAfter: - 
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - value: j488 stateAfter: - #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v471 v473 v484 v486 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v471 v473 v484 v486 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1186 v28 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1186 v28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v156 
address: v1263 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v156 address: v1263 lastLocationAccess: - value: a126 stateAfter: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i65 
y: i4 
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i65 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i1209 
y: i393 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1209 y: i393  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i184 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v177 
values: i65 i390 
=== Succesors ===
=== Usages ===
v178 j1221 v1264 i204 i390 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v177 values: i65 i390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.592871482082536
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v193 
=== Succesors ===
next: v181 
=== Usages ===
v179 v183 i184 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v193 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i394 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i394  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.7269292390817075
stamp: void
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v180 #falseSuccessor: v179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
v192 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j504 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j504 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j505 
=== Usages ===
v1291 v1293 v1294 
=== Predecessor ===
v543 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j505  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
result [v14|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: i184 
=== Succesors ===
=== Usages ===
v189 j505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: i184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j505 <|@
result [v14|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1264 
=== Succesors ===
next: i530 
=== Usages ===
v1292 
=== Predecessor ===
j504 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1264 #next: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j504 
index: - 
=== Succesors ===
=== Usages ===
i530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1291 
lastLocationAccess: - 
=== Succesors ===
next: v509 
=== Usages ===
v537 
=== Predecessor ===
j505 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1291 lastLocationAccess: - #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i530 
y: i455 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i530 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v508 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
i530 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v508 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a531 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a531  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
result [v32|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j505 
index: - 
=== Succesors ===
=== Usages ===
a531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j505 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a531 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
a532 v538 
=== Predecessor ===
v507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1292 lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a531 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a531  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
a531 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v515 #falseSuccessor: v511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j533 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j533  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j504 
index: - 
=== Succesors ===
=== Usages ===
j533 v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j533 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
v518 j529 v1295 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j533 
y: j443 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j533 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a532 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a531 
=== Succesors ===
=== Usages ===
j523 v526 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a531  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
j533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v520 #falseSuccessor: v519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a532 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a532 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j534 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j534  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j504 
index: - 
=== Succesors ===
=== Usages ===
j534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j534 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
lastLocationAccess: - 
=== Succesors ===
next: j523 
=== Usages ===
v1295 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 lastLocationAccess: - #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a532 
=== Succesors ===
next: v535 
=== Usages ===
v535 
=== Predecessor ===
j534 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a532 #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
result [v36|QWORD + v34|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j534 
index: j533 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j534 index: j533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
value: j523 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - value: j523 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j533 
y: j446 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j533 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
value: j529 
stateAfter: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - value: j529 stateAfter: - #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v512 v514 v525 v527 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v512 v514 v525 v527 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1186 v180 
=== Succesors ===
=== Usages ===
v369 v189 v343 v232 v363 v254 v323 v261 v357 v279 v337 v286 v351 v293 v330 v299 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1186 v180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1264 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1264 lastLocationAccess: - value: a126 stateAfter: - #next: v583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j544 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j544 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j545 
=== Usages ===
v1296 v1298 v1299 
=== Predecessor ===
v583 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j545  <|@  <|@
f <@~|@floating>@ <|@
tid j1221 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i184 
=== Succesors ===
=== Usages ===
v1266 v1267 v1268 v1269 v1270 v1271 v1272 v1273 v1274 v1275 v1276 v1277 v1278 v1279 v1280 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i184  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v232 j545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j545 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1266 
=== Succesors ===
next: i570 
=== Usages ===
v1297 
=== Predecessor ===
j544 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1266 #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j544 
index: - 
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j544 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
lastLocationAccess: - 
=== Succesors ===
next: v549 
=== Usages ===
v577 
=== Predecessor ===
j545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 lastLocationAccess: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i570 
y: i455 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i570 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
i570 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v548 #falseSuccessor: v547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a571 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a571  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
result [v39|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j545 
index: - 
=== Succesors ===
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j545 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a571 <|@
result v40|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1297 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
a572 v578 
=== Predecessor ===
v547 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1297 lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a571  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v555 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
a571 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v555 #falseSuccessor: v551  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j573 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j573  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j544 
index: - 
=== Succesors ===
=== Usages ===
j573 v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j544 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j573 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
=== Succesors ===
next: v561 
=== Usages ===
v558 j569 v1300 
=== Predecessor ===
v551 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j573 
y: j443 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j573 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a572 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
j563 v566 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a571  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
j573 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v560 #falseSuccessor: v559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a572 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a572 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j574 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j544 
index: - 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j544 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j574 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: j563 
=== Usages ===
v1300 
=== Predecessor ===
v559 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: j563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a572 
=== Succesors ===
next: v575 
=== Usages ===
v575 
=== Predecessor ===
j574 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a572 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
result [v43|QWORD + v41|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: j573 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: j573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
value: j563 
stateAfter: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
j563 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - value: j563 stateAfter: - #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j573 
y: j446 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j573 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
value: j569 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - value: j569 stateAfter: - #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v552 v554 v565 v567 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v552 v554 v565 v567 #next: v232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1266 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1266 lastLocationAccess: - value: a126 stateAfter: - #next: v623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j584 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j584 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j585 
=== Usages ===
v1301 v1303 v1304 
=== Predecessor ===
v623 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j585  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v254 j585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j585 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1267 
=== Succesors ===
next: i610 
=== Usages ===
v1302 
=== Predecessor ===
j584 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1267 #next: i610  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i610 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
lastLocationAccess: - 
=== Succesors ===
next: v589 
=== Usages ===
v617 
=== Predecessor ===
j585 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 lastLocationAccess: - #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i610 
y: i455 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i610 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v617 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
i610 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v617 #trueSuccessor: v588 #falseSuccessor: v587  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a611 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a611  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
result [v45|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j585 
index: - 
=== Succesors ===
=== Usages ===
a611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
result v46|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
lastLocationAccess: - 
=== Succesors ===
next: v596 
=== Usages ===
a612 v618 
=== Predecessor ===
v587 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1302 lastLocationAccess: - #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
a611 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v595 #falseSuccessor: v591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j613 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j613  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
j613 v616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j613 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
v598 j609 v1305 
=== Predecessor ===
v591 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j613 
y: j443 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j613 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a612 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
j603 v606 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
j613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v600 #falseSuccessor: v599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a612 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a612 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j614 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j614  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j614 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1304 
lastLocationAccess: - 
=== Succesors ===
next: j603 
=== Usages ===
v1305 
=== Predecessor ===
v599 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1304 lastLocationAccess: - #next: j603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j603 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a612 
=== Succesors ===
next: v615 
=== Usages ===
v615 
=== Predecessor ===
j614 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a612 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
result [v49|QWORD + v47|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j614 
index: j613 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
value: j603 
stateAfter: - 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
j603 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - value: j603 stateAfter: - #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid j609 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j613 
y: j446 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j613 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
value: j609 
stateAfter: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - value: j609 stateAfter: - #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v592 v594 v605 v607 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v592 v594 v605 v607 #next: v254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1267 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1267 lastLocationAccess: - value: a126 stateAfter: - #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j624 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j624 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j625 
=== Usages ===
v1306 v1308 v1309 
=== Predecessor ===
v663 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j625  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v261 j625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j625 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1268 
=== Succesors ===
next: i650 
=== Usages ===
v1307 
=== Predecessor ===
j624 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1268 #next: i650  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j624 
index: - 
=== Succesors ===
=== Usages ===
i650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i650 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1306 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
v657 
=== Predecessor ===
j625 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1306 lastLocationAccess: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i650 
y: i455 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i650 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v657 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v627 
=== Usages ===
=== Predecessor ===
i650 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v657 #trueSuccessor: v628 #falseSuccessor: v627  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a651 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a651  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
result [v51|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j625 
index: - 
=== Succesors ===
=== Usages ===
a651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j625 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a651 <|@
result v52|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1307 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
a652 v658 
=== Predecessor ===
v627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1307 lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a651  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
a651 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v635 #falseSuccessor: v631  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j653 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j624 
index: - 
=== Succesors ===
=== Usages ===
j653 v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j653 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
=== Succesors ===
next: v641 
=== Usages ===
v638 j649 v1310 
=== Predecessor ===
v631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j653 
y: j443 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j653 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
j643 v646 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a651  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v638 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
j653 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v638 #trueSuccessor: v640 #falseSuccessor: v639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a652 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a652 #next: v647  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j654 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j654  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j624 
index: - 
=== Succesors ===
=== Usages ===
j654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j624 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j654 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
lastLocationAccess: - 
=== Succesors ===
next: j643 
=== Usages ===
v1310 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 lastLocationAccess: - #next: j643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j643 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a652 
=== Succesors ===
next: v655 
=== Usages ===
v655 
=== Predecessor ===
j654 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a652 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
result [v55|QWORD + v53|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j654 
index: j653 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j654 index: j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
value: j643 
stateAfter: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
j643 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - value: j643 stateAfter: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j653 
y: j446 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j653 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
value: j649 
stateAfter: - 
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - value: j649 stateAfter: - #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v656 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v634 v645 v647 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v634 v645 v647 #next: v261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1268 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1268 lastLocationAccess: - value: a126 stateAfter: - #next: v703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j664 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j664 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j665 
=== Usages ===
v1311 v1313 v1314 
=== Predecessor ===
v703 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j665  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v279 j665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j665 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1269 
=== Succesors ===
next: i690 
=== Usages ===
v1312 
=== Predecessor ===
j664 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1269 #next: i690  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
i690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
lastLocationAccess: - 
=== Succesors ===
next: v669 
=== Usages ===
v697 
=== Predecessor ===
j665 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1311 lastLocationAccess: - #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i690 
y: i455 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i690 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v697 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v667 
=== Usages ===
=== Predecessor ===
i690 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v697 #trueSuccessor: v668 #falseSuccessor: v667  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a691 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a691  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
result [v57|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j665 
index: - 
=== Succesors ===
=== Usages ===
a691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j665 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a691 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1312 
lastLocationAccess: - 
=== Succesors ===
next: v676 
=== Usages ===
a692 v698 
=== Predecessor ===
v667 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1312 lastLocationAccess: - #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a691 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a691  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
a691 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v675 #falseSuccessor: v671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j693 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j693  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j693 v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j693 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1313 
lastLocationAccess: - 
=== Succesors ===
next: v681 
=== Usages ===
v678 j689 v1315 
=== Predecessor ===
v671 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1313 lastLocationAccess: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j693 
y: j443 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j693 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a692 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a691 
=== Succesors ===
=== Usages ===
j683 v686 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a691  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
j693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a692 
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a692 #next: v687  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v686 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j694 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j694 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1314 
lastLocationAccess: - 
=== Succesors ===
next: j683 
=== Usages ===
v1315 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1314 lastLocationAccess: - #next: j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j683 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a692 
=== Succesors ===
next: v695 
=== Usages ===
v695 
=== Predecessor ===
j694 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a692 #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
result [v61|QWORD + v59|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j694 
index: j693 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j694 index: j693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1315 
lastLocationAccess: - 
value: j683 
stateAfter: - 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
j683 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1315 lastLocationAccess: - value: j683 stateAfter: - #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j693 
y: j446 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j693 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1313 
lastLocationAccess: - 
value: j689 
stateAfter: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1313 lastLocationAccess: - value: j689 stateAfter: - #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v672 v674 v685 v687 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v672 v674 v685 v687 #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1269 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1269 lastLocationAccess: - value: a126 stateAfter: - #next: v743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j704 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j704 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j705 
=== Usages ===
v1316 v1318 v1319 
=== Predecessor ===
v743 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j705  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v286 j705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j705 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1270 
=== Succesors ===
next: i730 
=== Usages ===
v1317 
=== Predecessor ===
j704 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1270 #next: i730  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1316 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
v737 
=== Predecessor ===
j705 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1316 lastLocationAccess: - #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i730 
y: i455 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i730 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v737 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
i730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v737 #trueSuccessor: v708 #falseSuccessor: v707  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a731 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a731  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
result [v63|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j705 
index: - 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
result v64|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1317 
lastLocationAccess: - 
=== Succesors ===
next: v716 
=== Usages ===
a732 v738 
=== Predecessor ===
v707 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1317 lastLocationAccess: - #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a731  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v738 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
a731 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v738 #trueSuccessor: v715 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j733 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j733  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j733 v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j733 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
lastLocationAccess: - 
=== Succesors ===
next: v721 
=== Usages ===
v718 j729 v1320 
=== Predecessor ===
v711 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 lastLocationAccess: - #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j733 
y: j443 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j733 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a732 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
j723 v726 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a731  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
j733 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v720 #falseSuccessor: v719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a732 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a732 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j734 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j734  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j734 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1319 
lastLocationAccess: - 
=== Succesors ===
next: j723 
=== Usages ===
v1320 
=== Predecessor ===
v719 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1319 lastLocationAccess: - #next: j723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j723 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a732 
=== Succesors ===
next: v735 
=== Usages ===
v735 
=== Predecessor ===
j734 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a732 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
result [v67|QWORD + v65|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j734 
index: j733 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: j733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1320 
lastLocationAccess: - 
value: j723 
stateAfter: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
j723 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1320 lastLocationAccess: - value: j723 stateAfter: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j729 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j733 
y: j446 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j733 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
lastLocationAccess: - 
value: j729 
stateAfter: - 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1318 lastLocationAccess: - value: j729 stateAfter: - #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v714 v725 v727 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v714 v725 v727 #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1270 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1270 lastLocationAccess: - value: a126 stateAfter: - #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j744 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j744 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j745 
=== Usages ===
v1321 v1323 v1324 
=== Predecessor ===
v783 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v293 j745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j745 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1271 
=== Succesors ===
next: i770 
=== Usages ===
v1322 
=== Predecessor ===
j744 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1271 #next: i770  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j744 
index: - 
=== Succesors ===
=== Usages ===
i770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j744 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1321 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
v777 
=== Predecessor ===
j745 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1321 lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i770 
y: i455 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i770 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v777 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v747 
=== Usages ===
=== Predecessor ===
i770 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v777 #trueSuccessor: v748 #falseSuccessor: v747  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a771 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a771  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
result [v69|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
a771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a771 <|@
result v70|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1322 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
a772 v778 
=== Predecessor ===
v747 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1322 lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a771 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a771  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
a771 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v755 #falseSuccessor: v751  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j773 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j773  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j744 
index: - 
=== Succesors ===
=== Usages ===
j773 v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j744 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j773 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
lastLocationAccess: - 
=== Succesors ===
next: v761 
=== Usages ===
v758 j769 v1325 
=== Predecessor ===
v751 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1323 lastLocationAccess: - #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j773 
y: j443 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j773 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a772 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a771 
=== Succesors ===
=== Usages ===
j763 v766 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a771  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v759 
=== Usages ===
=== Predecessor ===
j773 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v760 #falseSuccessor: v759  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a772 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a772 #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v766 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j774 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j774  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j744 
index: - 
=== Succesors ===
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j744 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j774 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1324 
lastLocationAccess: - 
=== Succesors ===
next: j763 
=== Usages ===
v1325 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1324 lastLocationAccess: - #next: j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j763 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a772 
=== Succesors ===
next: v775 
=== Usages ===
v775 
=== Predecessor ===
j774 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a772 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
result [v73|QWORD + v71|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j774 
index: j773 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j774 index: j773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1325 
lastLocationAccess: - 
value: j763 
stateAfter: - 
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
j763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1325 lastLocationAccess: - value: j763 stateAfter: - #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j773 
y: j446 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j773 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
lastLocationAccess: - 
value: j769 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1323 lastLocationAccess: - value: j769 stateAfter: - #next: v765  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v754 v765 v767 
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v754 v765 v767 #next: v293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1271 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1271 lastLocationAccess: - value: a126 stateAfter: - #next: v823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j784 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j784 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j785 
=== Usages ===
v1326 v1328 v1329 
=== Predecessor ===
v823 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j785  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v299 j785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j785 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1272 
=== Succesors ===
next: i810 
=== Usages ===
v1327 
=== Predecessor ===
j784 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1272 #next: i810  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
i810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1326 
lastLocationAccess: - 
=== Succesors ===
next: v789 
=== Usages ===
v817 
=== Predecessor ===
j785 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1326 lastLocationAccess: - #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i455 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i810 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v788 
falseSuccessor: v787 
=== Usages ===
=== Predecessor ===
i810 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v788 #falseSuccessor: v787  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a811 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a811  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
result [v75|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
a811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a811 <|@
result v76|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1327 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
a812 v818 
=== Predecessor ===
v787 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1327 lastLocationAccess: - #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a811 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a811  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v818 
=== Succesors ===
trueSuccessor: v795 
falseSuccessor: v791 
=== Usages ===
=== Predecessor ===
a811 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v818 #trueSuccessor: v795 #falseSuccessor: v791  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v794  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v795 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j813 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j813  <|@  <|@
f <@~|@floating>@ <|@
tid v1328 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
j813 v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j813 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1328 
lastLocationAccess: - 
=== Succesors ===
next: v801 
=== Usages ===
v798 j809 v1330 
=== Predecessor ===
v791 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1328 lastLocationAccess: - #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j813 
y: j443 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j813 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a812 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a811 
=== Succesors ===
=== Usages ===
j803 v806 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a811  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v799 
=== Usages ===
=== Predecessor ===
j813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v800 #falseSuccessor: v799  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a812 
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a812 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j814 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j784 
index: - 
=== Succesors ===
=== Usages ===
j814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j814 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1329 
lastLocationAccess: - 
=== Succesors ===
next: j803 
=== Usages ===
v1330 
=== Predecessor ===
v799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1329 lastLocationAccess: - #next: j803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j803 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a812 
=== Succesors ===
next: v815 
=== Usages ===
v815 
=== Predecessor ===
j814 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a812 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
result [v79|QWORD + v77|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j814 
index: j813 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j814 index: j813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1330 
lastLocationAccess: - 
value: j803 
stateAfter: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
j803 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1330 lastLocationAccess: - value: j803 stateAfter: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j813 
y: j446 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j813 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1328 
lastLocationAccess: - 
value: j809 
stateAfter: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1328 lastLocationAccess: - value: j809 stateAfter: - #next: v805  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v792 v794 v805 v807 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v792 v794 v805 v807 #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1272 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1272 lastLocationAccess: - value: a126 stateAfter: - #next: v863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j824 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j824 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j825 
=== Usages ===
v1331 v1333 v1334 
=== Predecessor ===
v863 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j825  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v323 j825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1273 
=== Succesors ===
next: i850 
=== Usages ===
v1332 
=== Predecessor ===
j824 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1273 #next: i850  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j824 
index: - 
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j824 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1331 
lastLocationAccess: - 
=== Succesors ===
next: v829 
=== Usages ===
v857 
=== Predecessor ===
j825 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1331 lastLocationAccess: - #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i850 
y: i455 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i850 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v857 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v827 
=== Usages ===
=== Predecessor ===
i850 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v857 #trueSuccessor: v828 #falseSuccessor: v827  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v828 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a851  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
result [v81|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
a851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
result v82|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
a852 v858 
=== Predecessor ===
v827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1332 lastLocationAccess: - #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v835 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
a851 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v835 #falseSuccessor: v831  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v835 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j853 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j853  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j824 
index: - 
=== Succesors ===
=== Usages ===
j853 v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j824 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j853 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1333 
lastLocationAccess: - 
=== Succesors ===
next: v841 
=== Usages ===
v838 j849 v1335 
=== Predecessor ===
v831 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1333 lastLocationAccess: - #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j853 
y: j443 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j853 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a852 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
j843 v846 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v840 
falseSuccessor: v839 
=== Usages ===
=== Predecessor ===
j853 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v840 #falseSuccessor: v839  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a852 
=== Succesors ===
next: v847 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a852 #next: v847  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j854 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j854  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j824 
index: - 
=== Succesors ===
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j824 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j854 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1334 
lastLocationAccess: - 
=== Succesors ===
next: j843 
=== Usages ===
v1335 
=== Predecessor ===
v839 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1334 lastLocationAccess: - #next: j843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j843 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a852 
=== Succesors ===
next: v855 
=== Usages ===
v855 
=== Predecessor ===
j854 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a852 #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
result [v85|QWORD + v83|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j854 
index: j853 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j854 index: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1335 
lastLocationAccess: - 
value: j843 
stateAfter: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
j843 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1335 lastLocationAccess: - value: j843 stateAfter: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j853 
y: j446 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j853 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1333 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1333 lastLocationAccess: - value: j849 stateAfter: - #next: v845  <|@  <|@
f <@*|@fixed>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v832 v834 v845 v847 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v832 v834 v845 v847 #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1273 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1273 lastLocationAccess: - value: a126 stateAfter: - #next: v903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j864 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j865 
=== Usages ===
v1336 v1338 v1339 
=== Predecessor ===
v903 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j865  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v330 j865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j865 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1274 
=== Succesors ===
next: i890 
=== Usages ===
v1337 
=== Predecessor ===
j864 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1274 #next: i890  <|@  <|@
f <@~|@floating>@ <|@
tid v1336 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
i890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i890 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1336 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
v897 
=== Predecessor ===
j865 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1336 lastLocationAccess: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i890 
y: i455 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i890 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v897 
=== Succesors ===
trueSuccessor: v868 
falseSuccessor: v867 
=== Usages ===
=== Predecessor ===
i890 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v897 #trueSuccessor: v868 #falseSuccessor: v867  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v872 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v872  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a891 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a891  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
result [v87|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j865 
index: - 
=== Succesors ===
=== Usages ===
a891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
result v88|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1337 
lastLocationAccess: - 
=== Succesors ===
next: v876 
=== Usages ===
a892 v898 
=== Predecessor ===
v867 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1337 lastLocationAccess: - #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v898 
=== Succesors ===
trueSuccessor: v875 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
a891 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v898 #trueSuccessor: v875 #falseSuccessor: v871  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v875 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j893 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j893  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j893 v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j893 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
=== Succesors ===
next: v881 
=== Usages ===
v878 j889 v1340 
=== Predecessor ===
v871 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j443 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j893 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a892 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
j883 v886 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v880 
falseSuccessor: v879 
=== Usages ===
=== Predecessor ===
j893 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v880 #falseSuccessor: v879  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a892 
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a892 #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j894 
=== Usages ===
=== Predecessor ===
v881 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j894  <|@  <|@
f <@~|@floating>@ <|@
tid v1339 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j894 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1339 
lastLocationAccess: - 
=== Succesors ===
next: j883 
=== Usages ===
v1340 
=== Predecessor ===
v879 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1339 lastLocationAccess: - #next: j883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j883 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a892 
=== Succesors ===
next: v895 
=== Usages ===
v895 
=== Predecessor ===
j894 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a892 #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1340 <|@
result [v91|QWORD + v89|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j894 
index: j893 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j894 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1340 
lastLocationAccess: - 
value: j883 
stateAfter: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
j883 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1340 lastLocationAccess: - value: j883 stateAfter: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid j889 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j893 
y: j446 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j893 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1338 
lastLocationAccess: - 
value: j889 
stateAfter: - 
=== Succesors ===
next: v885 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1338 lastLocationAccess: - value: j889 stateAfter: - #next: v885  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v896 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v872 v874 v885 v887 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v872 v874 v885 v887 #next: v330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1274 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1274 lastLocationAccess: - value: a126 stateAfter: - #next: v943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j904 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j905 
=== Usages ===
v1341 v1343 v1344 
=== Predecessor ===
v943 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v337 j905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j905 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1275 
=== Succesors ===
next: i930 
=== Usages ===
v1342 
=== Predecessor ===
j904 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1275 #next: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v1341 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
i930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i930 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1341 
lastLocationAccess: - 
=== Succesors ===
next: v909 
=== Usages ===
v937 
=== Predecessor ===
j905 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1341 lastLocationAccess: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i455 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i930 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v908 
falseSuccessor: v907 
=== Usages ===
=== Predecessor ===
i930 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v908 #falseSuccessor: v907  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a931 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a931  <|@  <|@
f <@~|@floating>@ <|@
tid v1342 <|@
result [v93|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
a931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a931 <|@
result v94|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1342 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
a932 v938 
=== Predecessor ===
v907 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1342 lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a931 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a931  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v938 
=== Succesors ===
trueSuccessor: v915 
falseSuccessor: v911 
=== Usages ===
=== Predecessor ===
a931 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v938 #trueSuccessor: v915 #falseSuccessor: v911  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j933 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j933  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
j933 v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j933 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1343 
lastLocationAccess: - 
=== Succesors ===
next: v921 
=== Usages ===
v918 j929 v1345 
=== Predecessor ===
v911 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1343 lastLocationAccess: - #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j933 
y: j443 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j933 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a932 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a931 
=== Succesors ===
=== Usages ===
j923 v926 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a931  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v918 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v919 
=== Usages ===
=== Predecessor ===
j933 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v918 #trueSuccessor: v920 #falseSuccessor: v919  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a932 
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a932 #next: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j934 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j934  <|@  <|@
f <@~|@floating>@ <|@
tid v1344 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j904 
index: - 
=== Succesors ===
=== Usages ===
j934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j934 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1344 
lastLocationAccess: - 
=== Succesors ===
next: j923 
=== Usages ===
v1345 
=== Predecessor ===
v919 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1344 lastLocationAccess: - #next: j923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j923 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a932 
=== Succesors ===
next: v935 
=== Usages ===
v935 
=== Predecessor ===
j934 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a932 #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
result [v97|QWORD + v95|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j934 
index: j933 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j934 index: j933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1345 
lastLocationAccess: - 
value: j923 
stateAfter: - 
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
j923 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1345 lastLocationAccess: - value: j923 stateAfter: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j933 
y: j446 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j933 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1343 
lastLocationAccess: - 
value: j929 
stateAfter: - 
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1343 lastLocationAccess: - value: j929 stateAfter: - #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v912 v914 v925 v927 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v912 v914 v925 v927 #next: v337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1275 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1275 lastLocationAccess: - value: a126 stateAfter: - #next: v983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j944 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j944 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j945 
=== Usages ===
v1346 v1348 v1349 
=== Predecessor ===
v983 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j945  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v343 j945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j945 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1276 
=== Succesors ===
next: i970 
=== Usages ===
v1347 
=== Predecessor ===
j944 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1276 #next: i970  <|@  <|@
f <@~|@floating>@ <|@
tid v1346 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j944 
index: - 
=== Succesors ===
=== Usages ===
i970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j944 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i970 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1346 
lastLocationAccess: - 
=== Succesors ===
next: v949 
=== Usages ===
v977 
=== Predecessor ===
j945 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1346 lastLocationAccess: - #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i970 
y: i455 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i970 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v977 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
i970 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v977 #trueSuccessor: v948 #falseSuccessor: v947  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a971 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a971  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
result [v99|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j945 
index: - 
=== Succesors ===
=== Usages ===
a971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j945 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a971 <|@
result v100|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1347 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
a972 v978 
=== Predecessor ===
v947 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1347 lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a971 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a971  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v978 
=== Succesors ===
trueSuccessor: v955 
falseSuccessor: v951 
=== Usages ===
=== Predecessor ===
a971 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v978 #trueSuccessor: v955 #falseSuccessor: v951  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v955 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j973 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j973  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j944 
index: - 
=== Succesors ===
=== Usages ===
j973 v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j944 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j973 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1348 
lastLocationAccess: - 
=== Succesors ===
next: v961 
=== Usages ===
v958 j969 v1350 
=== Predecessor ===
v951 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1348 lastLocationAccess: - #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j973 
y: j443 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j973 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a972 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a971 
=== Succesors ===
=== Usages ===
j963 v966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a971  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v958 
=== Succesors ===
trueSuccessor: v960 
falseSuccessor: v959 
=== Usages ===
=== Predecessor ===
j973 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v958 #trueSuccessor: v960 #falseSuccessor: v959  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a972 
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a972 #next: v967  <|@  <|@
f <@*|@fixed>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v966 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j974 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j974  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j944 
index: - 
=== Succesors ===
=== Usages ===
j974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j944 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j974 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1349 
lastLocationAccess: - 
=== Succesors ===
next: j963 
=== Usages ===
v1350 
=== Predecessor ===
v959 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1349 lastLocationAccess: - #next: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j963 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a972 
=== Succesors ===
next: v975 
=== Usages ===
v975 
=== Predecessor ===
j974 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a972 #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v1350 <|@
result [v103|QWORD + v101|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j974 
index: j973 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j974 index: j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1350 
lastLocationAccess: - 
value: j963 
stateAfter: - 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
j963 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1350 lastLocationAccess: - value: j963 stateAfter: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j973 
y: j446 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j973 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1348 
lastLocationAccess: - 
value: j969 
stateAfter: - 
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1348 lastLocationAccess: - value: j969 stateAfter: - #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v952 v954 v965 v967 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v952 v954 v965 v967 #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1276 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1276 lastLocationAccess: - value: a126 stateAfter: - #next: v1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j984 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j984 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j985 
=== Usages ===
v1351 v1353 v1354 
=== Predecessor ===
v1023 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j985  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v351 j985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j985 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1277 
=== Succesors ===
next: i1010 
=== Usages ===
v1352 
=== Predecessor ===
j984 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1277 #next: i1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1351 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j984 
index: - 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1351 
lastLocationAccess: - 
=== Succesors ===
next: v989 
=== Usages ===
v1017 
=== Predecessor ===
j985 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1351 lastLocationAccess: - #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1010 
y: i455 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1010 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1017 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v987 
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1017 #trueSuccessor: v988 #falseSuccessor: v987  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1011 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
result [v105|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j985 
index: - 
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j985 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1011 <|@
result v106|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1352 
lastLocationAccess: - 
=== Succesors ===
next: v996 
=== Usages ===
a1012 v1018 
=== Predecessor ===
v987 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1352 lastLocationAccess: - #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1011 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1018 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
a1011 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1018 #trueSuccessor: v995 #falseSuccessor: v991  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1013 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1353 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j984 
index: - 
=== Succesors ===
=== Usages ===
j1013 v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1013 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1353 
lastLocationAccess: - 
=== Succesors ===
next: v1001 
=== Usages ===
v998 j1009 v1355 
=== Predecessor ===
v991 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1353 lastLocationAccess: - #next: v1001  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1013 
y: j443 
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1013 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1011 
=== Succesors ===
=== Usages ===
j1003 v1006 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v1000 
falseSuccessor: v999 
=== Usages ===
=== Predecessor ===
j1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v1000 #falseSuccessor: v999  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1012 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1012 #next: v1007  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v1006 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1014 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j984 
index: - 
=== Succesors ===
=== Usages ===
j1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1014 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1354 
lastLocationAccess: - 
=== Succesors ===
next: j1003 
=== Usages ===
v1355 
=== Predecessor ===
v999 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1354 lastLocationAccess: - #next: j1003  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1003 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1012 
=== Succesors ===
next: v1015 
=== Usages ===
v1015 
=== Predecessor ===
j1014 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1012 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1355 <|@
result [v109|QWORD + v107|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1014 
index: j1013 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1014 index: j1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1355 
lastLocationAccess: - 
value: j1003 
stateAfter: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
j1003 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1355 lastLocationAccess: - value: j1003 stateAfter: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1013 
y: j446 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1013 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1353 
lastLocationAccess: - 
value: j1009 
stateAfter: - 
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1353 lastLocationAccess: - value: j1009 stateAfter: - #next: v1005  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v1016 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v992 v994 v1005 v1007 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v992 v994 v1005 v1007 #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1277 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1277 lastLocationAccess: - value: a126 stateAfter: - #next: v1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1024 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1024 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1025 
=== Usages ===
v1356 v1358 v1359 
=== Predecessor ===
v1063 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v357 j1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1025 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1278 
=== Succesors ===
next: i1050 
=== Usages ===
v1357 
=== Predecessor ===
j1024 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1278 #next: i1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
i1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1356 
lastLocationAccess: - 
=== Succesors ===
next: v1029 
=== Usages ===
v1057 
=== Predecessor ===
j1025 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1356 lastLocationAccess: - #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1050 
y: i455 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1050 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1028 
falseSuccessor: v1027 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1028 #falseSuccessor: v1027  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1051 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1051  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
result [v111|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1025 
index: - 
=== Succesors ===
=== Usages ===
a1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1025 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1051 <|@
result v112|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1357 
lastLocationAccess: - 
=== Succesors ===
next: v1036 
=== Usages ===
a1052 v1058 
=== Predecessor ===
v1027 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1357 lastLocationAccess: - #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1051 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v1035 
falseSuccessor: v1031 
=== Usages ===
=== Predecessor ===
a1051 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v1035 #falseSuccessor: v1031  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1053 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1053 v1056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1053 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1358 
lastLocationAccess: - 
=== Succesors ===
next: v1041 
=== Usages ===
v1038 j1049 v1360 
=== Predecessor ===
v1031 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1358 lastLocationAccess: - #next: v1041  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1053 
y: j443 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1053 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1052 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1051 
=== Succesors ===
=== Usages ===
j1043 v1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1038 
=== Succesors ===
trueSuccessor: v1040 
falseSuccessor: v1039 
=== Usages ===
=== Predecessor ===
j1053 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1038 #trueSuccessor: v1040 #falseSuccessor: v1039  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1052 
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1052 #next: v1047  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1046 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1054 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1359 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1054 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1359 
lastLocationAccess: - 
=== Succesors ===
next: j1043 
=== Usages ===
v1360 
=== Predecessor ===
v1039 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1359 lastLocationAccess: - #next: j1043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1043 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1052 
=== Succesors ===
next: v1055 
=== Usages ===
v1055 
=== Predecessor ===
j1054 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1052 #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid v1360 <|@
result [v115|QWORD + v113|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1054 
index: j1053 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1054 index: j1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1360 
lastLocationAccess: - 
value: j1043 
stateAfter: - 
=== Succesors ===
next: v1056 
=== Usages ===
=== Predecessor ===
j1043 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1360 lastLocationAccess: - value: j1043 stateAfter: - #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid j1049 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1053 
y: j446 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1053 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1358 
lastLocationAccess: - 
value: j1049 
stateAfter: - 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1358 lastLocationAccess: - value: j1049 stateAfter: - #next: v1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1032 v1034 v1045 v1047 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1032 v1034 v1045 v1047 #next: v357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1278 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1278 lastLocationAccess: - value: a126 stateAfter: - #next: v1103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1064 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1064 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1065 
=== Usages ===
v1361 v1363 v1364 
=== Predecessor ===
v1103 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v363 j1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1065 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1279 
=== Succesors ===
next: i1090 
=== Usages ===
v1362 
=== Predecessor ===
j1064 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1279 #next: i1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
i1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1361 
lastLocationAccess: - 
=== Succesors ===
next: v1069 
=== Usages ===
v1097 
=== Predecessor ===
j1065 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1361 lastLocationAccess: - #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1090 
y: i455 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1090 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1097 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
i1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1097 #trueSuccessor: v1068 #falseSuccessor: v1067  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1091 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1362 <|@
result [v117|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1065 
index: - 
=== Succesors ===
=== Usages ===
a1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1065 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1091 <|@
result v118|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1362 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
a1092 v1098 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1362 lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1098 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
a1091 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1098 #trueSuccessor: v1075 #falseSuccessor: v1071  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1093 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1363 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1093 v1096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1093 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1363 
lastLocationAccess: - 
=== Succesors ===
next: v1081 
=== Usages ===
v1078 j1089 v1365 
=== Predecessor ===
v1071 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1363 lastLocationAccess: - #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1093 
y: j443 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1093 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1092 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1091 
=== Succesors ===
=== Usages ===
j1083 v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1091  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1079 
=== Usages ===
=== Predecessor ===
j1093 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v1080 #falseSuccessor: v1079  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1092 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1092 #next: v1087  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1094 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1094  <|@  <|@
f <@~|@floating>@ <|@
tid v1364 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1094 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1364 
lastLocationAccess: - 
=== Succesors ===
next: j1083 
=== Usages ===
v1365 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1364 lastLocationAccess: - #next: j1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1083 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1092 
=== Succesors ===
next: v1095 
=== Usages ===
v1095 
=== Predecessor ===
j1094 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1092 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid v1365 <|@
result [v121|QWORD + v119|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1094 
index: j1093 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1094 index: j1093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1365 
lastLocationAccess: - 
value: j1083 
stateAfter: - 
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
j1083 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1365 lastLocationAccess: - value: j1083 stateAfter: - #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1093 
y: j446 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1093 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1363 
lastLocationAccess: - 
value: j1089 
stateAfter: - 
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1363 lastLocationAccess: - value: j1089 stateAfter: - #next: v1085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1072 v1074 v1085 v1087 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1072 v1074 v1085 v1087 #next: v363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1279 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1279 lastLocationAccess: - value: a126 stateAfter: - #next: v1143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1104 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1104 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1105 
=== Usages ===
v1366 v1368 v1369 
=== Predecessor ===
v1143 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1105  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: j1221 
=== Succesors ===
=== Usages ===
v369 j1105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: j1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1105 <|@
result [v14|QWORD[.] + v38|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1280 
=== Succesors ===
next: i1130 
=== Usages ===
v1367 
=== Predecessor ===
j1104 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1280 #next: i1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1366 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1104 
index: - 
=== Succesors ===
=== Usages ===
i1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1130 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1366 
lastLocationAccess: - 
=== Succesors ===
next: v1109 
=== Usages ===
v1137 
=== Predecessor ===
j1105 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1366 lastLocationAccess: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1130 
y: i455 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1130 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1137 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1107 
=== Usages ===
=== Predecessor ===
i1130 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1137 #trueSuccessor: v1108 #falseSuccessor: v1107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1131 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1131  <|@  <|@
f <@~|@floating>@ <|@
tid v1367 <|@
result [v123|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1105 
index: - 
=== Succesors ===
=== Usages ===
a1131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1105 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1131 <|@
result v124|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1367 
lastLocationAccess: - 
=== Succesors ===
next: v1116 
=== Usages ===
a1132 v1138 
=== Predecessor ===
v1107 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1367 lastLocationAccess: - #next: v1116  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1131 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1138 
=== Succesors ===
trueSuccessor: v1115 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
a1131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1138 #trueSuccessor: v1115 #falseSuccessor: v1111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1115 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1133 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1368 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1104 
index: - 
=== Succesors ===
=== Usages ===
j1133 v1136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1133 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1368 
lastLocationAccess: - 
=== Succesors ===
next: v1121 
=== Usages ===
v1118 j1129 v1370 
=== Predecessor ===
v1111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1368 lastLocationAccess: - #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1133 
y: j443 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1133 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1132 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1131 
=== Succesors ===
=== Usages ===
j1123 v1126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1118 
=== Succesors ===
trueSuccessor: v1120 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
j1133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1118 #trueSuccessor: v1120 #falseSuccessor: v1119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1132 
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1132 #next: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1126 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1134 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1369 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1104 
index: - 
=== Succesors ===
=== Usages ===
j1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1134 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1369 
lastLocationAccess: - 
=== Succesors ===
next: j1123 
=== Usages ===
v1370 
=== Predecessor ===
v1119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1369 lastLocationAccess: - #next: j1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1123 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1132 
=== Succesors ===
next: v1135 
=== Usages ===
v1135 
=== Predecessor ===
j1134 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1132 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1370 <|@
result [v127|QWORD + v125|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1134 
index: j1133 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1134 index: j1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1370 
lastLocationAccess: - 
value: j1123 
stateAfter: - 
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
j1123 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1370 lastLocationAccess: - value: j1123 stateAfter: - #next: v1136  <|@  <|@
f <@~|@floating>@ <|@
tid j1129 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1133 
y: j446 
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1133 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1368 
lastLocationAccess: - 
value: j1129 
stateAfter: - 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1135 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1368 lastLocationAccess: - value: j1129 stateAfter: - #next: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1136 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1112 v1114 v1125 v1127 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1112 v1114 v1125 v1127 #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v192 
address: v1280 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v192 address: v1280 lastLocationAccess: - value: a126 stateAfter: - #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i184 
y: i375 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i184 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v177 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v177 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v177 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i204 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i184 i202 
=== Succesors ===
=== Usages ===
v198 i202 v1265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v197 values: i184 i202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.592871482082536
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v213 
=== Succesors ===
next: v201 
=== Usages ===
v199 v203 i204 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v213 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i1209 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i204 y: i1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v200 #falseSuccessor: v199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1184 
=== Usages ===
v212 
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1145 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1145 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1146 
=== Usages ===
v1371 v1373 v1374 
=== Predecessor ===
v1184 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
result [v14|QWORD[.] + v130|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a92 
index: i204 
=== Succesors ===
=== Usages ===
v209 j1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a92 index: i204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1146 <|@
result [v14|QWORD[.] + v130|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1265 
=== Succesors ===
next: i1171 
=== Usages ===
v1372 
=== Predecessor ===
j1145 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1265 #next: i1171  <|@  <|@
f <@~|@floating>@ <|@
tid v1371 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1145 
index: - 
=== Succesors ===
=== Usages ===
i1171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1171 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1371 
lastLocationAccess: - 
=== Succesors ===
next: v1150 
=== Usages ===
v1178 
=== Predecessor ===
j1146 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1371 lastLocationAccess: - #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1171 
y: i455 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1171 y: i455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1178 
=== Succesors ===
trueSuccessor: v1149 
falseSuccessor: v1148 
=== Usages ===
=== Predecessor ===
i1171 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1178 #trueSuccessor: v1149 #falseSuccessor: v1148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1172 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1372 <|@
result [v131|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1146 
index: - 
=== Succesors ===
=== Usages ===
a1172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1172 <|@
result v132|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1372 
lastLocationAccess: - 
=== Succesors ===
next: v1157 
=== Usages ===
a1173 v1179 
=== Predecessor ===
v1148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1372 lastLocationAccess: - #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1172 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1179 
=== Succesors ===
trueSuccessor: v1156 
falseSuccessor: v1152 
=== Usages ===
=== Predecessor ===
a1172 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1179 #trueSuccessor: v1156 #falseSuccessor: v1152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1156 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1174 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1174  <|@  <|@
f <@~|@floating>@ <|@
tid v1373 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1145 
index: - 
=== Succesors ===
=== Usages ===
j1174 v1177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1174 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1373 
lastLocationAccess: - 
=== Succesors ===
next: v1162 
=== Usages ===
v1159 j1170 v1375 
=== Predecessor ===
v1152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1373 lastLocationAccess: - #next: v1162  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1174 
y: j443 
=== Succesors ===
=== Usages ===
v1162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1174 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid a1173 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1172 
=== Succesors ===
=== Usages ===
j1164 v1167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1160 
=== Usages ===
=== Predecessor ===
j1174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1161 #falseSuccessor: v1160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1173 
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1173 #next: v1168  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1167 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1175 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1175  <|@  <|@
f <@~|@floating>@ <|@
tid v1374 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1145 
index: - 
=== Succesors ===
=== Usages ===
j1175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1175 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1374 
lastLocationAccess: - 
=== Succesors ===
next: j1164 
=== Usages ===
v1375 
=== Predecessor ===
v1160 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1374 lastLocationAccess: - #next: j1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1164 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1173 
=== Succesors ===
next: v1176 
=== Usages ===
v1176 
=== Predecessor ===
j1175 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1173 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid v1375 <|@
result [v135|QWORD + v133|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1175 
index: j1174 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1175 index: j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1375 
lastLocationAccess: - 
value: j1164 
stateAfter: - 
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
j1164 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1375 lastLocationAccess: - value: j1164 stateAfter: - #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid j1170 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1174 
y: j446 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1174 y: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1373 
lastLocationAccess: - 
value: j1170 
stateAfter: - 
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1373 lastLocationAccess: - value: j1170 stateAfter: - #next: v1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1153 v1155 v1166 v1168 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1153 v1155 v1166 v1168 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1186 v200 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1186 v200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v212 
address: v1265 
lastLocationAccess: - 
value: a126 
stateAfter: - 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v212 address: v1265 lastLocationAccess: - value: a126 stateAfter: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i204 
y: i4 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i204 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v197 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v197 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v197 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v61 v62 
=== Succesors ===
next: j1195 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v61 v62 #next: j1195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1195 <|@
result v140|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1204 
=== Usages ===
j1196 
=== Predecessor ===
v60 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1204 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v1206 
=== Usages ===
j1198 j1202 
=== Predecessor ===
j1195 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid j1196 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
x: j1195 
y: j1194 
=== Succesors ===
=== Usages ===
j1198 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1195 y: j1194  <|@  <|@
f <@~|@floating>@ <|@
tid j1198 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
x: j1196 
y: j1204 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1196 y: j1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
value: j1198 
stateAfter: - 
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
j1204 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - value: j1198 stateAfter: - #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i1201 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1202 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: i64
=== Inputs ===
x: j1204 
y: i1201 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1204 y: i1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: j1202 
stateAfter: - 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: j1202 stateAfter: - #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
sourceFile: HashMap.java
sourceLine: 869
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a92 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a92  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 116
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
reason: BoundsCheckException
speculation: {0x0000000000000298[index: 20, len: 24, hash: 0x62046db4]: GuardMovement@2[HotSpotMethod<HashMap.clear()>, 33, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr  132  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr  132  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[8, 14[[1082, 1088[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[1082, 1084[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v18|q [0, 6[[118, 120[[180, 182[[246, 248[[298, 300[[348, 350[[398, 400[[448, 450[[498, 500[[548, 550[[598, 600[[648, 650[[698, 700[[748, 750[[798, 800[[848, 850[[898, 900[[948, 950[[998, 1000[[1062, 1064[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 64[[1104, 1111[[1112, 1119[6 MustHaveRegister 16 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|q [14, 1093[14 MustHaveRegister 1092 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [16, 108[[112, 126[16 MustHaveRegister 18 MustHaveRegister 56 MustHaveRegister 82 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [18, 108[[112, 1076[18 MustHaveRegister 46 MustHaveRegister 50 ShouldHaveRegister 54 ShouldHaveRegister 62 ShouldHaveRegister 128 ShouldHaveRegister 130 MustHaveRegister 196 MustHaveRegister 1018 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [24, 1096[24 MustHaveRegister 32 MustHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [26, 1100[26 MustHaveRegister 34 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v5|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v4|d [56, 108[[112, 1076[[1104, 1111[56 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 193 LiveAtLoopEnd 214 MustHaveRegister 254 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister 1011 LiveAtLoopEnd 1030 MustHaveRegister 1070 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [84, 92[84 MustHaveRegister 86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [90, 102[90 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v16|d [92, 100[[116, 118[92 MustHaveRegister 100 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [130, 194[130 MustHaveRegister 136 MustHaveRegister 193 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v29|d [134, 190[[194, 199[136 ShouldHaveRegister 148 MustHaveRegister 188 MustHaveRegister 190 ShouldHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v24|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v22|d [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [196, 1012[196 MustHaveRegister 202 MustHaveRegister 1011 LiveAtLoopEnd  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v129|d [200, 1008[[1012, 1015[202 ShouldHaveRegister 214 MustHaveRegister 254 MustHaveRegister 256 ShouldHaveRegister 1008 MustHaveRegister 1014 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [216, 224[216 MustHaveRegister 218 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [222, 234[222 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v33|d [224, 232[[244, 246[224 MustHaveRegister 232 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [256, 1006[256 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [274, 286[274 MustHaveRegister 278 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v40|d [276, 284[[296, 298[276 MustHaveRegister 284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [318, 326[318 MustHaveRegister 320 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [324, 336[324 MustHaveRegister 328 MustHaveRegister 334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v46|d [326, 334[[346, 348[326 MustHaveRegister 334 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [368, 376[368 MustHaveRegister 370 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [374, 386[374 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v52|d [376, 384[[396, 398[376 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [418, 426[418 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [424, 436[424 MustHaveRegister 428 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v58|d [426, 434[[446, 448[426 MustHaveRegister 434 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [468, 476[468 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [474, 486[474 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v64|d [476, 484[[496, 498[476 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [486, 488[486 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [518, 526[518 MustHaveRegister 520 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [524, 536[524 MustHaveRegister 528 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v70|d [526, 534[[546, 548[526 MustHaveRegister 534 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d -1 [568, 576[568 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [574, 586[574 MustHaveRegister 578 MustHaveRegister 584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v76|d [576, 584[[596, 598[576 MustHaveRegister 584 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d -1 [618, 626[618 MustHaveRegister 620 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [624, 636[624 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q v82|d [626, 634[[646, 648[626 MustHaveRegister 634 MustHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q -1 [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q -1 [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [668, 676[668 MustHaveRegister 670 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q -1 [674, 686[674 MustHaveRegister 678 MustHaveRegister 684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q v88|d [676, 684[[696, 698[676 MustHaveRegister 684 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q -1 [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[v92|q]" v92|q -1 [686, 688[686 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [718, 726[718 MustHaveRegister 720 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [724, 736[724 MustHaveRegister 728 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q v94|d [726, 734[[746, 748[726 MustHaveRegister 734 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[v98|q]" v98|q -1 [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d -1 [768, 776[768 MustHaveRegister 770 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[v101|q]" v101|q -1 [774, 786[774 MustHaveRegister 778 MustHaveRegister 784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q v100|d [776, 784[[796, 798[776 MustHaveRegister 784 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[v103|q]" v103|q -1 [782, 784[782 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[v104|q]" v104|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q -1 [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d -1 [818, 826[818 MustHaveRegister 820 MustHaveRegister 826 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [824, 836[824 MustHaveRegister 828 MustHaveRegister 834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q v106|d [826, 834[[846, 848[826 MustHaveRegister 834 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q -1 [836, 838[836 MustHaveRegister 838 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[v111|q]" v111|q -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d -1 [868, 876[868 MustHaveRegister 870 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q -1 [874, 886[874 MustHaveRegister 878 MustHaveRegister 884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q v112|d [876, 884[[896, 898[876 MustHaveRegister 884 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[v118|d]" v118|d -1 [918, 926[918 MustHaveRegister 920 MustHaveRegister 926 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q -1 [924, 936[924 MustHaveRegister 928 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q v118|d [926, 934[[946, 948[926 MustHaveRegister 934 MustHaveRegister 948 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[v121|q]" v121|q -1 [932, 934[932 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[v123|q]" v123|q -1 [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d -1 [968, 976[968 MustHaveRegister 970 MustHaveRegister 976 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[v125|q]" v125|q -1 [974, 986[974 MustHaveRegister 978 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q v124|d [976, 984[[996, 998[976 MustHaveRegister 984 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[v127|q]" v127|q -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[v128|q]" v128|q -1 [986, 988[986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[v129|d]" v129|d v31|d [1008, 1011[1008 MustHaveRegister 1010 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[v130|d]" v130|d v31|d [1016, 1072[1018 ShouldHaveRegister 1030 MustHaveRegister 1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[v131|q]" v131|q -1 [1030, 1032[1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v132|d DWORD "[v132|d]" v132|d -1 [1032, 1040[1032 MustHaveRegister 1034 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[v133|q]" v133|q -1 [1038, 1050[1038 MustHaveRegister 1042 MustHaveRegister 1048 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[v134|q]" v134|q v132|d [1040, 1048[[1060, 1062[1040 MustHaveRegister 1048 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[v135|q]" v135|q -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[v136|q]" v136|q -1 [1050, 1052[1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[v137|d]" v137|d v130|d [1072, 1075[1072 MustHaveRegister 1074 ShouldHaveRegister  "NoSpillStore"
  v138|q QWORD "[v138|q]" v138|q -1 [1084, 1086[1084 MustHaveRegister 1086 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[v139|q]" v139|q v138|q [1086, 1088[1086 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[v140|q]" v140|q v139|q [1088, 1092[1088 MustHaveRegister 1092 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[v141|q]" v141|q -1 [1090, 1098[1090 MustHaveRegister 1094 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[v142|q]" v142|q v140|q [1092, 1094[1092 MustHaveRegister 1094 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[v143|q]" v143|q v142|q [1094, 1096[1094 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[v144|q]" v144|q v141|q [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[8, 14[[1082, 1088[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[1082, 1084[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v18|q [0, 6[[118, 120[[180, 182[[246, 248[[298, 300[[348, 350[[398, 400[[448, 450[[498, 500[[548, 550[[598, 600[[648, 650[[698, 700[[748, 750[[798, 800[[848, 850[[898, 900[[948, 950[[998, 1000[[1062, 1064[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 64[[1104, 1111[[1112, 1119[6 MustHaveRegister 16 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rdx|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v2|q [14, 1093[14 MustHaveRegister 1092 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [16, 108[[112, 126[16 MustHaveRegister 18 MustHaveRegister 56 MustHaveRegister 82 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [18, 108[[112, 1076[18 MustHaveRegister 46 MustHaveRegister 50 ShouldHaveRegister 54 ShouldHaveRegister 62 ShouldHaveRegister 128 ShouldHaveRegister 130 MustHaveRegister 196 MustHaveRegister 1018 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 1096[24 MustHaveRegister 32 MustHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [26, 1100[26 MustHaveRegister 34 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v5|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r11|q]" v12|q -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r8|q]" v13|q -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbx|q]" v14|q v4|d [56, 108[[112, 1076[[1104, 1111[56 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 193 LiveAtLoopEnd 214 MustHaveRegister 254 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister 1011 LiveAtLoopEnd 1030 MustHaveRegister 1070 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [84, 92[84 MustHaveRegister 86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [90, 102[90 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|d [92, 100[[116, 118[92 MustHaveRegister 100 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdx|d]" v21|d -1 [130, 194[130 MustHaveRegister 136 MustHaveRegister 193 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v29|d [134, 190[[194, 199[136 ShouldHaveRegister 148 MustHaveRegister 188 MustHaveRegister 190 ShouldHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q v24|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v22|d [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdx|d]" v30|d -1 [196, 1012[196 MustHaveRegister 202 MustHaveRegister 1011 LiveAtLoopEnd  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v129|d [200, 1008[[1012, 1015[202 ShouldHaveRegister 214 MustHaveRegister 254 MustHaveRegister 256 ShouldHaveRegister 1008 MustHaveRegister 1014 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rsi|d]" v33|d -1 [216, 224[216 MustHaveRegister 218 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [222, 234[222 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v33|d [224, 232[[244, 246[224 MustHaveRegister 232 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r8|q]" v38|q -1 [256, 1006[256 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d -1 [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q -1 [274, 286[274 MustHaveRegister 278 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v40|d [276, 284[[296, 298[276 MustHaveRegister 284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbp|q]" v43|q -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d -1 [318, 326[318 MustHaveRegister 320 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdi|q]" v47|q -1 [324, 336[324 MustHaveRegister 328 MustHaveRegister 334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v46|d [326, 334[[346, 348[326 MustHaveRegister 334 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbp|q]" v49|q -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rsi|d]" v52|d -1 [368, 376[368 MustHaveRegister 370 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q -1 [374, 386[374 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v52|d [376, 384[[396, 398[376 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbp|q]" v55|q -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q -1 [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [418, 426[418 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q -1 [424, 436[424 MustHaveRegister 428 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|d [426, 434[[446, 448[426 MustHaveRegister 434 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rbp|q]" v61|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rsi|d]" v64|d -1 [468, 476[468 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q -1 [474, 486[474 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v64|d [476, 484[[496, 498[476 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbp|q]" v67|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q -1 [486, 488[486 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [518, 526[518 MustHaveRegister 520 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q -1 [524, 536[524 MustHaveRegister 528 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v70|d [526, 534[[546, 548[526 MustHaveRegister 534 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rbp|q]" v73|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d -1 [568, 576[568 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [574, 586[574 MustHaveRegister 578 MustHaveRegister 584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q v76|d [576, 584[[596, 598[576 MustHaveRegister 584 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rbp|q]" v79|q -1 [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d -1 [618, 626[618 MustHaveRegister 620 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [624, 636[624 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q v82|d [626, 634[[646, 648[626 MustHaveRegister 634 MustHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rbp|q]" v85|q -1 [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rsi|q]" v86|q -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q -1 [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rsi|d]" v88|d -1 [668, 676[668 MustHaveRegister 670 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rdi|q]" v89|q -1 [674, 686[674 MustHaveRegister 678 MustHaveRegister 684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q v88|d [676, 684[[696, 698[676 MustHaveRegister 684 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rbp|q]" v91|q -1 [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [686, 688[686 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rsi|q]" v93|q -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rsi|d]" v94|d -1 [718, 726[718 MustHaveRegister 720 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [724, 736[724 MustHaveRegister 728 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q v94|d [726, 734[[746, 748[726 MustHaveRegister 734 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[rbp|q]" v97|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rsi|q]" v98|q -1 [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rsi|d]" v100|d -1 [768, 776[768 MustHaveRegister 770 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[rdi|q]" v101|q -1 [774, 786[774 MustHaveRegister 778 MustHaveRegister 784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q v100|d [776, 784[[796, 798[776 MustHaveRegister 784 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rbp|q]" v103|q -1 [782, 784[782 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rsi|q]" v105|q -1 [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rsi|d]" v106|d -1 [818, 826[818 MustHaveRegister 820 MustHaveRegister 826 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [824, 836[824 MustHaveRegister 828 MustHaveRegister 834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q v106|d [826, 834[[846, 848[826 MustHaveRegister 834 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rbp|q]" v109|q -1 [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[rsi|q]" v110|q -1 [836, 838[836 MustHaveRegister 838 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rsi|d]" v112|d -1 [868, 876[868 MustHaveRegister 870 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rdi|q]" v113|q -1 [874, 886[874 MustHaveRegister 878 MustHaveRegister 884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q v112|d [876, 884[[896, 898[876 MustHaveRegister 884 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rbp|q]" v115|q -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[rsi|d]" v118|d -1 [918, 926[918 MustHaveRegister 920 MustHaveRegister 926 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rdi|q]" v119|q -1 [924, 936[924 MustHaveRegister 928 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q v118|d [926, 934[[946, 948[926 MustHaveRegister 934 MustHaveRegister 948 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rbp|q]" v121|q -1 [932, 934[932 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[rsi|q]" v122|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[rsi|q]" v123|q -1 [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rsi|d]" v124|d -1 [968, 976[968 MustHaveRegister 970 MustHaveRegister 976 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rdi|q]" v125|q -1 [974, 986[974 MustHaveRegister 978 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q v124|d [976, 984[[996, 998[976 MustHaveRegister 984 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rbp|q]" v127|q -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [986, 988[986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[r11|d]" v129|d v31|d [1008, 1011[1008 MustHaveRegister 1010 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[r11|d]" v130|d v31|d [1016, 1072[1018 ShouldHaveRegister 1030 MustHaveRegister 1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q -1 [1030, 1032[1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v132|d DWORD "[rsi|d]" v132|d -1 [1032, 1040[1032 MustHaveRegister 1034 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[rdx|q]" v133|q -1 [1038, 1050[1038 MustHaveRegister 1042 MustHaveRegister 1048 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q v132|d [1040, 1048[[1060, 1062[1040 MustHaveRegister 1048 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[r8|q]" v135|q -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[rsi|q]" v136|q -1 [1050, 1052[1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[r11|d]" v137|d v130|d [1072, 1075[1072 MustHaveRegister 1074 ShouldHaveRegister  "NoSpillStore"
  v138|q QWORD "[r11|q]" v138|q -1 [1084, 1086[1084 MustHaveRegister 1086 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[r11|q]" v139|q v138|q [1086, 1088[1086 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[r11|q]" v140|q v139|q [1088, 1092[1088 MustHaveRegister 1092 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r8|q]" v141|q -1 [1090, 1098[1090 MustHaveRegister 1094 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[r11|q]" v142|q v140|q [1092, 1094[1092 MustHaveRegister 1094 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[r11|q]" v143|q v142|q [1094, 1096[1094 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[r8|q]" v144|q v141|q [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr  132  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[8, 14[[1082, 1088[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[1082, 1084[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v18|q [0, 6[[118, 120[[180, 182[[246, 248[[298, 300[[348, 350[[398, 400[[448, 450[[498, 500[[548, 550[[598, 600[[648, 650[[698, 700[[748, 750[[798, 800[[848, 850[[898, 900[[948, 950[[998, 1000[[1062, 1064[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 64[[1104, 1111[[1112, 1119[6 MustHaveRegister 16 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rdx|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v2|q [14, 1093[14 MustHaveRegister 1092 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [16, 108[[112, 126[16 MustHaveRegister 18 MustHaveRegister 56 MustHaveRegister 82 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [18, 108[[112, 1076[18 MustHaveRegister 46 MustHaveRegister 50 ShouldHaveRegister 54 ShouldHaveRegister 62 ShouldHaveRegister 128 ShouldHaveRegister 130 MustHaveRegister 196 MustHaveRegister 1018 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 1096[24 MustHaveRegister 32 MustHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [26, 1100[26 MustHaveRegister 34 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v5|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r11|q]" v12|q -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r8|q]" v13|q -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbx|q]" v14|q v4|d [56, 108[[112, 1076[[1104, 1111[56 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 193 LiveAtLoopEnd 214 MustHaveRegister 254 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister 1011 LiveAtLoopEnd 1030 MustHaveRegister 1070 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [84, 92[84 MustHaveRegister 86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [90, 102[90 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|d [92, 100[[116, 118[92 MustHaveRegister 100 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdx|d]" v21|d -1 [130, 194[130 MustHaveRegister 136 MustHaveRegister 193 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v29|d [134, 190[[194, 199[136 ShouldHaveRegister 148 MustHaveRegister 188 MustHaveRegister 190 ShouldHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q v24|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v22|d [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdx|d]" v30|d -1 [196, 1012[196 MustHaveRegister 202 MustHaveRegister 1011 LiveAtLoopEnd  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v129|d [200, 1008[[1012, 1015[202 ShouldHaveRegister 214 MustHaveRegister 254 MustHaveRegister 256 ShouldHaveRegister 1008 MustHaveRegister 1014 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rsi|d]" v33|d -1 [216, 224[216 MustHaveRegister 218 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [222, 234[222 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v33|d [224, 232[[244, 246[224 MustHaveRegister 232 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r8|q]" v38|q -1 [256, 1006[256 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d -1 [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q -1 [274, 286[274 MustHaveRegister 278 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v40|d [276, 284[[296, 298[276 MustHaveRegister 284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbp|q]" v43|q -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d -1 [318, 326[318 MustHaveRegister 320 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdi|q]" v47|q -1 [324, 336[324 MustHaveRegister 328 MustHaveRegister 334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v46|d [326, 334[[346, 348[326 MustHaveRegister 334 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbp|q]" v49|q -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rsi|d]" v52|d -1 [368, 376[368 MustHaveRegister 370 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q -1 [374, 386[374 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v52|d [376, 384[[396, 398[376 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbp|q]" v55|q -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q -1 [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [418, 426[418 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q -1 [424, 436[424 MustHaveRegister 428 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|d [426, 434[[446, 448[426 MustHaveRegister 434 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rbp|q]" v61|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rsi|d]" v64|d -1 [468, 476[468 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q -1 [474, 486[474 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v64|d [476, 484[[496, 498[476 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbp|q]" v67|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q -1 [486, 488[486 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [518, 526[518 MustHaveRegister 520 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q -1 [524, 536[524 MustHaveRegister 528 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v70|d [526, 534[[546, 548[526 MustHaveRegister 534 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rbp|q]" v73|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d -1 [568, 576[568 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [574, 586[574 MustHaveRegister 578 MustHaveRegister 584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q v76|d [576, 584[[596, 598[576 MustHaveRegister 584 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rbp|q]" v79|q -1 [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d -1 [618, 626[618 MustHaveRegister 620 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [624, 636[624 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q v82|d [626, 634[[646, 648[626 MustHaveRegister 634 MustHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rbp|q]" v85|q -1 [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rsi|q]" v86|q -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q -1 [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rsi|d]" v88|d -1 [668, 676[668 MustHaveRegister 670 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rdi|q]" v89|q -1 [674, 686[674 MustHaveRegister 678 MustHaveRegister 684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q v88|d [676, 684[[696, 698[676 MustHaveRegister 684 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rbp|q]" v91|q -1 [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [686, 688[686 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rsi|q]" v93|q -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rsi|d]" v94|d -1 [718, 726[718 MustHaveRegister 720 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [724, 736[724 MustHaveRegister 728 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q v94|d [726, 734[[746, 748[726 MustHaveRegister 734 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[rbp|q]" v97|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rsi|q]" v98|q -1 [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rsi|d]" v100|d -1 [768, 776[768 MustHaveRegister 770 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[rdi|q]" v101|q -1 [774, 786[774 MustHaveRegister 778 MustHaveRegister 784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q v100|d [776, 784[[796, 798[776 MustHaveRegister 784 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rbp|q]" v103|q -1 [782, 784[782 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rsi|q]" v105|q -1 [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rsi|d]" v106|d -1 [818, 826[818 MustHaveRegister 820 MustHaveRegister 826 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [824, 836[824 MustHaveRegister 828 MustHaveRegister 834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q v106|d [826, 834[[846, 848[826 MustHaveRegister 834 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rbp|q]" v109|q -1 [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[rsi|q]" v110|q -1 [836, 838[836 MustHaveRegister 838 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rsi|d]" v112|d -1 [868, 876[868 MustHaveRegister 870 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rdi|q]" v113|q -1 [874, 886[874 MustHaveRegister 878 MustHaveRegister 884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q v112|d [876, 884[[896, 898[876 MustHaveRegister 884 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rbp|q]" v115|q -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[rsi|d]" v118|d -1 [918, 926[918 MustHaveRegister 920 MustHaveRegister 926 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rdi|q]" v119|q -1 [924, 936[924 MustHaveRegister 928 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q v118|d [926, 934[[946, 948[926 MustHaveRegister 934 MustHaveRegister 948 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rbp|q]" v121|q -1 [932, 934[932 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[rsi|q]" v122|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[rsi|q]" v123|q -1 [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rsi|d]" v124|d -1 [968, 976[968 MustHaveRegister 970 MustHaveRegister 976 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rdi|q]" v125|q -1 [974, 986[974 MustHaveRegister 978 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q v124|d [976, 984[[996, 998[976 MustHaveRegister 984 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rbp|q]" v127|q -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [986, 988[986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[r11|d]" v129|d v31|d [1008, 1011[1008 MustHaveRegister 1010 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[r11|d]" v130|d v31|d [1016, 1072[1018 ShouldHaveRegister 1030 MustHaveRegister 1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q -1 [1030, 1032[1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v132|d DWORD "[rsi|d]" v132|d -1 [1032, 1040[1032 MustHaveRegister 1034 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[rdx|q]" v133|q -1 [1038, 1050[1038 MustHaveRegister 1042 MustHaveRegister 1048 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q v132|d [1040, 1048[[1060, 1062[1040 MustHaveRegister 1048 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[r8|q]" v135|q -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[rsi|q]" v136|q -1 [1050, 1052[1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[r11|d]" v137|d v130|d [1072, 1075[1072 MustHaveRegister 1074 ShouldHaveRegister  "NoSpillStore"
  v138|q QWORD "[r11|q]" v138|q -1 [1084, 1086[1084 MustHaveRegister 1086 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[r11|q]" v139|q v138|q [1086, 1088[1086 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[r11|q]" v140|q v139|q [1088, 1092[1088 MustHaveRegister 1092 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r8|q]" v141|q -1 [1090, 1098[1090 MustHaveRegister 1094 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[r11|q]" v142|q v140|q [1092, 1094[1092 MustHaveRegister 1094 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[r11|q]" v143|q v142|q [1094, 1096[1094 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[r8|q]" v144|q v141|q [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr  132  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[v29|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[v22|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[v129|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[v31|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[v137|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[8, 14[[1082, 1088[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[1082, 1084[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v18|q [0, 6[[118, 120[[180, 182[[246, 248[[298, 300[[348, 350[[398, 400[[448, 450[[498, 500[[548, 550[[598, 600[[648, 650[[698, 700[[748, 750[[798, 800[[848, 850[[898, 900[[948, 950[[998, 1000[[1062, 1064[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 64[[1104, 1111[[1112, 1119[6 MustHaveRegister 16 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rdx|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v2|q [14, 1093[14 MustHaveRegister 1092 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [16, 108[[112, 126[16 MustHaveRegister 18 MustHaveRegister 56 MustHaveRegister 82 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [18, 108[[112, 1076[18 MustHaveRegister 46 MustHaveRegister 50 ShouldHaveRegister 54 ShouldHaveRegister 62 ShouldHaveRegister 128 ShouldHaveRegister 130 MustHaveRegister 196 MustHaveRegister 1018 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 1096[24 MustHaveRegister 32 MustHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [26, 1100[26 MustHaveRegister 34 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v5|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r11|q]" v12|q -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r8|q]" v13|q -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbx|q]" v14|q v4|d [56, 108[[112, 1076[[1104, 1111[56 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 193 LiveAtLoopEnd 214 MustHaveRegister 254 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister 1011 LiveAtLoopEnd 1030 MustHaveRegister 1070 MustHaveRegister 1075 LiveAtLoopEnd  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [84, 92[84 MustHaveRegister 86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [90, 102[90 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|d [92, 100[[116, 118[92 MustHaveRegister 100 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdx|d]" v21|d -1 [130, 194[130 MustHaveRegister 136 MustHaveRegister 193 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v29|d [134, 190[[194, 199[136 ShouldHaveRegister 148 MustHaveRegister 188 MustHaveRegister 190 ShouldHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q v24|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v22|d [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdx|d]" v30|d -1 [196, 1012[196 MustHaveRegister 202 MustHaveRegister 1011 LiveAtLoopEnd  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v129|d [200, 1008[[1012, 1015[202 ShouldHaveRegister 214 MustHaveRegister 254 MustHaveRegister 256 ShouldHaveRegister 1008 MustHaveRegister 1014 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rsi|d]" v33|d -1 [216, 224[216 MustHaveRegister 218 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r8|q]" v34|q -1 [222, 234[222 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v33|d [224, 232[[244, 246[224 MustHaveRegister 232 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r8|q]" v38|q -1 [256, 1006[256 MustHaveRegister 266 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister 356 MustHaveRegister 366 MustHaveRegister 406 MustHaveRegister 416 MustHaveRegister 456 MustHaveRegister 466 MustHaveRegister 506 MustHaveRegister 516 MustHaveRegister 556 MustHaveRegister 566 MustHaveRegister 606 MustHaveRegister 616 MustHaveRegister 656 MustHaveRegister 666 MustHaveRegister 706 MustHaveRegister 716 MustHaveRegister 756 MustHaveRegister 766 MustHaveRegister 806 MustHaveRegister 816 MustHaveRegister 856 MustHaveRegister 866 MustHaveRegister 906 MustHaveRegister 916 MustHaveRegister 956 MustHaveRegister 966 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d -1 [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q -1 [274, 286[274 MustHaveRegister 278 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v40|d [276, 284[[296, 298[276 MustHaveRegister 284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbp|q]" v43|q -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d -1 [318, 326[318 MustHaveRegister 320 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdi|q]" v47|q -1 [324, 336[324 MustHaveRegister 328 MustHaveRegister 334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v46|d [326, 334[[346, 348[326 MustHaveRegister 334 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbp|q]" v49|q -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rsi|d]" v52|d -1 [368, 376[368 MustHaveRegister 370 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q -1 [374, 386[374 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v52|d [376, 384[[396, 398[376 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rbp|q]" v55|q -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q -1 [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q -1 [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [418, 426[418 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q -1 [424, 436[424 MustHaveRegister 428 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|d [426, 434[[446, 448[426 MustHaveRegister 434 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rbp|q]" v61|q -1 [432, 434[432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rsi|d]" v64|d -1 [468, 476[468 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q -1 [474, 486[474 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v64|d [476, 484[[496, 498[476 MustHaveRegister 484 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbp|q]" v67|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q -1 [486, 488[486 MustHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [518, 526[518 MustHaveRegister 520 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q -1 [524, 536[524 MustHaveRegister 528 MustHaveRegister 534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q v70|d [526, 534[[546, 548[526 MustHaveRegister 534 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rbp|q]" v73|q -1 [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [536, 538[536 MustHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [566, 568[566 MustHaveRegister 568 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d -1 [568, 576[568 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [574, 586[574 MustHaveRegister 578 MustHaveRegister 584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q v76|d [576, 584[[596, 598[576 MustHaveRegister 584 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rbp|q]" v79|q -1 [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d -1 [618, 626[618 MustHaveRegister 620 MustHaveRegister 626 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [624, 636[624 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q v82|d [626, 634[[646, 648[626 MustHaveRegister 634 MustHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rbp|q]" v85|q -1 [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rsi|q]" v86|q -1 [636, 638[636 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q -1 [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rsi|d]" v88|d -1 [668, 676[668 MustHaveRegister 670 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rdi|q]" v89|q -1 [674, 686[674 MustHaveRegister 678 MustHaveRegister 684 MustHaveRegister 686 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q v88|d [676, 684[[696, 698[676 MustHaveRegister 684 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rbp|q]" v91|q -1 [682, 684[682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [686, 688[686 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rsi|q]" v93|q -1 [716, 718[716 MustHaveRegister 718 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[rsi|d]" v94|d -1 [718, 726[718 MustHaveRegister 720 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [724, 736[724 MustHaveRegister 728 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q v94|d [726, 734[[746, 748[726 MustHaveRegister 734 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[rbp|q]" v97|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rsi|q]" v98|q -1 [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q -1 [766, 768[766 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rsi|d]" v100|d -1 [768, 776[768 MustHaveRegister 770 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[rdi|q]" v101|q -1 [774, 786[774 MustHaveRegister 778 MustHaveRegister 784 MustHaveRegister 786 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q v100|d [776, 784[[796, 798[776 MustHaveRegister 784 MustHaveRegister 798 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rbp|q]" v103|q -1 [782, 784[782 MustHaveRegister 784 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rsi|q]" v105|q -1 [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rsi|d]" v106|d -1 [818, 826[818 MustHaveRegister 820 MustHaveRegister 826 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [824, 836[824 MustHaveRegister 828 MustHaveRegister 834 MustHaveRegister 836 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q v106|d [826, 834[[846, 848[826 MustHaveRegister 834 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rbp|q]" v109|q -1 [832, 834[832 MustHaveRegister 834 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[rsi|q]" v110|q -1 [836, 838[836 MustHaveRegister 838 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rsi|q]" v111|q -1 [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rsi|d]" v112|d -1 [868, 876[868 MustHaveRegister 870 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rdi|q]" v113|q -1 [874, 886[874 MustHaveRegister 878 MustHaveRegister 884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q v112|d [876, 884[[896, 898[876 MustHaveRegister 884 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rbp|q]" v115|q -1 [882, 884[882 MustHaveRegister 884 MustHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q -1 [886, 888[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rsi|q]" v117|q -1 [916, 918[916 MustHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v118|d DWORD "[rsi|d]" v118|d -1 [918, 926[918 MustHaveRegister 920 MustHaveRegister 926 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rdi|q]" v119|q -1 [924, 936[924 MustHaveRegister 928 MustHaveRegister 934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q v118|d [926, 934[[946, 948[926 MustHaveRegister 934 MustHaveRegister 948 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[rbp|q]" v121|q -1 [932, 934[932 MustHaveRegister 934 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[rsi|q]" v122|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[rsi|q]" v123|q -1 [966, 968[966 MustHaveRegister 968 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rsi|d]" v124|d -1 [968, 976[968 MustHaveRegister 970 MustHaveRegister 976 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rdi|q]" v125|q -1 [974, 986[974 MustHaveRegister 978 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q v124|d [976, 984[[996, 998[976 MustHaveRegister 984 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[rbp|q]" v127|q -1 [982, 984[982 MustHaveRegister 984 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [986, 988[986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[r11|d]" v129|d v31|d [1008, 1011[1008 MustHaveRegister 1010 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[r11|d]" v130|d v31|d [1016, 1072[1018 ShouldHaveRegister 1030 MustHaveRegister 1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v131|q QWORD "[rsi|q]" v131|q -1 [1030, 1032[1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v132|d DWORD "[rsi|d]" v132|d -1 [1032, 1040[1032 MustHaveRegister 1034 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v133|q QWORD "[rdx|q]" v133|q -1 [1038, 1050[1038 MustHaveRegister 1042 MustHaveRegister 1048 MustHaveRegister 1050 MustHaveRegister  "NoSpillStore"
  v134|q QWORD "[rsi|q]" v134|q v132|d [1040, 1048[[1060, 1062[1040 MustHaveRegister 1048 MustHaveRegister 1062 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[r8|q]" v135|q -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v136|q QWORD "[rsi|q]" v136|q -1 [1050, 1052[1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v137|d DWORD "[r11|d]" v137|d v130|d [1072, 1075[1072 MustHaveRegister 1074 ShouldHaveRegister  "NoSpillStore"
  v138|q QWORD "[r11|q]" v138|q -1 [1084, 1086[1084 MustHaveRegister 1086 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[r11|q]" v139|q v138|q [1086, 1088[1086 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[r11|q]" v140|q v139|q [1088, 1092[1088 MustHaveRegister 1092 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r8|q]" v141|q -1 [1090, 1098[1090 MustHaveRegister 1094 ShouldHaveRegister 1098 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[r11|q]" v142|q v140|q [1092, 1094[1092 MustHaveRegister 1094 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[r11|q]" v143|q v142|q [1094, 1096[1094 MustHaveRegister 1096 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[r8|q]" v144|q v141|q [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [v130|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v11|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction v13|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v13|QWORD, y: v12|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v15|QWORD[*] = LEA [v4|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v23|QWORD[.+] = LEA [v14|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction v24|DWORD[_] = MOV [v23|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v24|DWORD[_], y: v24|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v25|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v25|QWORD, y: v25|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v27|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v27|QWORD + v25|QWORD * 1 - 8], y: v26|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v28|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v14|QWORD[.] + v22|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v30|DWORD = LEA [v5|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v30|DWORD, y: v31|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v32|QWORD[.+] = LEA [v14|QWORD[.] + v31|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction v33|DWORD[_] = MOV [v32|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: v33|DWORD[_], y: v33|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v34|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction v36|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: v37|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [v14|QWORD[.] + v31|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction v38|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction v39|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction v40|DWORD[_] = MOV [v39|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v41|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: v41|QWORD, y: v41|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction v43|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [v43|QWORD + v41|QWORD * 1 - 8], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction v44|QWORD = LEA [v41|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: v44|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction v45|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction v46|DWORD[_] = MOV [v45|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v46|DWORD[_], y: v46|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v47|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: v47|QWORD, y: v47|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction v49|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v49|QWORD + v47|QWORD * 1 - 8], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction v50|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: v50|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v51|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction v52|DWORD[_] = MOV [v51|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: v52|DWORD[_], y: v52|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction v53|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v53|QWORD, y: v53|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v55|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [v55|QWORD + v53|QWORD * 1 - 8], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction v56|QWORD = LEA [v53|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: v56|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction v57|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v63|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction v64|DWORD[_] = MOV [v63|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: v64|DWORD[_], y: v64|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction v65|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: v65|QWORD, y: v65|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction v67|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [v67|QWORD + v65|QWORD * 1 - 8], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v68|QWORD = LEA [v65|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: v68|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction v69|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction v70|DWORD[_] = MOV [v69|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: v70|DWORD[_], y: v70|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction v71|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: v71|QWORD, y: v71|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction v73|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [v73|QWORD + v71|QWORD * 1 - 8], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction v74|QWORD = LEA [v71|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: v74|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction v75|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction v76|DWORD[_] = MOV [v75|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: v76|DWORD[_], y: v76|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction v77|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction v79|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: v80|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction v81|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction v82|DWORD[_] = MOV [v81|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v82|DWORD[_], y: v82|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v83|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: v83|QWORD, y: v83|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction v85|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [v85|QWORD + v83|QWORD * 1 - 8], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction v86|QWORD = LEA [v83|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: v86|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction v87|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction v88|DWORD[_] = MOV [v87|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: v88|DWORD[_], y: v88|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction v89|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction v90|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: v89|QWORD, y: v89|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v91|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [v91|QWORD + v89|QWORD * 1 - 8], y: v90|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction v92|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: v92|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction v93|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction v94|DWORD[_] = MOV [v93|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: v94|DWORD[_], y: v94|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction v95|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v95|QWORD, y: v95|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction v97|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [v97|QWORD + v95|QWORD * 1 - 8], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction v98|QWORD = LEA [v95|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: v98|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction v99|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction v100|DWORD[_] = MOV [v99|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: v100|DWORD[_], y: v100|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v101|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v101|QWORD, y: v101|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction v103|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [v103|QWORD + v101|QWORD * 1 - 8], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction v104|QWORD = LEA [v101|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: v104|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction v105|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction v106|DWORD[_] = MOV [v105|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: v106|DWORD[_], y: v106|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction v107|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v107|QWORD, y: v107|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction v109|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [v109|QWORD + v107|QWORD * 1 - 8], y: v108|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction v110|QWORD = LEA [v107|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: v110|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction v111|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction v112|DWORD[_] = MOV [v111|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: v112|DWORD[_], y: v112|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction v113|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v112|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: v113|QWORD, y: v113|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction v115|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [v115|QWORD + v113|QWORD * 1 - 8], y: v114|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction v116|QWORD = LEA [v113|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: v116|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction v117|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction v118|DWORD[_] = MOV [v117|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: v118|DWORD[_], y: v118|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction v119|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction v120|QWORD[.] = UNCOMPRESSPOINTER (input: v118|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: v119|QWORD, y: v119|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction v121|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [v121|QWORD + v119|QWORD * 1 - 8], y: v120|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction v122|QWORD = LEA [v119|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: v122|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction v123|QWORD[.+] = LEA [v14|QWORD[.] + v38|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [v14|QWORD[.] + v38|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction v129|DWORD = LEA [v31|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v130|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction v131|QWORD[.+] = LEA [v14|QWORD[.] + v130|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction v132|DWORD[_] = MOV [v131|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: v132|DWORD[_], y: v132|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction v133|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: v133|QWORD, y: v133|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v135|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [v135|QWORD + v133|QWORD * 1 - 8], y: v134|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction v136|QWORD = LEA [v133|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: v136|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [v14|QWORD[.] + v130|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction v137|DWORD = INC v130|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 16464], y: v143|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 16464], y: v144|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606145667850569171
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580493880038615520
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576821496131483840
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576306234826899262
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546956585165774022
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047360
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688754
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047361
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047362
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688755
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047363
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688757
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047364
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688758
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688760
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612486860680047365
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583201316526688762
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576306234826899263
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546956585165774024
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607031273217823924
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 16464] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 16464] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 16464] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 16464] <|@ <|@
      nr   38  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r8|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602527673590453425
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607031273217823921
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607031273217823922
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  128  <|@ instruction CMP rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576878747387548798
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607120728305425413
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222923384138237
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561383404144924769
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560558986057589438
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546223769088142617
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1084  <|@ instruction r11|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD = SHL r11|QWORD y: 32 size: QWORD <|@ <|@
      nr 1088  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1090  <|@ instruction r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD <|@ <|@
      nr 1092  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607031273217823923
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161799
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161800
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161801
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  308  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161802
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161803
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161804
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  558  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  758  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  908  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  958  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613076243111161805
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = LEA [r11|DWORD + 16] size: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615290256529298676
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576878747387548799
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1072  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607120728305425414
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr 1018  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  720  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  920  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  968  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  970  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  770  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  784  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  786  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  820  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821437
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  870  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583355
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  878  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778562
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821436
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  470  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583353
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  478  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778560
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821435
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583351
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778558
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821434
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  370  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583349
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778557
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  268  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  270  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821433
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583348
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778556
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598386679366821432
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  218  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597655127298583346
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596806416597778554
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862279
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862278
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862276
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862274
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582446907014862272
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222923384138238
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1034  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561383404144924771
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560558986057589440
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546223769088142619
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591749263601202930
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591040779307399130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590403143442975710
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576254708696440800
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction MOV [r15|QWORD + 1156] y: -29723 size: DWORD <|@ <|@
      nr 1108  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1114  <|@ instruction MOV [r15|QWORD + 1156] y: -43795 size: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85ba07000048896c24100f318bd248c1e2204c8bd24c0bd08b56248b04d50c00000049bbaddeaddeaddeadde458b437c458b4b70418b4b74458b5b78ff4618837e14010f8c53070000c746140000000085c00f84ab000000448bd841ffcb4d63db448bc08bda48c1e3034d3bc30f870900000083f8020f83fd06000041807f40000f85af060000c704d5100000000000000083f803ba020000000f42d041bb01000000e91a00000066669041807f40000f851700000042c7449b100000000041ffc3413bd30f8e7c000000ebde4a8d749b108b3685f674de4d8b472848c1e6034d85c00f8413000000498b7f384a897407f8498d70f849897728ebbae800000000ebb30f31448bda49c1e3204c0bd84e8b04cd504000004d2bda4d03d84e891ccd5040000049ffc04c8904cd50400000488b6c24104883c418493ba7500400000f8789060000c38d50f0e9630100006666660f1f84000000000066666690660f1f8400000000006666669041807f40000f85aa04000042c7449b10000000004d63c341807f40000f852704000042c74483140000000041807f40000f854904000042c74483180000000041807f40000f85c903000042c744831c0000000041807f40000f857f03000042c74483200000000041807f40000f853503000042c74483240000000041807f40000f850501000042c74483280000000041807f40000f859301000042c744832c0000000041807f40000f851301000042c74483300000000041807f40000f853501000042c74483340000000041807f40000f858d01000042c74483380000000041807f40000f851b02000042c744833c0000000041807f40000f853d02000042c74483400000000041807f40000f855f02000042c74483440000000041807f40000f857301000042c74483480000000041807f40000f859501000042c744834c00000000458d5b10413bd30f8fb0feffffe92b0000006666660f1f84000000000041807f40000f852004000042c7449b100000000041ffc3660f1f840000000000413bc30f8e0ffeffffebd54a8d7483288b3685f60f84ecfeffff498b7f2848c1e6034885ff0f844a030000498b6f384889743df8488d77f849897728e9c5feffff4a8d7483308b3685f60f84defeffff498b7f2848c1e6034885ff0f840a030000498b6f384889743df8488d77f849897728e9b7feffff4a8d7483348b3685f60f84bcfeffff498b7f2848c1e6034885ff0f8406030000498b6f384889743df8488d77f849897728e995feffff4a8d74832c8b3685f60f845efeffff498b7f2848c1e6034885ff0f84bc020000498b6f384889743df8488d77f849897728e937feffff4a8d7483388b3685f60f8464feffff498b7f2848c1e6034885ff0f84a4020000498b6f384889743df8488d77f849897728e93dfeffff4a8d7483488b3685f60f847efeffff498b7f2848c1e6034885ff0f8478020000498b6f384889743df8488d77f849897728e957feffff4a8d74834c8b3685f60f845cfeffff498b7f2848c1e6034885ff0f8456020000498b6f384889743df8488d77f849897728e935feffff4a8d74833c8b3685f60f84d6fdffff498b7f2848c1e6034885ff0f8416020000498b6f384889743df8488d77f849897728e9affdffff4a8d7483408b3685f60f84b4fdffff498b7f2848c1e6034885ff0f84b8010000498b6f384889743df8488d77f849897728e98dfdffff4a8d7483448b3685f60f8492fdffff498b7f2848c1e6034885ff0f846e010000498b6f384889743df8488d77f849897728e96bfdffff4a8d7483248b3685f60f84bcfcffff498b7f2848c1e6034885ff0f8488010000498b6f384889743df8488d77f849897728e995fcffff4a8d7483208b3685f60f8472fcffff498b7f2848c1e6034885ff0f845c010000498b6f384889743df8488d77f849897728e94bfcffff4a8d74831c8b3685f60f8428fcffff498b7f2848c1e6034885ff0f8444010000498b6f384889743df8488d77f849897728e901fcffff4a8d7483148b3685f60f84cafbffff498b7f2848c1e6034885ff0f84fa000000498b6f384889743df8488d77f849897728e9a3fbffff4a8d7483188b3685f60f84a8fbffff498b7f2848c1e6034885ff0f84ce000000498b6f384889743df8488d77f849897728e981fbffff4a8d749b108b3685f60f8447fbffff4d8b472848c1e6034d85c00f84ac000000498b7f384a897407f8498d70f849897728e920fbffffe800000000e9b9fbffffe800000000e987fbffffe800000000e909fcffffe800000000e987fbffffe800000000e9e1fbffffe800000000e99bfbffffe800000000e9a5fbffffe800000000e9ebfbffffe800000000e9a5fbffffe800000000e9ebfbffffe800000000e919fbffffe800000000e9fbfaffffe800000000e9b5faffffe800000000e9bffaffffe800000000e9c9faffffe800000000e980faffff4a8d749b108b3685f60f84d1fbffff498b572848c1e6034885d20f84160000004d8b473849897410f8488d72f849897728e9aafbffffe800000000e9a0fbffff488d34d5100000008b3685f60f843ff9ffff4d8b5f2848c1e6034d85db0f84160000004d8b47384b897418f8498d73f849897728e918f9ffffe800000000e90ef9ffff41c78784040000e58bffff49c7879004000098020000e8000000000f1f84000000000041c78784040000ed54ffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e937f8fffff4488d0d63f9ffff49898f68040000e9e9f7fffff441c78784040000f59dffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD  <||@
  Comment 63 8 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 65 10 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 67 12 rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD  <||@
  Comment 71 14 r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 77 16 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 80 18 rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 80 [rdx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 20 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 87 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 97 22 r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD  <||@
  Comment 101 24 r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD  <||@
  Comment 105 26 rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD  <||@
  Comment 109 28 r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD  <||@
  Comment 113 30 BLACKHOLE [r8|DWORD[_] * 8 + 16464]  <||@
  Comment 113 32 BLACKHOLE [r9|DWORD[_] * 8 + 16464]  <||@
  Comment 113 34 BLACKHOLE [rcx|DWORD[_] * 8 + 16464]  <||@
  Comment 113 36 BLACKHOLE [r11|DWORD[_] * 8 + 16464]  <||@
  Comment 113 38 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 116 40 CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 126 block B2 null  <||@
  Comment 126 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 44 MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 133 46 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 141 block B4 null  <||@
  Comment 141 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 50 r11|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 147 52 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 150 54 r8|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 153 56 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 159 58 CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 168 block B6 null  <||@
  Comment 168 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 168 62 CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null  <||@
  Comment 177 block B8 null  <||@
  Comment 177 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 177 74 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null  <||@
  Comment 188 block B15 null  <||@
  Comment 188 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 126 MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 199 128 CMP rax|DWORD y: 3 size: DWORD  <||@
  Comment 202 130 rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 210 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 216 132 JUMP ~[] destination: B15 -> B16  <||@
  Comment 221 block B17 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 221 138 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 140 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null  <||@
  Comment 235 block B24 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 235 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 235 188 MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 244 190 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 247 192 JUMP ~[] destination: B24 -> B16  <||@
  Comment 247 block B16 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 247 134 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 247 136 CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD  <||@
  Comment 258 block B19 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 258 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 258 148 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 263 150 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 265 152 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 269 block B21 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 269 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 269 156 r8|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 273 158 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 277 160 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 286 block B23 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 286 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 164 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 290 166 MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 295 168 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 299 170 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 303 172 JUMP ~[] destination: B23 -> B24  <||@
  Comment 305 block B22 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 305 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 182 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 305 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 310 184 JUMP ~[] destination: B22 -> B24  <||@
  Comment 312 block B151 null  <||@
  Comment 312 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 312 1082 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 314 1084 r11|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 317 1086 r11|QWORD = SHL r11|QWORD y: 32 size: QWORD  <||@
  Comment 321 1088 r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 324 1090 r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD  <||@
  Comment 332 1092 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 335 1094 r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 338 1096 MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD  <||@
  Comment 346 1098 r8|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 349 1100 MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD  <||@
  Comment 357 1102 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 366 POLL_RETURN_FAR  <||@
  Comment 380 block B25 null  <||@
  Comment 380 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 196 rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD  <||@
  Comment 383 198 JUMP ~[] destination: B25 -> B26  <||@
  Comment 388 block B27 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 388 204 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 206 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 427 block B34 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 427 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 427 254 MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 436 256 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 439 258 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null  <||@
  Comment 450 block B41 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 450 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 450 306 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD  <||@
  Comment 459 308 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null  <||@
  Comment 470 block B48 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 470 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 470 356 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD  <||@
  Comment 479 358 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null  <||@
  Comment 490 block B55 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 490 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 490 406 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD  <||@
  Comment 499 408 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 510 block B62 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 510 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 456 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD  <||@
  Comment 519 458 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null  <||@
  Comment 530 block B69 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 530 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 506 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD  <||@
  Comment 539 508 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 550 block B76 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 550 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 550 556 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD  <||@
  Comment 559 558 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null  <||@
  Comment 570 block B83 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 570 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 570 606 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD  <||@
  Comment 579 608 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null  <||@
  Comment 590 block B90 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 590 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 656 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD  <||@
  Comment 599 658 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null  <||@
  Comment 610 block B97 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 610 704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 706 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD  <||@
  Comment 619 708 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null  <||@
  Comment 630 block B104 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 630 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 630 756 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD  <||@
  Comment 639 758 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null  <||@
  Comment 650 block B111 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 650 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 806 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD  <||@
  Comment 659 808 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null  <||@
  Comment 670 block B118 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 670 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 856 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD  <||@
  Comment 679 858 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null  <||@
  Comment 690 block B125 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 690 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 906 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD  <||@
  Comment 699 908 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null  <||@
  Comment 710 block B132 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 710 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 710 956 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD  <||@
  Comment 719 958 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null  <||@
  Comment 730 block B139 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 730 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 730 1006 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD  <||@
  Comment 739 1008 r11|DWORD = LEA [r11|DWORD + 16] size: DWORD  <||@
  Comment 743 1010 JUMP ~[] destination: B139 -> B26  <||@
  Comment 743 block B26 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 743 200 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 743 202 CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD  <||@
  Comment 757 block B142 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 757 1020 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 1022 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null  <||@
  Comment 779 block B149 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 779 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 1070 MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 788 1072 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 791 1074 JUMP ~[] destination: B149 -> B141  <||@
  Comment 791 block B141 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 791 1016 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 800 1018 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD  <||@
  Comment 811 block B71 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 811 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 811 516 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD  <||@
  Comment 816 518 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 818 520 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 826 block B73 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 826 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 826 524 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 830 526 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 834 528 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 843 block B75 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 843 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 843 532 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 847 534 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 852 536 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 856 538 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 860 540 JUMP ~[] destination: B75 -> B76  <||@
  Comment 865 block B85 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 865 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 865 616 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD  <||@
  Comment 870 618 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 872 620 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 880 block B87 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 880 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 880 624 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 884 626 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 888 628 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD  <||@
  Comment 897 block B89 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 897 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 897 632 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 901 634 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 906 636 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 910 638 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 914 640 JUMP ~[] destination: B89 -> B90  <||@
  Comment 919 block B92 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 919 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 919 666 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD  <||@
  Comment 924 668 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 926 670 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD  <||@
  Comment 934 block B94 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 934 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 934 674 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 938 676 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 942 678 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD  <||@
  Comment 951 block B96 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 951 680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 951 682 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 955 684 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 960 686 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 964 688 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 968 690 JUMP ~[] destination: B96 -> B97  <||@
  Comment 973 block B78 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 973 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 973 566 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD  <||@
  Comment 978 568 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 980 570 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD  <||@
  Comment 988 block B80 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 988 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 988 574 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 992 576 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 996 578 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1005 block B82 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1005 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1005 582 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1009 584 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1014 586 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1018 588 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1022 590 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1027 block B99 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1027 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1027 716 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD  <||@
  Comment 1032 718 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1034 720 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD  <||@
  Comment 1042 block B101 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1042 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1042 724 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1046 726 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1050 728 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD  <||@
  Comment 1059 block B103 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1059 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 732 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1063 734 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1068 736 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1072 738 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1076 740 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1081 block B127 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1081 914 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1081 916 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD  <||@
  Comment 1086 918 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1088 920 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD  <||@
  Comment 1096 block B129 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1096 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1096 924 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1100 926 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1104 928 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD  <||@
  Comment 1113 block B131 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1113 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1113 932 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1117 934 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1122 936 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1126 938 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1130 940 JUMP ~[] destination: B131 -> B132  <||@
  Comment 1135 block B134 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1135 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 966 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD  <||@
  Comment 1140 968 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1142 970 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD  <||@
  Comment 1150 block B136 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1150 972 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1150 974 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1154 976 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1158 978 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD  <||@
  Comment 1167 block B138 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1167 980 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1167 982 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1171 984 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1176 986 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1180 988 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1184 990 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1189 block B106 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1189 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1189 766 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD  <||@
  Comment 1194 768 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1196 770 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD  <||@
  Comment 1204 block B108 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1204 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1204 774 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1208 776 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1212 778 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD  <||@
  Comment 1221 block B110 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1221 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1221 782 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1225 784 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1230 786 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1234 788 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1238 790 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1243 block B113 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1243 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1243 816 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD  <||@
  Comment 1248 818 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1250 820 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD  <||@
  Comment 1258 block B115 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1258 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1258 824 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1262 826 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1266 828 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD  <||@
  Comment 1275 block B117 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1275 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1275 832 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1279 834 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1284 836 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1288 838 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1292 840 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1297 block B120 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1297 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1297 866 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD  <||@
  Comment 1302 868 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1304 870 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD  <||@
  Comment 1312 block B122 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1312 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1312 874 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1316 876 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1320 878 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD  <||@
  Comment 1329 block B124 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1329 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1329 882 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1333 884 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1338 886 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1342 888 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1346 890 JUMP ~[] destination: B124 -> B125  <||@
  Comment 1351 block B64 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1351 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1351 466 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD  <||@
  Comment 1356 468 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1358 470 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD  <||@
  Comment 1366 block B66 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1366 472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1366 474 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1370 476 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1374 478 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD  <||@
  Comment 1383 block B68 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1383 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1383 482 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1387 484 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1392 486 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1396 488 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1400 490 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1405 block B57 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1405 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1405 416 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD  <||@
  Comment 1410 418 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1412 420 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 1420 block B59 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1420 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1420 424 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1424 426 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1428 428 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD  <||@
  Comment 1437 block B61 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1437 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1437 432 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1441 434 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1446 436 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1450 438 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1454 440 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1459 block B50 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1459 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1459 366 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD  <||@
  Comment 1464 368 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1466 370 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1474 block B52 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1474 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1474 374 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1478 376 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1482 378 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 1491 block B54 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1491 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1491 382 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1495 384 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1500 386 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1504 388 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1508 390 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1513 block B36 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1513 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1513 266 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD  <||@
  Comment 1518 268 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1520 270 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1528 block B38 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1528 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1528 274 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1532 276 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1536 278 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD  <||@
  Comment 1545 block B40 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1545 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1545 282 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1549 284 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1554 286 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1558 288 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1562 290 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1567 block B43 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1567 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1567 316 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD  <||@
  Comment 1572 318 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1574 320 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD  <||@
  Comment 1582 block B45 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1582 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1582 324 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1586 326 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1590 328 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD  <||@
  Comment 1599 block B47 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1599 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 332 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1603 334 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1608 336 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1612 338 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1616 340 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1621 block B29 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1621 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1621 214 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1626 216 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1628 218 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 1636 block B31 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1636 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1636 222 r8|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1640 224 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1644 226 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1653 block B33 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1653 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1653 230 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1657 232 MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1662 234 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 1666 236 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1670 238 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1675 block B88 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1675 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1675 650 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1675 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1680 652 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1685 block B74 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1685 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1685 550 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1685 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1690 552 JUMP ~[] destination: B74 -> B76  <||@
  Comment 1695 block B123 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1695 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1695 900 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1695 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1700 902 JUMP ~[] destination: B123 -> B125  <||@
  Comment 1705 block B81 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1705 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1705 600 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1705 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1710 602 JUMP ~[] destination: B81 -> B83  <||@
  Comment 1715 block B116 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1715 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1715 850 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1715 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1720 852 JUMP ~[] destination: B116 -> B118  <||@
  Comment 1725 block B95 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1725 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1725 700 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1725 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1730 702 JUMP ~[] destination: B95 -> B97  <||@
  Comment 1735 block B102 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1735 746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1735 750 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1735 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1740 752 JUMP ~[] destination: B102 -> B104  <||@
  Comment 1745 block B130 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1745 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1745 950 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1745 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1750 952 JUMP ~[] destination: B130 -> B132  <||@
  Comment 1755 block B109 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1755 796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1755 800 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1755 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1760 802 JUMP ~[] destination: B109 -> B111  <||@
  Comment 1765 block B137 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1765 996 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1765 1000 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1765 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1770 1002 JUMP ~[] destination: B137 -> B139  <||@
  Comment 1775 block B67 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1775 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1775 500 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1775 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1780 502 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1785 block B60 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1785 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1785 450 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1785 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1790 452 JUMP ~[] destination: B60 -> B62  <||@
  Comment 1795 block B39 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1795 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1795 300 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1795 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1800 302 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1805 block B46 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1805 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1805 350 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1805 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1810 352 JUMP ~[] destination: B46 -> B48  <||@
  Comment 1815 block B53 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1815 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1815 400 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1815 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1820 402 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1825 block B32 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1825 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1825 248 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1825 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1830 250 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1835 block B144 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1835 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1835 1030 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1840 1032 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1842 1034 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD  <||@
  Comment 1850 block B146 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1850 1036 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1850 1038 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1854 1040 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1858 1042 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD  <||@
  Comment 1867 block B148 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1867 1044 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1867 1046 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1871 1048 MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1876 1050 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1880 1052 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1884 1054 JUMP ~[] destination: B148 -> B149  <||@
  Comment 1889 block B147 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1889 1060 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1889 1064 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1889 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1894 1066 JUMP ~[] destination: B147 -> B149  <||@
  Comment 1899 block B10 null  <||@
  Comment 1899 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1899 82 rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD  <||@
  Comment 1907 84 rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD  <||@
  Comment 1909 86 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 1917 block B12 null  <||@
  Comment 1917 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1917 90 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1921 92 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1925 94 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 1934 block B14 null  <||@
  Comment 1934 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1934 98 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1938 100 MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1943 102 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1947 104 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1951 106 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1956 block B13 null  <||@
  Comment 1956 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1956 120 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1956 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1961 122 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1966 block B152 null  <||@
  Comment 1966 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1966 1106 MOV [r15|QWORD + 1156] y: -29723 size: DWORD  <||@
  Comment 1977 1108 MOV [r15|QWORD + 1168] y: 664 size: QWORD  <||@
  Comment 1988 1110 DEOPT info [bci:31]  <||@
  Comment 1988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1993 [rbx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:869) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |-   <||@
  Comment 2001 block B1 null  <||@
  Comment 2001 1112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2001 1114 MOV [r15|QWORD + 1156] y: -43795 size: DWORD  <||@
  Comment 2012 1116 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2023 1118 DEOPT info [bci:10]  <||@
  Comment 2023 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2028 [rsi:0]at java.util.HashMap.clear(HashMap.java:867) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2041 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 2066 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 2094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2099 [rdx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2107 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2107 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 2113 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2056[java.util.HashMap.clear()]"
  method "HotSpotCompilation-2056[java.util.HashMap.clear()]"
  date 1714038087788
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02ab8255c0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85a3fa35ff66669089842400c0feff4883ec189041817f20000000000f85ba07000048896c24100f318bd248c1e2204c8bd24c0bd08b56248b04d50c00000049bbd88c5e2e06000000458b437c458b4b70418b4b74458b5b78ff4618837e14010f8c53070000c746140000000085c00f84ab000000448bd841ffcb4d63db448bc08bda48c1e3034d3bc30f870900000083f8020f83fd06000041807f40000f85af060000c704d5100000000000000083f803ba020000000f42d041bb01000000e91a00000066669041807f40000f851700000042c7449b100000000041ffc3413bd30f8e7c000000ebde4a8d749b108b3685f674de4d8b472848c1e6034d85c00f8413000000498b7f384a897407f8498d70f849897728ebbae80a234affebb30f31448bda49c1e3204c0bd84e8b04cd504000004d2bda4d03d84e891ccd5040000049ffc04c8904cd50400000488b6c24104883c418493ba7500400000f8789060000c38d50f0e9630100006666660f1f84000000000066666690660f1f8400000000006666669041807f40000f85aa04000042c7449b10000000004d63c341807f40000f852704000042c74483140000000041807f40000f854904000042c74483180000000041807f40000f85c903000042c744831c0000000041807f40000f857f03000042c74483200000000041807f40000f853503000042c74483240000000041807f40000f850501000042c74483280000000041807f40000f859301000042c744832c0000000041807f40000f851301000042c74483300000000041807f40000f853501000042c74483340000000041807f40000f858d01000042c74483380000000041807f40000f851b02000042c744833c0000000041807f40000f853d02000042c74483400000000041807f40000f855f02000042c74483440000000041807f40000f857301000042c74483480000000041807f40000f859501000042c744834c00000000458d5b10413bd30f8fb0feffffe92b0000006666660f1f84000000000041807f40000f852004000042c7449b100000000041ffc3660f1f840000000000413bc30f8e0ffeffffebd54a8d7483288b3685f60f84ecfeffff498b7f2848c1e6034885ff0f844a030000498b6f384889743df8488d77f849897728e9c5feffff4a8d7483308b3685f60f84defeffff498b7f2848c1e6034885ff0f840a030000498b6f384889743df8488d77f849897728e9b7feffff4a8d7483348b3685f60f84bcfeffff498b7f2848c1e6034885ff0f8406030000498b6f384889743df8488d77f849897728e995feffff4a8d74832c8b3685f60f845efeffff498b7f2848c1e6034885ff0f84bc020000498b6f384889743df8488d77f849897728e937feffff4a8d7483388b3685f60f8464feffff498b7f2848c1e6034885ff0f84a4020000498b6f384889743df8488d77f849897728e93dfeffff4a8d7483488b3685f60f847efeffff498b7f2848c1e6034885ff0f8478020000498b6f384889743df8488d77f849897728e957feffff4a8d74834c8b3685f60f845cfeffff498b7f2848c1e6034885ff0f8456020000498b6f384889743df8488d77f849897728e935feffff4a8d74833c8b3685f60f84d6fdffff498b7f2848c1e6034885ff0f8416020000498b6f384889743df8488d77f849897728e9affdffff4a8d7483408b3685f60f84b4fdffff498b7f2848c1e6034885ff0f84b8010000498b6f384889743df8488d77f849897728e98dfdffff4a8d7483448b3685f60f8492fdffff498b7f2848c1e6034885ff0f846e010000498b6f384889743df8488d77f849897728e96bfdffff4a8d7483248b3685f60f84bcfcffff498b7f2848c1e6034885ff0f8488010000498b6f384889743df8488d77f849897728e995fcffff4a8d7483208b3685f60f8472fcffff498b7f2848c1e6034885ff0f845c010000498b6f384889743df8488d77f849897728e94bfcffff4a8d74831c8b3685f60f8428fcffff498b7f2848c1e6034885ff0f8444010000498b6f384889743df8488d77f849897728e901fcffff4a8d7483148b3685f60f84cafbffff498b7f2848c1e6034885ff0f84fa000000498b6f384889743df8488d77f849897728e9a3fbffff4a8d7483188b3685f60f84a8fbffff498b7f2848c1e6034885ff0f84ce000000498b6f384889743df8488d77f849897728e981fbffff4a8d749b108b3685f60f8447fbffff4d8b472848c1e6034d85c00f84ac000000498b7f384a897407f8498d70f849897728e920fbffffe8b01d4affe9b9fbffffe8a61d4affe987fbffffe89c1d4affe909fcffffe8921d4affe987fbffffe8881d4affe9e1fbffffe87e1d4affe99bfbffffe8741d4affe9a5fbffffe86a1d4affe9ebfbffffe8601d4affe9a5fbffffe8561d4affe9ebfbffffe84c1d4affe919fbffffe8421d4affe9fbfaffffe8381d4affe9b5faffffe82e1d4affe9bffaffffe8241d4affe9c9faffffe81a1d4affe980faffff4a8d749b108b3685f60f84d1fbffff498b572848c1e6034885d20f84160000004d8b473849897410f8488d72f849897728e9aafbffffe8da1c4affe9a0fbffff488d34d5100000008b3685f60f843ff9ffff4d8b5f2848c1e6034d85db0f84160000004d8b47384b897418f8498d73f849897728e918f9ffffe8971c4affe90ef9ffff41c78784040000e58bffff49c7879004000098020000e8f15336ff0f1f84000000000041c78784040000ed54ffff49c7879004000014000000e8ce5336ff0f1f84000000000048896c2410e8625434ffe937f8fffff4488d0d63f9ffff49898f68040000e9296236fff441c78784040000f59dffff49c7879004000000000000e8875336ff0f1f840000000000e800194afff4e81a5136fff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3dd17338 slotKind: QWORD  <||@
  Comment 63 8 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 65 10 rdx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 67 12 rdx|QWORD = SHL rdx|QWORD y: 32 size: QWORD  <||@
  Comment 71 14 r10|QWORD = OR (x: rdx|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 77 16 rdx|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 80 18 rax|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 80 [rdx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 20 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 87 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 97 22 r8|DWORD[_] = MOV [r11|QWORD[.] + 124] size: DWORD  <||@
  Comment 101 24 r9|DWORD[_] = MOV [r11|QWORD[.] + 112] size: DWORD  <||@
  Comment 105 26 rcx|DWORD[_] = MOV [r11|QWORD[.] + 116] size: DWORD  <||@
  Comment 109 28 r11|DWORD[_] = MOV [r11|QWORD[.] + 120] size: DWORD  <||@
  Comment 113 30 BLACKHOLE [r8|DWORD[_] * 8 + 16464]  <||@
  Comment 113 32 BLACKHOLE [r9|DWORD[_] * 8 + 16464]  <||@
  Comment 113 34 BLACKHOLE [rcx|DWORD[_] * 8 + 16464]  <||@
  Comment 113 36 BLACKHOLE [r11|DWORD[_] * 8 + 16464]  <||@
  Comment 113 38 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 116 40 CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 126 block B2 null  <||@
  Comment 126 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 44 MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 133 46 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.016780530542158334 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 141 block B4 null  <||@
  Comment 141 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 50 r11|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 147 52 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 150 54 r8|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 153 56 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 159 58 CMPBRANCH (x: r8|QWORD, y: r11|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 168 block B6 null  <||@
  Comment 168 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 168 62 CMPCONSTBRANCH rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null  <||@
  Comment 177 block B8 null  <||@
  Comment 177 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 177 74 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null  <||@
  Comment 188 block B15 null  <||@
  Comment 188 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 126 MOV [rdx|DWORD[_] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 199 128 CMP rax|DWORD y: 3 size: DWORD  <||@
  Comment 202 130 rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 210 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 216 132 JUMP ~[] destination: B15 -> B16  <||@
  Comment 221 block B17 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 221 138 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 140 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null  <||@
  Comment 235 block B24 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 235 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 235 188 MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 244 190 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 247 192 JUMP ~[] destination: B24 -> B16  <||@
  Comment 247 block B16 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 247 134 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 247 136 CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD  <||@
  Comment 258 block B19 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 258 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 258 148 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 263 150 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 265 152 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 269 block B21 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 269 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 269 156 r8|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 273 158 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 277 160 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 286 block B23 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 286 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 164 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 290 166 MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 295 168 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 299 170 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 303 172 JUMP ~[] destination: B23 -> B24  <||@
  Comment 305 block B22 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 305 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 182 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 305 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 310 184 JUMP ~[] destination: B22 -> B24  <||@
  Comment 312 block B151 null  <||@
  Comment 312 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 312 1082 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 314 1084 r11|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 317 1086 r11|QWORD = SHL r11|QWORD y: 32 size: QWORD  <||@
  Comment 321 1088 r11|QWORD = OR (x: r11|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 324 1090 r8|QWORD = MOV [r9|DWORD[_] * 8 + 16464] size: QWORD  <||@
  Comment 332 1092 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 335 1094 r11|QWORD = ADD (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 338 1096 MOV (x: [r9|DWORD[_] * 8 + 16464], y: r11|QWORD) size: QWORD  <||@
  Comment 346 1098 r8|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 349 1100 MOV (x: [rcx|DWORD[_] * 8 + 16464], y: r8|QWORD) size: QWORD  <||@
  Comment 357 1102 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 366 POLL_RETURN_FAR  <||@
  Comment 380 block B25 null  <||@
  Comment 380 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 196 rdx|DWORD = LEA [rax|DWORD - 16] size: DWORD  <||@
  Comment 383 198 JUMP ~[] destination: B25 -> B26  <||@
  Comment 388 block B27 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 388 204 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 206 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 427 block B34 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 427 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 427 254 MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 436 256 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 439 258 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null  <||@
  Comment 450 block B41 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 450 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 450 306 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 20] y: 0 size: DWORD  <||@
  Comment 459 308 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null  <||@
  Comment 470 block B48 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 470 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 470 356 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 24] y: 0 size: DWORD  <||@
  Comment 479 358 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null  <||@
  Comment 490 block B55 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 490 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 490 406 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 28] y: 0 size: DWORD  <||@
  Comment 499 408 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 510 block B62 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 510 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 456 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 32] y: 0 size: DWORD  <||@
  Comment 519 458 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null  <||@
  Comment 530 block B69 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 530 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 506 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 36] y: 0 size: DWORD  <||@
  Comment 539 508 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 550 block B76 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 550 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 550 556 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 40] y: 0 size: DWORD  <||@
  Comment 559 558 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null  <||@
  Comment 570 block B83 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 570 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 570 606 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 44] y: 0 size: DWORD  <||@
  Comment 579 608 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null  <||@
  Comment 590 block B90 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 590 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 656 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 48] y: 0 size: DWORD  <||@
  Comment 599 658 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null  <||@
  Comment 610 block B97 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 610 704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 706 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 52] y: 0 size: DWORD  <||@
  Comment 619 708 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null  <||@
  Comment 630 block B104 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 630 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 630 756 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 56] y: 0 size: DWORD  <||@
  Comment 639 758 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null  <||@
  Comment 650 block B111 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 650 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 806 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 60] y: 0 size: DWORD  <||@
  Comment 659 808 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null  <||@
  Comment 670 block B118 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 670 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 856 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 64] y: 0 size: DWORD  <||@
  Comment 679 858 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null  <||@
  Comment 690 block B125 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 690 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 906 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 68] y: 0 size: DWORD  <||@
  Comment 699 908 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null  <||@
  Comment 710 block B132 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 710 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 710 956 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 72] y: 0 size: DWORD  <||@
  Comment 719 958 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null  <||@
  Comment 730 block B139 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 730 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 730 1006 MOV [rbx|QWORD[.] + r8|QWORD * 4 + 76] y: 0 size: DWORD  <||@
  Comment 739 1008 r11|DWORD = LEA [r11|DWORD + 16] size: DWORD  <||@
  Comment 743 1010 JUMP ~[] destination: B139 -> B26  <||@
  Comment 743 block B26 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 743 200 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 743 202 CMPBRANCH (x: rdx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7269292390817075 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD  <||@
  Comment 757 block B142 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 757 1020 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 1022 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null  <||@
  Comment 779 block B149 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 779 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 1070 MOV [rbx|QWORD[.] + r11|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 788 1072 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 791 1074 JUMP ~[] destination: B149 -> B141  <||@
  Comment 791 block B141 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 791 1016 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 800 1018 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD  <||@
  Comment 811 block B71 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 811 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 811 516 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 40] size: QWORD  <||@
  Comment 816 518 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 818 520 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 826 block B73 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 826 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 826 524 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 830 526 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 834 528 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 843 block B75 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 843 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 843 532 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 847 534 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 852 536 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 856 538 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 860 540 JUMP ~[] destination: B75 -> B76  <||@
  Comment 865 block B85 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 865 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 865 616 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 48] size: QWORD  <||@
  Comment 870 618 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 872 620 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 880 block B87 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 880 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 880 624 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 884 626 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 888 628 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD  <||@
  Comment 897 block B89 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 897 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 897 632 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 901 634 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 906 636 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 910 638 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 914 640 JUMP ~[] destination: B89 -> B90  <||@
  Comment 919 block B92 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 919 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 919 666 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 52] size: QWORD  <||@
  Comment 924 668 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 926 670 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD  <||@
  Comment 934 block B94 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 934 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 934 674 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 938 676 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 942 678 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD  <||@
  Comment 951 block B96 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 951 680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 951 682 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 955 684 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 960 686 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 964 688 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 968 690 JUMP ~[] destination: B96 -> B97  <||@
  Comment 973 block B78 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 973 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 973 566 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 44] size: QWORD  <||@
  Comment 978 568 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 980 570 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD  <||@
  Comment 988 block B80 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 988 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 988 574 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 992 576 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 996 578 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1005 block B82 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1005 580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1005 582 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1009 584 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1014 586 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1018 588 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1022 590 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1027 block B99 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1027 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1027 716 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 56] size: QWORD  <||@
  Comment 1032 718 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1034 720 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD  <||@
  Comment 1042 block B101 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1042 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1042 724 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1046 726 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1050 728 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD  <||@
  Comment 1059 block B103 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1059 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 732 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1063 734 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1068 736 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1072 738 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1076 740 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1081 block B127 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1081 914 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1081 916 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 72] size: QWORD  <||@
  Comment 1086 918 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1088 920 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD  <||@
  Comment 1096 block B129 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1096 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1096 924 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1100 926 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1104 928 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD  <||@
  Comment 1113 block B131 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1113 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1113 932 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1117 934 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1122 936 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1126 938 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1130 940 JUMP ~[] destination: B131 -> B132  <||@
  Comment 1135 block B134 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1135 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 966 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 76] size: QWORD  <||@
  Comment 1140 968 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1142 970 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD  <||@
  Comment 1150 block B136 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1150 972 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1150 974 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1154 976 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1158 978 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD  <||@
  Comment 1167 block B138 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1167 980 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1167 982 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1171 984 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1176 986 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1180 988 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1184 990 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1189 block B106 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1189 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1189 766 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 60] size: QWORD  <||@
  Comment 1194 768 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1196 770 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD  <||@
  Comment 1204 block B108 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1204 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1204 774 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1208 776 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1212 778 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD  <||@
  Comment 1221 block B110 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1221 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1221 782 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1225 784 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1230 786 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1234 788 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1238 790 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1243 block B113 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1243 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1243 816 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 64] size: QWORD  <||@
  Comment 1248 818 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1250 820 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD  <||@
  Comment 1258 block B115 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1258 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1258 824 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1262 826 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1266 828 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD  <||@
  Comment 1275 block B117 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1275 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1275 832 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1279 834 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1284 836 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1288 838 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1292 840 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1297 block B120 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1297 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1297 866 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 68] size: QWORD  <||@
  Comment 1302 868 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1304 870 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD  <||@
  Comment 1312 block B122 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1312 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1312 874 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1316 876 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1320 878 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD  <||@
  Comment 1329 block B124 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1329 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1329 882 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1333 884 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1338 886 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1342 888 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1346 890 JUMP ~[] destination: B124 -> B125  <||@
  Comment 1351 block B64 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1351 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1351 466 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 36] size: QWORD  <||@
  Comment 1356 468 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1358 470 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD  <||@
  Comment 1366 block B66 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1366 472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1366 474 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1370 476 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1374 478 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD  <||@
  Comment 1383 block B68 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1383 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1383 482 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1387 484 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1392 486 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1396 488 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1400 490 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1405 block B57 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1405 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1405 416 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 32] size: QWORD  <||@
  Comment 1410 418 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1412 420 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 1420 block B59 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1420 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1420 424 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1424 426 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1428 428 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD  <||@
  Comment 1437 block B61 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1437 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1437 432 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1441 434 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1446 436 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1450 438 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1454 440 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1459 block B50 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1459 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1459 366 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 28] size: QWORD  <||@
  Comment 1464 368 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1466 370 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1474 block B52 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1474 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1474 374 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1478 376 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1482 378 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 1491 block B54 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1491 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1491 382 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1495 384 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1500 386 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1504 388 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1508 390 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1513 block B36 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1513 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1513 266 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 20] size: QWORD  <||@
  Comment 1518 268 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1520 270 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1528 block B38 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1528 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1528 274 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1532 276 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1536 278 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD  <||@
  Comment 1545 block B40 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1545 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1545 282 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1549 284 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1554 286 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1558 288 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1562 290 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1567 block B43 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1567 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1567 316 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r8|QWORD * 4 + 24] size: QWORD  <||@
  Comment 1572 318 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1574 320 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD  <||@
  Comment 1582 block B45 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1582 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1582 324 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1586 326 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1590 328 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD  <||@
  Comment 1599 block B47 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1599 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 332 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1603 334 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1608 336 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1612 338 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1616 340 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1621 block B29 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1621 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1621 214 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1626 216 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1628 218 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 1636 block B31 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1636 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1636 222 r8|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1640 224 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1644 226 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1653 block B33 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1653 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1653 230 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1657 232 MOV (x: [rdi|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1662 234 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 1666 236 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1670 238 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1675 block B88 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1675 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1675 650 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1675 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1680 652 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1685 block B74 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1685 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1685 550 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1685 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1690 552 JUMP ~[] destination: B74 -> B76  <||@
  Comment 1695 block B123 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1695 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1695 900 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1695 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1700 902 JUMP ~[] destination: B123 -> B125  <||@
  Comment 1705 block B81 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1705 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1705 600 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1705 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1710 602 JUMP ~[] destination: B81 -> B83  <||@
  Comment 1715 block B116 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1715 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1715 850 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1715 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1720 852 JUMP ~[] destination: B116 -> B118  <||@
  Comment 1725 block B95 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1725 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1725 700 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1725 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1730 702 JUMP ~[] destination: B95 -> B97  <||@
  Comment 1735 block B102 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1735 746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1735 750 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1735 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1740 752 JUMP ~[] destination: B102 -> B104  <||@
  Comment 1745 block B130 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1745 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1745 950 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1745 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1750 952 JUMP ~[] destination: B130 -> B132  <||@
  Comment 1755 block B109 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1755 796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1755 800 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1755 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1760 802 JUMP ~[] destination: B109 -> B111  <||@
  Comment 1765 block B137 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1765 996 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1765 1000 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1765 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1770 1002 JUMP ~[] destination: B137 -> B139  <||@
  Comment 1775 block B67 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1775 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1775 500 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1775 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1780 502 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1785 block B60 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1785 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1785 450 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1785 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1790 452 JUMP ~[] destination: B60 -> B62  <||@
  Comment 1795 block B39 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1795 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1795 300 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1795 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1800 302 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1805 block B46 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1805 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1805 350 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1805 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1810 352 JUMP ~[] destination: B46 -> B48  <||@
  Comment 1815 block B53 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1815 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1815 400 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1815 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1820 402 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1825 block B32 loop 1 depth 1 header:177|LoopBegin  <||@
  Comment 1825 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1825 248 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1825 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1830 250 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1835 block B144 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1835 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1835 1030 rsi|QWORD[.+] = LEA [rbx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1840 1032 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1842 1034 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD  <||@
  Comment 1850 block B146 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1850 1036 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1850 1038 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1854 1040 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1858 1042 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD  <||@
  Comment 1867 block B148 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1867 1044 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1867 1046 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1871 1048 MOV (x: [r8|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1876 1050 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1880 1052 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1884 1054 JUMP ~[] destination: B148 -> B149  <||@
  Comment 1889 block B147 loop 2 depth 1 header:197|LoopBegin  <||@
  Comment 1889 1060 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1889 1064 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1889 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1894 1066 JUMP ~[] destination: B147 -> B149  <||@
  Comment 1899 block B10 null  <||@
  Comment 1899 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1899 82 rsi|QWORD[*] = LEA [rdx|DWORD[_] * 8 + 16] size: QWORD  <||@
  Comment 1907 84 rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD  <||@
  Comment 1909 86 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 1917 block B12 null  <||@
  Comment 1917 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1917 90 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1921 92 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@24bbef34 encoding: base: 0 shift: 3  <||@
  Comment 1925 94 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 1934 block B14 null  <||@
  Comment 1934 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1934 98 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1938 100 MOV (x: [r8|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1943 102 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1947 104 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1951 106 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1956 block B13 null  <||@
  Comment 1956 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1956 120 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1956 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1961 122 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1966 block B152 null  <||@
  Comment 1966 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1966 1106 MOV [r15|QWORD + 1156] y: -29723 size: DWORD  <||@
  Comment 1977 1108 MOV [r15|QWORD + 1168] y: 664 size: QWORD  <||@
  Comment 1988 1110 DEOPT info [bci:31]  <||@
  Comment 1988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1993 [rbx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:869) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |-   <||@
  Comment 2001 block B1 null  <||@
  Comment 2001 1112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2001 1114 MOV [r15|QWORD + 1156] y: -43795 size: DWORD  <||@
  Comment 2012 1116 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2023 1118 DEOPT info [bci:10]  <||@
  Comment 2023 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2028 [rsi:0]at java.util.HashMap.clear(HashMap.java:867) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2041 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 2066 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 2094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2099 [rdx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2107 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2107 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 2113 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
